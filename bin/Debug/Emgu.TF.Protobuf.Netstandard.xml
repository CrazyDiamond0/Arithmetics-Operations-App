<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emgu.TF.Protobuf.Netstandard</name>
    </assembly>
    <members>
        <member name="T:Tensorflow.AllocationDescriptionReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/allocation_description.proto</summary>
        </member>
        <member name="P:Tensorflow.AllocationDescriptionReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/allocation_description.proto</summary>
        </member>
        <member name="F:Tensorflow.AllocationDescription.RequestedBytesFieldNumber">
            <summary>Field number for the "requested_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocationDescription.RequestedBytes">
            <summary>
            Total number of bytes requested
            </summary>
        </member>
        <member name="F:Tensorflow.AllocationDescription.AllocatedBytesFieldNumber">
            <summary>Field number for the "allocated_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocationDescription.AllocatedBytes">
            <summary>
            Total number of bytes allocated if known
            </summary>
        </member>
        <member name="F:Tensorflow.AllocationDescription.AllocatorNameFieldNumber">
            <summary>Field number for the "allocator_name" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocationDescription.AllocatorName">
            <summary>
            Name of the allocator used
            </summary>
        </member>
        <member name="F:Tensorflow.AllocationDescription.AllocationIdFieldNumber">
            <summary>Field number for the "allocation_id" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocationDescription.AllocationId">
            <summary>
            Identifier of the allocated buffer if known
            </summary>
        </member>
        <member name="F:Tensorflow.AllocationDescription.HasSingleReferenceFieldNumber">
            <summary>Field number for the "has_single_reference" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocationDescription.HasSingleReference">
            <summary>
            Set if this tensor only has one remaining reference
            </summary>
        </member>
        <member name="F:Tensorflow.AllocationDescription.PtrFieldNumber">
            <summary>Field number for the "ptr" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocationDescription.Ptr">
            <summary>
            Address of the allocation.
            </summary>
        </member>
        <member name="T:Tensorflow.ApiDefReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/api_def.proto</summary>
        </member>
        <member name="P:Tensorflow.ApiDefReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/api_def.proto</summary>
        </member>
        <member name="T:Tensorflow.ApiDef">
             <summary>
             Used to specify and override the default API &amp; behavior in the
             generated code for client languages, from what you would get from
             the OpDef alone. There will be a set of ApiDefs that are common
             to all client languages, and another set per client language.
             The per-client-language ApiDefs will inherit values from the
             common ApiDefs which it can either replace or modify.
            
             We separate the API definition from the OpDef so we can evolve the
             API while remaining backwards compatible when interpretting old
             graphs.  Overrides go in an "api_def.pbtxt" file with a text-format
             ApiDefs message.
            
             WARNING: Be *very* careful changing the API for any existing op --
             you can change the semantics of existing code.  These changes may
             need to wait until a major release of TensorFlow to avoid breaking
             our compatibility promises.
             </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.GraphOpNameFieldNumber">
            <summary>Field number for the "graph_op_name" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.GraphOpName">
            <summary>
            Name of the op (in the OpDef) to specify the API for.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.DeprecationMessageFieldNumber">
            <summary>Field number for the "deprecation_message" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.DeprecationMessage">
            <summary>
            If this op is deprecated, set deprecation message to the message
            that should be logged when this op is used.
            The message should indicate alternative op to use, if any.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.DeprecationVersionFieldNumber">
            <summary>Field number for the "deprecation_version" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.DeprecationVersion">
            <summary>
            Major version when the op will be deleted. For e.g. set this
            value to 2 if op API should be removed in TensorFlow 2.0 and
            deprecated in versions before that.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.VisibilityFieldNumber">
            <summary>Field number for the "visibility" field.</summary>
        </member>
        <member name="F:Tensorflow.ApiDef.EndpointFieldNumber">
            <summary>Field number for the "endpoint" field.</summary>
        </member>
        <member name="F:Tensorflow.ApiDef.InArgFieldNumber">
            <summary>Field number for the "in_arg" field.</summary>
        </member>
        <member name="F:Tensorflow.ApiDef.OutArgFieldNumber">
            <summary>Field number for the "out_arg" field.</summary>
        </member>
        <member name="F:Tensorflow.ApiDef.ArgOrderFieldNumber">
            <summary>Field number for the "arg_order" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.ArgOrder">
            <summary>
            List of original in_arg names to specify new argument order.
            Length of arg_order should be either empty to keep current order
            or match size of in_arg.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.AttrFieldNumber">
            <summary>Field number for the "attr" field.</summary>
        </member>
        <member name="F:Tensorflow.ApiDef.SummaryFieldNumber">
            <summary>Field number for the "summary" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Summary">
            <summary>
            One-line human-readable description of what the Op does.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Description">
            <summary>
            Additional, longer human-readable description of what the Op does.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.DescriptionPrefixFieldNumber">
            <summary>Field number for the "description_prefix" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.DescriptionPrefix">
            <summary>
            Modify an existing/inherited description by adding text to the beginning
            or end.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.DescriptionSuffixFieldNumber">
            <summary>Field number for the "description_suffix" field.</summary>
        </member>
        <member name="T:Tensorflow.ApiDef.Types">
            <summary>Container for nested types declared in the ApiDef message type.</summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Visibility.DefaultVisibility">
            <summary>
            Normally this is "VISIBLE" unless you are inheriting a
            different value from another ApiDef.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Visibility.Visible">
            <summary>
            Publicly visible in the API.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Visibility.Skip">
            <summary>
            Do not include this op in the generated API. If visibility is
            set to 'SKIP', other fields are ignored for this op.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Visibility.Hidden">
            <summary>
            Hide this op by putting it into an internal namespace (or whatever
            is appropriate in the target language).
            </summary>
        </member>
        <member name="T:Tensorflow.ApiDef.Types.Endpoint">
            <summary>
            If you specify any endpoint, this will replace all of the
            inherited endpoints.  The first endpoint should be the
            "canonical" endpoint, and should not be deprecated (unless all
            endpoints are deprecated).
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Endpoint.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Types.Endpoint.Name">
            <summary>
            Name should be either like "CamelCaseName" or
            "Package.CamelCaseName". Client-language-specific ApiDefs may
            use a snake_case convention instead of CamelCase.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Endpoint.DeprecatedFieldNumber">
            <summary>Field number for the "deprecated" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Types.Endpoint.Deprecated">
            <summary>
            Set if this endpoint is deprecated. If set to true, a message suggesting
            to use a non-deprecated endpoint instead will be printed. If all
            endpoints are deprecated, set deprecation_message in ApiDef instead.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Endpoint.DeprecationVersionFieldNumber">
            <summary>Field number for the "deprecation_version" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Types.Endpoint.DeprecationVersion">
            <summary>
            Major version when an endpoint will be deleted. For e.g. set this
            value to 2 if endpoint should be removed in TensorFlow 2.0 and
            deprecated in versions before that.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Arg.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Arg.RenameToFieldNumber">
            <summary>Field number for the "rename_to" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Types.Arg.RenameTo">
            <summary>
            Change the name used to access this arg in the API from what
            is used in the GraphDef.  Note that these names in `backticks`
            will also be replaced in the summary &amp; description fields.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Arg.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Types.Arg.Description">
            <summary>
            Note: this will replace any inherited arg doc. There is no
            current way of modifying arg descriptions (other than replacing
            them entirely) as can be done with op descriptions.
            </summary>
        </member>
        <member name="T:Tensorflow.ApiDef.Types.Attr">
            <summary>
            Description of the graph-construction-time configuration of this
            Op.  That is to say, this describes the attr fields that will
            be specified in the NodeDef.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Attr.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Attr.RenameToFieldNumber">
            <summary>Field number for the "rename_to" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Types.Attr.RenameTo">
            <summary>
            Change the name used to access this attr in the API from what
            is used in the GraphDef.  Note that these names in `backticks`
            will also be replaced in the summary &amp; description fields.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Attr.DefaultValueFieldNumber">
            <summary>Field number for the "default_value" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Types.Attr.DefaultValue">
            <summary>
            Specify a new default value to use for this attr.  This default
            will be used when creating new graphs, as opposed to the
            default in the OpDef, which will be used when interpreting old
            GraphDefs.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDef.Types.Attr.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Tensorflow.ApiDef.Types.Attr.Description">
            <summary>
            Note: this will replace any inherited attr doc, there is no current
            way of modifying attr descriptions as can be done with op descriptions.
            </summary>
        </member>
        <member name="F:Tensorflow.ApiDefs.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="T:Tensorflow.AttrValueReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/attr_value.proto</summary>
        </member>
        <member name="P:Tensorflow.AttrValueReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/attr_value.proto</summary>
        </member>
        <member name="T:Tensorflow.AttrValue">
            <summary>
            Protocol buffer representing the value for an attr used to configure an Op.
            Comment indicates the corresponding attr type.  Only the field matching the
            attr type may be filled.
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.SFieldNumber">
            <summary>Field number for the "s" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.S">
            <summary>
            "string"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.IFieldNumber">
            <summary>Field number for the "i" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.I">
            <summary>
            "int"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.FFieldNumber">
            <summary>Field number for the "f" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.F">
            <summary>
            "float"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.BFieldNumber">
            <summary>Field number for the "b" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.B">
            <summary>
            "bool"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Type">
            <summary>
            "type"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Shape">
            <summary>
            "shape"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Tensor">
            <summary>
            "tensor"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.ListFieldNumber">
            <summary>Field number for the "list" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.List">
            <summary>
            any "list(...)"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.FuncFieldNumber">
            <summary>Field number for the "func" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Func">
            <summary>
            "func" represents a function. func.name is a function's name or
            a primitive op's name. func.attr.first is the name of an attr
            defined for that function. func.attr.second is the value for
            that attr in the instantiation.
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.PlaceholderFieldNumber">
            <summary>Field number for the "placeholder" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Placeholder">
            <summary>
            This is a placeholder only used in nodes defined inside a
            function.  It indicates the attr value will be supplied when
            the function is instantiated.  For example, let us suppose a
            node "N" in function "FN". "N" has an attr "A" with value
            placeholder = "foo". When FN is instantiated with attr "foo"
            set to "bar", the instantiated node N's attr A will have been
            given the value "bar".
            </summary>
        </member>
        <member name="T:Tensorflow.AttrValue.ValueOneofCase">
            <summary>Enum of possible cases for the "value" oneof.</summary>
        </member>
        <member name="T:Tensorflow.AttrValue.Types">
            <summary>Container for nested types declared in the AttrValue message type.</summary>
        </member>
        <member name="T:Tensorflow.AttrValue.Types.ListValue">
            <summary>
            LINT.IfChange
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.Types.ListValue.SFieldNumber">
            <summary>Field number for the "s" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Types.ListValue.S">
            <summary>
            "list(string)"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.Types.ListValue.IFieldNumber">
            <summary>Field number for the "i" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Types.ListValue.I">
            <summary>
            "list(int)"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.Types.ListValue.FFieldNumber">
            <summary>Field number for the "f" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Types.ListValue.F">
            <summary>
            "list(float)"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.Types.ListValue.BFieldNumber">
            <summary>Field number for the "b" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Types.ListValue.B">
            <summary>
            "list(bool)"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.Types.ListValue.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Types.ListValue.Type">
            <summary>
            "list(type)"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.Types.ListValue.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Types.ListValue.Shape">
            <summary>
            "list(shape)"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.Types.ListValue.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Types.ListValue.Tensor">
            <summary>
            "list(tensor)"
            </summary>
        </member>
        <member name="F:Tensorflow.AttrValue.Types.ListValue.FuncFieldNumber">
            <summary>Field number for the "func" field.</summary>
        </member>
        <member name="P:Tensorflow.AttrValue.Types.ListValue.Func">
            <summary>
            "list(attr)"
            </summary>
        </member>
        <member name="T:Tensorflow.NameAttrList">
            <summary>
            A list of attr names and their values. The whole list is attached
            with a string name.  E.g., MatMul[T=float].
            </summary>
        </member>
        <member name="F:Tensorflow.NameAttrList.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.NameAttrList.AttrFieldNumber">
            <summary>Field number for the "attr" field.</summary>
        </member>
        <member name="T:Tensorflow.AutotuningReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/autotuning.proto</summary>
        </member>
        <member name="P:Tensorflow.AutotuningReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/autotuning.proto</summary>
        </member>
        <member name="F:Tensorflow.CudnnVersion.MajorFieldNumber">
            <summary>Field number for the "major" field.</summary>
        </member>
        <member name="F:Tensorflow.CudnnVersion.MinorFieldNumber">
            <summary>Field number for the "minor" field.</summary>
        </member>
        <member name="F:Tensorflow.CudnnVersion.PatchFieldNumber">
            <summary>Field number for the "patch" field.</summary>
        </member>
        <member name="F:Tensorflow.ComputeCapability.MajorFieldNumber">
            <summary>Field number for the "major" field.</summary>
        </member>
        <member name="F:Tensorflow.ComputeCapability.MinorFieldNumber">
            <summary>Field number for the "minor" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.ScratchBytesFieldNumber">
            <summary>Field number for the "scratch_bytes" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.RunTimeFieldNumber">
            <summary>Field number for the "run_time" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.FailureFieldNumber">
            <summary>Field number for the "failure" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.ConvFieldNumber">
            <summary>Field number for the "conv" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.GemmFieldNumber">
            <summary>Field number for the "gemm" field.</summary>
        </member>
        <member name="T:Tensorflow.AutotuneResult.KeyOneofCase">
            <summary>Enum of possible cases for the "key" oneof.</summary>
        </member>
        <member name="T:Tensorflow.AutotuneResult.Types">
            <summary>Container for nested types declared in the AutotuneResult message type.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.Types.FailureResult.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.Types.FailureResult.MsgFieldNumber">
            <summary>Field number for the "msg" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.Types.FailureResult.ReferenceConvFieldNumber">
            <summary>Field number for the "reference_conv" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.Types.FailureResult.ReferenceGemmFieldNumber">
            <summary>Field number for the "reference_gemm" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.Types.FailureResult.BufferAddressFieldNumber">
            <summary>Field number for the "buffer_address" field.</summary>
        </member>
        <member name="T:Tensorflow.AutotuneResult.Types.FailureResult.KeyOneofCase">
            <summary>Enum of possible cases for the "key" oneof.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.Types.ConvKey.AlgorithmFieldNumber">
            <summary>Field number for the "algorithm" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.Types.ConvKey.TensorOpsEnabledFieldNumber">
            <summary>Field number for the "tensor_ops_enabled" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuneResult.Types.GemmKey.AlgorithmFieldNumber">
            <summary>Field number for the "algorithm" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuningLog.InstrFieldNumber">
            <summary>Field number for the "instr" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuningLog.ResultsFieldNumber">
            <summary>Field number for the "results" field.</summary>
        </member>
        <member name="P:Tensorflow.AutotuningLog.Results">
            <summary>
            Records all auto-tuning results per algorithm.
            </summary>
        </member>
        <member name="F:Tensorflow.AutotuningLog.CudnnVersionFieldNumber">
            <summary>Field number for the "cudnn_version" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuningLog.ComputeCapabilityFieldNumber">
            <summary>Field number for the "compute_capability" field.</summary>
        </member>
        <member name="F:Tensorflow.AutotuningLog.DevicePciBusIdFieldNumber">
            <summary>Field number for the "device_pci_bus_id" field.</summary>
        </member>
        <member name="P:Tensorflow.AutotuningLog.DevicePciBusId">
            <summary>
            stream_executor::DeviceDescription::pci_bus_id.
            </summary>
        </member>
        <member name="F:Tensorflow.AutotuningLog.BlasVersionFieldNumber">
            <summary>Field number for the "blas_version" field.</summary>
        </member>
        <member name="T:Tensorflow.BfcMemoryMapReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/bfc_memory_map.proto</summary>
        </member>
        <member name="P:Tensorflow.BfcMemoryMapReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/bfc_memory_map.proto</summary>
        </member>
        <member name="T:Tensorflow.MemAllocatorStats">
            <summary>
            Some of the data from AllocatorStats
            </summary>
        </member>
        <member name="F:Tensorflow.MemAllocatorStats.NumAllocsFieldNumber">
            <summary>Field number for the "num_allocs" field.</summary>
        </member>
        <member name="F:Tensorflow.MemAllocatorStats.BytesInUseFieldNumber">
            <summary>Field number for the "bytes_in_use" field.</summary>
        </member>
        <member name="F:Tensorflow.MemAllocatorStats.PeakBytesInUseFieldNumber">
            <summary>Field number for the "peak_bytes_in_use" field.</summary>
        </member>
        <member name="F:Tensorflow.MemAllocatorStats.LargestAllocSizeFieldNumber">
            <summary>Field number for the "largest_alloc_size" field.</summary>
        </member>
        <member name="F:Tensorflow.MemAllocatorStats.FragmentationMetricFieldNumber">
            <summary>Field number for the "fragmentation_metric" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.AddressFieldNumber">
            <summary>Field number for the "address" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.SizeFieldNumber">
            <summary>Field number for the "size" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.RequestedSizeFieldNumber">
            <summary>Field number for the "requested_size" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.BinFieldNumber">
            <summary>Field number for the "bin" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.OpNameFieldNumber">
            <summary>Field number for the "op_name" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.FreedAtCountFieldNumber">
            <summary>Field number for the "freed_at_count" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.ActionCountFieldNumber">
            <summary>Field number for the "action_count" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.InUseFieldNumber">
            <summary>Field number for the "in_use" field.</summary>
        </member>
        <member name="F:Tensorflow.MemChunk.StepIdFieldNumber">
            <summary>Field number for the "step_id" field.</summary>
        </member>
        <member name="F:Tensorflow.BinSummary.BinFieldNumber">
            <summary>Field number for the "bin" field.</summary>
        </member>
        <member name="F:Tensorflow.BinSummary.TotalBytesInUseFieldNumber">
            <summary>Field number for the "total_bytes_in_use" field.</summary>
        </member>
        <member name="F:Tensorflow.BinSummary.TotalBytesInBinFieldNumber">
            <summary>Field number for the "total_bytes_in_bin" field.</summary>
        </member>
        <member name="F:Tensorflow.BinSummary.TotalChunksInUseFieldNumber">
            <summary>Field number for the "total_chunks_in_use" field.</summary>
        </member>
        <member name="F:Tensorflow.BinSummary.TotalChunksInBinFieldNumber">
            <summary>Field number for the "total_chunks_in_bin" field.</summary>
        </member>
        <member name="F:Tensorflow.SnapShot.ActionCountFieldNumber">
            <summary>Field number for the "action_count" field.</summary>
        </member>
        <member name="F:Tensorflow.SnapShot.SizeFieldNumber">
            <summary>Field number for the "size" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryDump.AllocatorNameFieldNumber">
            <summary>Field number for the "allocator_name" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryDump.BinSummaryFieldNumber">
            <summary>Field number for the "bin_summary" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryDump.ChunkFieldNumber">
            <summary>Field number for the "chunk" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryDump.SnapShotFieldNumber">
            <summary>Field number for the "snap_shot" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryDump.StatsFieldNumber">
            <summary>Field number for the "stats" field.</summary>
        </member>
        <member name="T:Tensorflow.ClusterReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/cluster.proto</summary>
        </member>
        <member name="P:Tensorflow.ClusterReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/cluster.proto</summary>
        </member>
        <member name="T:Tensorflow.JobDef">
            <summary>
            Defines a single job in a TensorFlow cluster.
            </summary>
        </member>
        <member name="F:Tensorflow.JobDef.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.JobDef.Name">
            <summary>
            The name of this job.
            </summary>
        </member>
        <member name="F:Tensorflow.JobDef.TasksFieldNumber">
            <summary>Field number for the "tasks" field.</summary>
        </member>
        <member name="P:Tensorflow.JobDef.Tasks">
             <summary>
             Mapping from task ID to "hostname:port" string.
            
             If the `name` field contains "worker", and the `tasks` map contains a
             mapping from 7 to "example.org:2222", then the device prefix
             "/job:worker/task:7" will be assigned to "example.org:2222".
             </summary>
        </member>
        <member name="T:Tensorflow.ClusterDef">
            <summary>
            Defines a TensorFlow cluster as a set of jobs.
            </summary>
        </member>
        <member name="F:Tensorflow.ClusterDef.JobFieldNumber">
            <summary>Field number for the "job" field.</summary>
        </member>
        <member name="P:Tensorflow.ClusterDef.Job">
            <summary>
            The jobs that comprise the cluster.
            </summary>
        </member>
        <member name="T:Tensorflow.ConfigReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/config.proto</summary>
        </member>
        <member name="P:Tensorflow.ConfigReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/config.proto</summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.PerProcessGpuMemoryFractionFieldNumber">
            <summary>Field number for the "per_process_gpu_memory_fraction" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.PerProcessGpuMemoryFraction">
             <summary>
             Fraction of the available GPU memory to allocate for each process.
             1 means to allocate all of the GPU memory, 0.5 means the process
             allocates up to ~50% of the available GPU memory.
            
             GPU memory is pre-allocated unless the allow_growth option is enabled.
            
             If greater than 1.0, uses CUDA unified memory to potentially oversubscribe
             the amount of memory available on the GPU device by using host memory as a
             swap space. Accessing memory not available on the device will be
             significantly slower as that would require memory transfer between the host
             and the device. Options to reduce the memory requirement should be
             considered before enabling this option as this may come with a negative
             performance impact. Oversubscription using the unified memory requires
             Pascal class or newer GPUs and it is currently only supported on the Linux
             operating system. See
             https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-requirements
             for the detailed requirements.
             </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.AllowGrowthFieldNumber">
            <summary>Field number for the "allow_growth" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.AllowGrowth">
            <summary>
            If true, the allocator does not pre-allocate the entire specified
            GPU memory region, instead starting small and growing as needed.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.AllocatorTypeFieldNumber">
            <summary>Field number for the "allocator_type" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.AllocatorType">
             <summary>
             The type of GPU allocation strategy to use.
            
             Allowed values:
             "": The empty string (default) uses a system-chosen default
                 which may change over time.
            
             "BFC": A "Best-fit with coalescing" algorithm, simplified from a
                    version of dlmalloc.
             </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.DeferredDeletionBytesFieldNumber">
            <summary>Field number for the "deferred_deletion_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.DeferredDeletionBytes">
            <summary>
            Delay deletion of up to this many bytes to reduce the number of
            interactions with gpu driver code.  If 0, the system chooses
            a reasonable default (several MBs).
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.VisibleDeviceListFieldNumber">
            <summary>Field number for the "visible_device_list" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.VisibleDeviceList">
             <summary>
             A comma-separated list of GPU ids that determines the 'visible'
             to 'virtual' mapping of GPU devices.  For example, if TensorFlow
             can see 8 GPU devices in the process, and one wanted to map
             visible GPU devices 5 and 3 as "/device:GPU:0", and "/device:GPU:1",
             then one would specify this field as "5,3".  This field is similar in
             spirit to the CUDA_VISIBLE_DEVICES environment variable, except
             it applies to the visible GPU devices in the process.
            
             NOTE:
             1. The GPU driver provides the process with the visible GPUs
                in an order which is not guaranteed to have any correlation to
                the *physical* GPU id in the machine.  This field is used for
                remapping "visible" to "virtual", which means this operates only
                after the process starts.  Users are required to use vendor
                specific mechanisms (e.g., CUDA_VISIBLE_DEVICES) to control the
                physical to visible device mapping prior to invoking TensorFlow.
             2. In the code, the ids in this list are also called "platform GPU id"s,
                and the 'virtual' ids of GPU devices (i.e. the ids in the device
                name "/device:GPU:&lt;id>") are also called "TF GPU id"s. Please
                refer to third_party/tensorflow/core/common_runtime/gpu/gpu_id.h
                for more information.
             </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.PollingActiveDelayUsecsFieldNumber">
            <summary>Field number for the "polling_active_delay_usecs" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.PollingActiveDelayUsecs">
            <summary>
            In the event polling loop sleep this many microseconds between
            PollEvents calls, when the queue is not empty.  If value is not
            set or set to 0, gets set to a non-zero default.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.PollingInactiveDelayMsecsFieldNumber">
            <summary>Field number for the "polling_inactive_delay_msecs" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.PollingInactiveDelayMsecs">
            <summary>
            This field is deprecated and ignored.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.ForceGpuCompatibleFieldNumber">
            <summary>Field number for the "force_gpu_compatible" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.ForceGpuCompatible">
            <summary>
            Force all tensors to be gpu_compatible. On a GPU-enabled TensorFlow,
            enabling this option forces all CPU tensors to be allocated with Cuda
            pinned memory. Normally, TensorFlow will infer which tensors should be
            allocated as the pinned memory. But in case where the inference is
            incomplete, this option can significantly speed up the cross-device memory
            copy performance as long as it fits the memory.
            Note that this option is not something that should be
            enabled by default for unknown or very large models, since all Cuda pinned
            memory is unpageable, having too much pinned memory might negatively impact
            the overall host system performance.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.ExperimentalFieldNumber">
            <summary>Field number for the "experimental" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Experimental">
            <summary>
            Everything inside experimental is subject to change and is not subject
            to API stability guarantees in
            https://www.tensorflow.org/guide/version_compat.
            </summary>
        </member>
        <member name="T:Tensorflow.GPUOptions.Types">
            <summary>Container for nested types declared in the GPUOptions message type.</summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.VirtualDevicesFieldNumber">
            <summary>Field number for the "virtual_devices" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.VirtualDevices">
             <summary>
             The multi virtual device settings. If empty (not set), it will create
             single virtual device on each visible GPU, according to the settings
             in "visible_device_list" above. Otherwise, the number of elements in the
             list must be the same as the number of visible GPUs (after
             "visible_device_list" filtering if it is set), and the string represented
             device names (e.g. /device:GPU:&lt;id>) will refer to the virtual
             devices and have the &lt;id> field assigned sequentially starting from 0,
             according to the order they appear in this list and the "memory_limit"
             list inside each element. For example,
               visible_device_list = "1,0"
               virtual_devices { memory_limit: 1GB memory_limit: 2GB }
               virtual_devices {}
             will create three virtual devices as:
               /device:GPU:0 -> visible GPU 1 with 1GB memory
               /device:GPU:1 -> visible GPU 1 with 2GB memory
               /device:GPU:2 -> visible GPU 0 with all available memory
            
             NOTE:
             1. It's invalid to set both this and "per_process_gpu_memory_fraction"
                at the same time.
             2. Currently this setting is per-process, not per-session. Using
                different settings in different sessions within same process will
                result in undefined behavior.
             </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.UseUnifiedMemoryFieldNumber">
            <summary>Field number for the "use_unified_memory" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.UseUnifiedMemory">
            <summary>
            If true, uses CUDA unified memory for memory allocations. If
            per_process_gpu_memory_fraction option is greater than 1.0, then unified
            memory is used regardless of the value for this field. See comments for
            per_process_gpu_memory_fraction field for more details and requirements
            of the unified memory. This option is useful to oversubscribe memory if
            multiple processes are sharing a single GPU while individually using less
            than 1.0 per process memory fraction.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.NumDevToDevCopyStreamsFieldNumber">
            <summary>Field number for the "num_dev_to_dev_copy_streams" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.NumDevToDevCopyStreams">
            <summary>
            If > 1, the number of device-to-device copy streams to create
            for each GPUDevice.  Default value is 0, which is automatically
            converted to 1.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.CollectiveRingOrderFieldNumber">
            <summary>Field number for the "collective_ring_order" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.CollectiveRingOrder">
            <summary>
            If non-empty, defines a good GPU ring order on a single worker based on
            device interconnect.  This assumes that all workers have the same GPU
            topology.  Specify as a comma-separated string, e.g. "3,2,1,0,7,6,5,4".
            This ring order is used by the RingReducer implementation of
            CollectiveReduce, and serves as an override to automatic ring order
            generation in OrderTaskDeviceMap() during CollectiveParam resolution.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.TimestampedAllocatorFieldNumber">
            <summary>Field number for the "timestamped_allocator" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.TimestampedAllocator">
            <summary>
            If true then extra work is done by GPUDevice and GPUBFCAllocator to
            keep track of when GPU memory is freed and when kernels actually
            complete so that we can know when a nominally free memory chunk
            is really not subject to pending use.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.KernelTrackerMaxIntervalFieldNumber">
            <summary>Field number for the "kernel_tracker_max_interval" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.KernelTrackerMaxInterval">
             <summary>
             Parameters for GPUKernelTracker.  By default no kernel tracking is done.
             Note that timestamped_allocator is only effective if some tracking is
             specified.
            
             If kernel_tracker_max_interval = n > 0, then a tracking event
             is inserted after every n kernels without an event.
             </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.KernelTrackerMaxBytesFieldNumber">
            <summary>Field number for the "kernel_tracker_max_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.KernelTrackerMaxBytes">
            <summary>
            If kernel_tracker_max_bytes = n > 0, then a tracking event is
            inserted after every series of kernels allocating a sum of
            memory >= n.  If one kernel allocates b * n bytes, then one
            event will be inserted after it, but it will count as b against
            the pending limit.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.KernelTrackerMaxPendingFieldNumber">
            <summary>Field number for the "kernel_tracker_max_pending" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.KernelTrackerMaxPending">
            <summary>
            If kernel_tracker_max_pending > 0 then no more than this many
            tracking events can be outstanding at a time.  An attempt to
            launch an additional kernel will stall until an event
            completes.
            </summary>
        </member>
        <member name="T:Tensorflow.GPUOptions.Types.Experimental.Types">
            <summary>Container for nested types declared in the Experimental message type.</summary>
        </member>
        <member name="T:Tensorflow.GPUOptions.Types.Experimental.Types.VirtualDevices">
            <summary>
            Configuration for breaking down a visible GPU into multiple "virtual"
            devices.
            </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.Types.VirtualDevices.MemoryLimitMbFieldNumber">
            <summary>Field number for the "memory_limit_mb" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.Types.VirtualDevices.MemoryLimitMb">
             <summary>
             Per "virtual" device memory limit, in MB. The number of elements in
             the list is the number of virtual devices to create on the
             corresponding visible GPU (see "virtual_devices" below).
             If empty, it will create single virtual device taking all available
             memory from the device.
            
             For the concept of "visible" and "virtual" GPU, see the comments for
             "visible_device_list" above for more information.
             </summary>
        </member>
        <member name="F:Tensorflow.GPUOptions.Types.Experimental.Types.VirtualDevices.PriorityFieldNumber">
            <summary>Field number for the "priority" field.</summary>
        </member>
        <member name="P:Tensorflow.GPUOptions.Types.Experimental.Types.VirtualDevices.Priority">
             <summary>
             Priority values to use with the virtual devices. Use the cuda function
             cudaDeviceGetStreamPriorityRange to query for valid range of values for
             priority.
            
             On a P4000 GPU with cuda 10.1, the priority range reported was 0 for
             least priority and -1 for greatest priority.
            
             If this field is not specified, then the virtual devices will be
             created with the default. If this field has values set, then the size
             of this must match with the above memory_limit_mb.
             </summary>
        </member>
        <member name="T:Tensorflow.OptimizerOptions">
            <summary>
            Options passed to the graph optimizer
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.DoCommonSubexpressionEliminationFieldNumber">
            <summary>Field number for the "do_common_subexpression_elimination" field.</summary>
        </member>
        <member name="P:Tensorflow.OptimizerOptions.DoCommonSubexpressionElimination">
            <summary>
            If true, optimize the graph using common subexpression elimination.
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.DoConstantFoldingFieldNumber">
            <summary>Field number for the "do_constant_folding" field.</summary>
        </member>
        <member name="P:Tensorflow.OptimizerOptions.DoConstantFolding">
            <summary>
            If true, perform constant folding optimization on the graph.
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.MaxFoldedConstantInBytesFieldNumber">
            <summary>Field number for the "max_folded_constant_in_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.OptimizerOptions.MaxFoldedConstantInBytes">
            <summary>
            Constant folding optimization replaces tensors whose values can be
            predetermined, with constant nodes. To avoid inserting too large constants,
            the size of each constant created can be limited. If this value is zero, a
            default limit of 10 MiB will be applied. If constant folding optimization
            is disabled, this value is ignored.
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.DoFunctionInliningFieldNumber">
            <summary>Field number for the "do_function_inlining" field.</summary>
        </member>
        <member name="P:Tensorflow.OptimizerOptions.DoFunctionInlining">
            <summary>
            If true, perform function inlining on the graph.
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.OptLevelFieldNumber">
            <summary>Field number for the "opt_level" field.</summary>
        </member>
        <member name="P:Tensorflow.OptimizerOptions.OptLevel">
            <summary>
            Overall optimization level. The actual optimizations applied will be the
            logical OR of the flags that this level implies and any flags already set.
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.GlobalJitLevelFieldNumber">
            <summary>Field number for the "global_jit_level" field.</summary>
        </member>
        <member name="T:Tensorflow.OptimizerOptions.Types">
            <summary>Container for nested types declared in the OptimizerOptions message type.</summary>
        </member>
        <member name="T:Tensorflow.OptimizerOptions.Types.Level">
            <summary>
            Optimization level
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.Types.Level.L1">
            <summary>
            L1 is the default level.
            Optimization performed at L1 :
            1. Common subexpression elimination
            2. Constant folding
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.Types.Level.L0">
            <summary>
            No optimizations
            </summary>
        </member>
        <member name="T:Tensorflow.OptimizerOptions.Types.GlobalJitLevel">
            <summary>
            Control the use of the compiler/jit.  Experimental.
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.Types.GlobalJitLevel.Default">
            <summary>
            Default setting ("off" now, but later expected to be "on")
            </summary>
        </member>
        <member name="F:Tensorflow.OptimizerOptions.Types.GlobalJitLevel.On1">
            <summary>
            The following settings turn on compilation, with higher values being
            more aggressive.  Higher values may reduce opportunities for parallelism
            and may use more memory.  (At present, there is no distinction, but this
            is expected to change.)
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.EnableRecvSchedulingFieldNumber">
            <summary>Field number for the "enable_recv_scheduling" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.EnableRecvScheduling">
            <summary>
            If true, use control flow to schedule the activation of Recv nodes.
            (Currently ignored.)
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.OptimizerOptionsFieldNumber">
            <summary>Field number for the "optimizer_options" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.OptimizerOptions">
            <summary>
            Options controlling how graph is optimized.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.BuildCostModelFieldNumber">
            <summary>Field number for the "build_cost_model" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.BuildCostModel">
            <summary>
            The number of steps to run before returning a cost model detailing
            the memory usage and performance of each node of the graph. 0 means
            no cost model.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.BuildCostModelAfterFieldNumber">
            <summary>Field number for the "build_cost_model_after" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.BuildCostModelAfter">
            <summary>
            The number of steps to skip before collecting statistics for the
            cost model.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.InferShapesFieldNumber">
            <summary>Field number for the "infer_shapes" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.InferShapes">
            <summary>
            Annotate each Node with Op output shape data, to the extent it can
            be statically inferred.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.PlacePrunedGraphFieldNumber">
            <summary>Field number for the "place_pruned_graph" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.PlacePrunedGraph">
             <summary>
             Only place the subgraphs that are run, rather than the entire graph.
            
             This is useful for interactive graph building, where one might
             produce graphs that cannot be placed during the debugging
             process.  In particular, it allows the client to continue work in
             a session after adding a node to a graph whose placement
             constraints are unsatisfiable.
             </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.EnableBfloat16SendrecvFieldNumber">
            <summary>Field number for the "enable_bfloat16_sendrecv" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.EnableBfloat16Sendrecv">
            <summary>
            If true, transfer float values between processes as bfloat16.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.TimelineStepFieldNumber">
            <summary>Field number for the "timeline_step" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.TimelineStep">
            <summary>
            If > 0, record a timeline every this many steps.
            EXPERIMENTAL: This currently has no effect in MasterSession.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOptions.RewriteOptionsFieldNumber">
            <summary>Field number for the "rewrite_options" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOptions.RewriteOptions">
            <summary>
            Options that control the type and amount of graph rewriting.
            Not currently configurable via the public Python API (i.e. there is no API
            stability guarantee if you import RewriterConfig explicitly).
            </summary>
        </member>
        <member name="F:Tensorflow.ThreadPoolOptionProto.NumThreadsFieldNumber">
            <summary>Field number for the "num_threads" field.</summary>
        </member>
        <member name="P:Tensorflow.ThreadPoolOptionProto.NumThreads">
             <summary>
             The number of threads in the pool.
            
             0 means the system picks a value based on where this option proto is used
             (see the declaration of the specific field for more info).
             </summary>
        </member>
        <member name="F:Tensorflow.ThreadPoolOptionProto.GlobalNameFieldNumber">
            <summary>Field number for the "global_name" field.</summary>
        </member>
        <member name="P:Tensorflow.ThreadPoolOptionProto.GlobalName">
             <summary>
             The global name of the threadpool.
            
             If empty, then the threadpool is made and used according to the scope it's
             in - e.g., for a session threadpool, it is used by that session only.
            
             If non-empty, then:
             - a global threadpool associated with this name is looked
               up or created. This allows, for example, sharing one threadpool across
               many sessions (e.g., like the default behavior, if
               inter_op_parallelism_threads is not configured), but still partitioning
               into a large and small pool.
             - if the threadpool for this global_name already exists, then it is an
               error if the existing pool was created using a different num_threads
               value as is specified on this call.
             - threadpools created this way are never garbage collected.
             </summary>
        </member>
        <member name="F:Tensorflow.RPCOptions.UseRpcForInprocessMasterFieldNumber">
            <summary>Field number for the "use_rpc_for_inprocess_master" field.</summary>
        </member>
        <member name="P:Tensorflow.RPCOptions.UseRpcForInprocessMaster">
             <summary>
             If true, always use RPC to contact the session target.
            
             If false (the default option), TensorFlow may use an optimized
             transport for client-master communication that avoids the RPC
             stack. This option is primarily for used testing the RPC stack.
             </summary>
        </member>
        <member name="F:Tensorflow.RPCOptions.CompressionAlgorithmFieldNumber">
            <summary>Field number for the "compression_algorithm" field.</summary>
        </member>
        <member name="P:Tensorflow.RPCOptions.CompressionAlgorithm">
            <summary>
            The compression algorithm to be used. One of "deflate", "gzip".
            </summary>
        </member>
        <member name="F:Tensorflow.RPCOptions.CompressionLevelFieldNumber">
            <summary>Field number for the "compression_level" field.</summary>
        </member>
        <member name="P:Tensorflow.RPCOptions.CompressionLevel">
            <summary>
            If compression_algorithm is set, the compression level to be used.
            From 0 (no compression), up to 3.
            </summary>
        </member>
        <member name="F:Tensorflow.RPCOptions.CacheRpcResponseFieldNumber">
            <summary>Field number for the "cache_rpc_response" field.</summary>
        </member>
        <member name="P:Tensorflow.RPCOptions.CacheRpcResponse">
            <summary>
            Setting cache_rpc_response to true will enable sender side caching of
            response for RecvTensorAsync and RecvBufAsync to allow receiver to retry
            requests . This is only necessary when the network fabric is experiencing a
            significant error rate.  Without it we'll fail a step on an network error,
            while with it we'll be able to complete long steps (like complex
            initializations) in the face of some network errors during RecvTensor.
            </summary>
        </member>
        <member name="F:Tensorflow.RPCOptions.DisableSessionConnectionSharingFieldNumber">
            <summary>Field number for the "disable_session_connection_sharing" field.</summary>
        </member>
        <member name="P:Tensorflow.RPCOptions.DisableSessionConnectionSharing">
            <summary>
            Disables TCP connection sharing when opening a new RPC channel.
            </summary>
        </member>
        <member name="T:Tensorflow.SessionMetadata">
             <summary>
             Metadata about the session.
            
             This can be used by the runtime and the Ops for debugging, monitoring, etc.
            
             The (name, version) tuple is expected to be a unique identifier for
             sessions within the same process.
            
             NOTE: This is currently used and propagated only by the direct session.
             </summary>
        </member>
        <member name="F:Tensorflow.SessionMetadata.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.SessionMetadata.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Tensorflow.SessionMetadata.Version">
            <summary>
            The version is optional. If set, needs to be >= 0.
            </summary>
        </member>
        <member name="T:Tensorflow.ConfigProto">
            <summary>
            Session configuration parameters.
            The system picks appropriate values for fields that are not set.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.DeviceCountFieldNumber">
            <summary>Field number for the "device_count" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.DeviceCount">
            <summary>
            Map from device type name (e.g., "CPU" or "GPU" ) to maximum
            number of devices of that type to use.  If a particular device
            type is not found in the map, the system picks an appropriate
            number.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.IntraOpParallelismThreadsFieldNumber">
            <summary>Field number for the "intra_op_parallelism_threads" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.IntraOpParallelismThreads">
             <summary>
             The execution of an individual op (for some op types) can be
             parallelized on a pool of intra_op_parallelism_threads.
             0 means the system picks an appropriate number.
            
             If you create an ordinary session, e.g., from Python or C++,
             then there is exactly one intra op thread pool per process.
             The first session created determines the number of threads in this pool.
             All subsequent sessions reuse/share this one global pool.
            
             There are notable exceptions to the default behavior describe above:
             1. There is an environment variable  for overriding this thread pool,
                named TF_OVERRIDE_GLOBAL_THREADPOOL.
             2. When connecting to a server, such as a remote `tf.train.Server`
                instance, then this option will be ignored altogether.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.InterOpParallelismThreadsFieldNumber">
            <summary>Field number for the "inter_op_parallelism_threads" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.InterOpParallelismThreads">
             <summary>
             Nodes that perform blocking operations are enqueued on a pool of
             inter_op_parallelism_threads available in each process.
            
             0 means the system picks an appropriate number.
             Negative means all operations are performed in caller's thread.
            
             Note that the first Session created in the process sets the
             number of threads for all future sessions unless use_per_session_threads is
             true or session_inter_op_thread_pool is configured.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.UsePerSessionThreadsFieldNumber">
            <summary>Field number for the "use_per_session_threads" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.UsePerSessionThreads">
             <summary>
             If true, use a new set of threads for this session rather than the global
             pool of threads. Only supported by direct sessions.
            
             If false, use the global threads created by the first session, or the
             per-session thread pools configured by session_inter_op_thread_pool.
            
             This option is deprecated. The same effect can be achieved by setting
             session_inter_op_thread_pool to have one element, whose num_threads equals
             inter_op_parallelism_threads.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.SessionInterOpThreadPoolFieldNumber">
            <summary>Field number for the "session_inter_op_thread_pool" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.SessionInterOpThreadPool">
             <summary>
             This option is experimental - it may be replaced with a different mechanism
             in the future.
            
             Configures session thread pools. If this is configured, then RunOptions for
             a Run call can select the thread pool to use.
            
             The intended use is for when some session invocations need to run in a
             background pool limited to a small number of threads:
             - For example, a session may be configured to have one large pool (for
             regular compute) and one small pool (for periodic, low priority work);
             using the small pool is currently the mechanism for limiting the inter-op
             parallelism of the low priority work.  Note that it does not limit the
             parallelism of work spawned by a single op kernel implementation.
             - Using this setting is normally not needed in training, but may help some
             serving use cases.
             - It is also generally recommended to set the global_name field of this
             proto, to avoid creating multiple large pools. It is typically better to
             run the non-low-priority work, even across sessions, in a single large
             pool.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.PlacementPeriodFieldNumber">
            <summary>Field number for the "placement_period" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.PlacementPeriod">
            <summary>
            Assignment of Nodes to Devices is recomputed every placement_period
            steps until the system warms up (at which point the recomputation
            typically slows down automatically).
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.DeviceFiltersFieldNumber">
            <summary>Field number for the "device_filters" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.DeviceFilters">
            <summary>
            When any filters are present sessions will ignore all devices which do not
            match the filters. Each filter can be partially specified, e.g. "/job:ps"
            "/job:worker/replica:3", etc.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.GpuOptionsFieldNumber">
            <summary>Field number for the "gpu_options" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.GpuOptions">
            <summary>
            Options that apply to all GPUs.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.AllowSoftPlacementFieldNumber">
            <summary>Field number for the "allow_soft_placement" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.AllowSoftPlacement">
            <summary>
            Whether soft placement is allowed. If allow_soft_placement is true,
            an op will be placed on CPU if
              1. there's no GPU implementation for the OP
            or
              2. no GPU devices are known or registered
            or
              3. need to co-locate with reftype input(s) which are from CPU.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.LogDevicePlacementFieldNumber">
            <summary>Field number for the "log_device_placement" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.LogDevicePlacement">
            <summary>
            Whether device placements should be logged.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.GraphOptionsFieldNumber">
            <summary>Field number for the "graph_options" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.GraphOptions">
            <summary>
            Options that apply to all graphs.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.OperationTimeoutInMsFieldNumber">
            <summary>Field number for the "operation_timeout_in_ms" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.OperationTimeoutInMs">
            <summary>
            Global timeout for all blocking operations in this session.  If non-zero,
            and not overridden on a per-operation basis, this value will be used as the
            deadline for all blocking operations.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.RpcOptionsFieldNumber">
            <summary>Field number for the "rpc_options" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.RpcOptions">
            <summary>
            Options that apply when this session uses the distributed runtime.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.ClusterDefFieldNumber">
            <summary>Field number for the "cluster_def" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.ClusterDef">
            <summary>
            Optional list of all workers to use in this session.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.IsolateSessionStateFieldNumber">
            <summary>Field number for the "isolate_session_state" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.IsolateSessionState">
            <summary>
            If true, any resources such as Variables used in the session will not be
            shared with other sessions. However, when clusterspec propagation is
            enabled, this field is ignored and sessions are always isolated.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.ShareClusterDevicesInSessionFieldNumber">
            <summary>Field number for the "share_cluster_devices_in_session" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.ShareClusterDevicesInSession">
            <summary>
            When true, WorkerSessions are created with device attributes from the
            full cluster.
            This is helpful when a worker wants to partition a graph
            (for example during a PartitionedCallOp).
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.ExperimentalFieldNumber">
            <summary>Field number for the "experimental" field.</summary>
        </member>
        <member name="T:Tensorflow.ConfigProto.Types">
            <summary>Container for nested types declared in the ConfigProto message type.</summary>
        </member>
        <member name="T:Tensorflow.ConfigProto.Types.Experimental">
            <summary>
            Everything inside Experimental is subject to change and is not subject
            to API stability guarantees in
            https://www.tensorflow.org/guide/version_compat.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.CollectiveGroupLeaderFieldNumber">
            <summary>Field number for the "collective_group_leader" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.CollectiveGroupLeader">
            <summary>
            Task name for group resolution.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.ExecutorTypeFieldNumber">
            <summary>Field number for the "executor_type" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.ExecutorType">
            <summary>
            Which executor to use, the default executor will be used
            if it is an empty string or "DEFAULT"
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.RecvBufMaxChunkFieldNumber">
            <summary>Field number for the "recv_buf_max_chunk" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.RecvBufMaxChunk">
            <summary>
            Guidance to formatting of large RecvBuf fields for transfer.
            Any positive value sets the max chunk size.  0 defaults to 4096.
            Any negative value indicates no max, i.e. one chunk only.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.UseNumaAffinityFieldNumber">
            <summary>Field number for the "use_numa_affinity" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.UseNumaAffinity">
            <summary>
            If true, and supported by the platform, the runtime will attempt to
            use NUMA affinity where applicable.  One consequence will be the
            existence of as many CPU devices as there are available NUMA nodes.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.CollectiveDeterministicSequentialExecutionFieldNumber">
            <summary>Field number for the "collective_deterministic_sequential_execution" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.CollectiveDeterministicSequentialExecution">
            <summary>
            If true, make collective op execution order sequential and deterministic
            for potentially concurrent collective instances.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.CollectiveNcclFieldNumber">
            <summary>Field number for the "collective_nccl" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.CollectiveNccl">
            <summary>
            If true, use NCCL for CollectiveOps.  This feature is highly
            experimental.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.ShareSessionStateInClusterspecPropagationFieldNumber">
            <summary>Field number for the "share_session_state_in_clusterspec_propagation" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.ShareSessionStateInClusterspecPropagation">
             <summary>
             In the following, session state means the value of a variable, elements
             in a hash table, or any other resource, accessible by worker sessions
             held by a TF server.
            
             When ClusterSpec propagation is enabled, the value of
             isolate_session_state is ignored when deciding whether to share session
             states in a TF server (for backwards compatibility reasons).
             - If share_session_state_in_clusterspec_propagation is true, the session
             states are shared.
             - If share_session_state_in_clusterspec_propagation is false, session
             states are isolated.
            
             When clusterspec propagation is not used, the value of
             share_session_state_in_clusterspec_propagation is ignored when deciding
             whether to share session states in a TF server.
             - If isolate_session_state is true, session states are isolated.
             - If isolate_session_state is false, session states are shared.
            
             TODO(b/129330037): Add a single API that consistently treats
             isolate_session_state and ClusterSpec propagation.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.DisableThreadSpinningFieldNumber">
            <summary>Field number for the "disable_thread_spinning" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.DisableThreadSpinning">
            <summary>
            If using a direct session, disable spinning while waiting for work in
            the thread pool. This may result in higher latency for completing ops,
            but in the case where there is a lot of spinning may result in lower
            CPU usage.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.ShareClusterDevicesInSessionFieldNumber">
            <summary>Field number for the "share_cluster_devices_in_session" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.ShareClusterDevicesInSession">
            <summary>
            This was promoted to a non-experimental API. Please use
            ConfigProto.share_cluster_devices_in_session instead.
            </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.SessionMetadataFieldNumber">
            <summary>Field number for the "session_metadata" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.SessionMetadata">
             <summary>
             Metadata about the session.
            
             If set, this can be used by the runtime and the Ops for debugging,
             monitoring, etc.
            
             NOTE: This is currently used and propagated only by the direct session.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.OptimizeForStaticGraphFieldNumber">
            <summary>Field number for the "optimize_for_static_graph" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.OptimizeForStaticGraph">
             <summary>
             If true, the session may treat the graph as being static for optimization
             purposes.
            
             If this option is set to true when a session is created, the full
             GraphDef must be passed in a single call to Session::Create(), and
             Session::Extend() may not be supported.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.EnableMlirBridgeFieldNumber">
            <summary>Field number for the "enable_mlir_bridge" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.EnableMlirBridge">
             <summary>
             Whether to enable the MLIR-based TF->XLA bridge.
            
             This is a replacement to the existing bridge, and not ready for
             production usage yet.
             If this option is set to true when a session is created, MLIR is used to
             perform the set of graph transformations to put the graph in a form that
             can be executed with delegation of some computations to an accelerator.
             This builds on the model of XLA where a subset of the graph is
             encapsulated and attached to a "compile" operation, whose result is fed
             to an "execute" operation. The kernel for these operations is responsible
             to lower the encapsulated graph to a particular device.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.EnableMlirGraphOptimizationFieldNumber">
            <summary>Field number for the "enable_mlir_graph_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.EnableMlirGraphOptimization">
             <summary>
             Whether to enable the MLIR-based Graph optimizations.
            
             This will become a part of standard Tensorflow graph optimization
             pipeline, currently this is only used for gradual migration and testing
             new passes that are replacing existing optimizations in Grappler.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.DisableOutputPartitionGraphsFieldNumber">
            <summary>Field number for the "disable_output_partition_graphs" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.DisableOutputPartitionGraphs">
             <summary>
             If true, the session will not store an additional copy of the graph for
             each subgraph.
            
             If this option is set to true when a session is created, the
             `RunOptions.output_partition_graphs` options must not be set.
             </summary>
        </member>
        <member name="F:Tensorflow.ConfigProto.Types.Experimental.XlaFusionAutotunerThreshFieldNumber">
            <summary>Field number for the "xla_fusion_autotuner_thresh" field.</summary>
        </member>
        <member name="P:Tensorflow.ConfigProto.Types.Experimental.XlaFusionAutotunerThresh">
             <summary>
             Minimum number of batches run through the XLA graph before XLA fusion
             autotuner is enabled. Default value of zero disables the autotuner.
            
             The XLA fusion autotuner can improve performance by executing a heuristic
             search on the compiler parameters.
             </summary>
        </member>
        <member name="T:Tensorflow.RunOptions">
            <summary>
            Options for a single Run() call.
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.TraceLevelFieldNumber">
            <summary>Field number for the "trace_level" field.</summary>
        </member>
        <member name="F:Tensorflow.RunOptions.TimeoutInMsFieldNumber">
            <summary>Field number for the "timeout_in_ms" field.</summary>
        </member>
        <member name="P:Tensorflow.RunOptions.TimeoutInMs">
            <summary>
            Time to wait for operation to complete in milliseconds.
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.InterOpThreadPoolFieldNumber">
            <summary>Field number for the "inter_op_thread_pool" field.</summary>
        </member>
        <member name="P:Tensorflow.RunOptions.InterOpThreadPool">
            <summary>
            The thread pool to use, if session_inter_op_thread_pool is configured.
            To use the caller thread set this to -1 - this uses the caller thread
            to execute Session::Run() and thus avoids a context switch. Using the
            caller thread to execute Session::Run() should be done ONLY for simple
            graphs, where the overhead of an additional context switch is
            comparable with the overhead of Session::Run().
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.OutputPartitionGraphsFieldNumber">
            <summary>Field number for the "output_partition_graphs" field.</summary>
        </member>
        <member name="P:Tensorflow.RunOptions.OutputPartitionGraphs">
            <summary>
            Whether the partition graph(s) executed by the executor(s) should be
            outputted via RunMetadata.
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.DebugOptionsFieldNumber">
            <summary>Field number for the "debug_options" field.</summary>
        </member>
        <member name="P:Tensorflow.RunOptions.DebugOptions">
            <summary>
            EXPERIMENTAL.  Options used to initialize DebuggerState, if enabled.
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.ReportTensorAllocationsUponOomFieldNumber">
            <summary>Field number for the "report_tensor_allocations_upon_oom" field.</summary>
        </member>
        <member name="P:Tensorflow.RunOptions.ReportTensorAllocationsUponOom">
             <summary>
             When enabled, causes tensor allocation information to be included in
             the error message when the Run() call fails because the allocator ran
             out of memory (OOM).
            
             Enabling this option can slow down the Run() call.
             </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.ExperimentalFieldNumber">
            <summary>Field number for the "experimental" field.</summary>
        </member>
        <member name="T:Tensorflow.RunOptions.Types">
            <summary>Container for nested types declared in the RunOptions message type.</summary>
        </member>
        <member name="T:Tensorflow.RunOptions.Types.TraceLevel">
            <summary>
            TODO(pbar) Turn this into a TraceOptions proto which allows
            tracing to be controlled in a more orthogonal manner?
            </summary>
        </member>
        <member name="T:Tensorflow.RunOptions.Types.Experimental">
            <summary>
            Everything inside Experimental is subject to change and is not subject
            to API stability guarantees in
            https://www.tensorflow.org/guide/version_compat.
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.Types.Experimental.CollectiveGraphKeyFieldNumber">
            <summary>Field number for the "collective_graph_key" field.</summary>
        </member>
        <member name="P:Tensorflow.RunOptions.Types.Experimental.CollectiveGraphKey">
            <summary>
            If non-zero, declares that this graph is going to use collective
            ops and must synchronize step_ids with any other graph with this
            same group_key value (in a distributed computation where tasks
            run disjoint graphs).
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.Types.Experimental.UseRunHandlerPoolFieldNumber">
            <summary>Field number for the "use_run_handler_pool" field.</summary>
        </member>
        <member name="P:Tensorflow.RunOptions.Types.Experimental.UseRunHandlerPool">
            <summary>
            If true, then operations (using the inter-op pool) across all
            session::run() calls will be centrally scheduled, optimizing for (median
            and tail) latency.
            Consider using this option for CPU-bound workloads like inference.
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.Types.Experimental.RunHandlerPoolOptionsFieldNumber">
            <summary>Field number for the "run_handler_pool_options" field.</summary>
        </member>
        <member name="T:Tensorflow.RunOptions.Types.Experimental.Types">
            <summary>Container for nested types declared in the Experimental message type.</summary>
        </member>
        <member name="T:Tensorflow.RunOptions.Types.Experimental.Types.RunHandlerPoolOptions">
            <summary>
            Options for run handler thread pool.
            </summary>
        </member>
        <member name="F:Tensorflow.RunOptions.Types.Experimental.Types.RunHandlerPoolOptions.PriorityFieldNumber">
            <summary>Field number for the "priority" field.</summary>
        </member>
        <member name="P:Tensorflow.RunOptions.Types.Experimental.Types.RunHandlerPoolOptions.Priority">
            <summary>
            Priority of the request. The run handler thread pool will schedule ops
            based on the priority number. The larger number means higher priority.
            </summary>
        </member>
        <member name="T:Tensorflow.RunMetadata">
            <summary>
            Metadata output (i.e., non-Tensor) for a single Run() call.
            </summary>
        </member>
        <member name="F:Tensorflow.RunMetadata.StepStatsFieldNumber">
            <summary>Field number for the "step_stats" field.</summary>
        </member>
        <member name="P:Tensorflow.RunMetadata.StepStats">
            <summary>
            Statistics traced for this step. Populated if tracing is turned on via the
            "RunOptions" proto.
            EXPERIMENTAL: The format and set of events may change in future versions.
            </summary>
        </member>
        <member name="F:Tensorflow.RunMetadata.CostGraphFieldNumber">
            <summary>Field number for the "cost_graph" field.</summary>
        </member>
        <member name="P:Tensorflow.RunMetadata.CostGraph">
            <summary>
            The cost graph for the computation defined by the run call.
            </summary>
        </member>
        <member name="F:Tensorflow.RunMetadata.PartitionGraphsFieldNumber">
            <summary>Field number for the "partition_graphs" field.</summary>
        </member>
        <member name="P:Tensorflow.RunMetadata.PartitionGraphs">
            <summary>
            Graphs of the partitions executed by executors.
            </summary>
        </member>
        <member name="F:Tensorflow.RunMetadata.FunctionGraphsFieldNumber">
            <summary>Field number for the "function_graphs" field.</summary>
        </member>
        <member name="P:Tensorflow.RunMetadata.FunctionGraphs">
            <summary>
            This is only populated for graphs that are run as functions in TensorFlow
            V2. There will be an entry below for each function that is traced.
            The main use cases of the post_optimization_graph and the partition_graphs
            is to give the caller insight into the graphs that were actually run by the
            runtime. Additional information (such as those in step_stats) will match
            these graphs.
            We also include the pre_optimization_graph since it is usually easier to
            read, and is helpful in situations where the caller wants to get a high
            level idea of what the built graph looks like (since the various graph
            optimization passes might change the structure of the graph significantly).
            </summary>
        </member>
        <member name="T:Tensorflow.RunMetadata.Types">
            <summary>Container for nested types declared in the RunMetadata message type.</summary>
        </member>
        <member name="F:Tensorflow.RunMetadata.Types.FunctionGraphs.PartitionGraphsFieldNumber">
            <summary>Field number for the "partition_graphs" field.</summary>
        </member>
        <member name="P:Tensorflow.RunMetadata.Types.FunctionGraphs.PartitionGraphs">
            <summary>
            TODO(nareshmodi): Include some sort of function/cache-key identifier?
            </summary>
        </member>
        <member name="F:Tensorflow.RunMetadata.Types.FunctionGraphs.PreOptimizationGraphFieldNumber">
            <summary>Field number for the "pre_optimization_graph" field.</summary>
        </member>
        <member name="F:Tensorflow.RunMetadata.Types.FunctionGraphs.PostOptimizationGraphFieldNumber">
            <summary>Field number for the "post_optimization_graph" field.</summary>
        </member>
        <member name="T:Tensorflow.TensorConnection">
            <summary>
            Defines a connection between two tensors in a `GraphDef`.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorConnection.FromTensorFieldNumber">
            <summary>Field number for the "from_tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorConnection.FromTensor">
            <summary>
            A tensor name. The value of this tensor will be substituted for
            the tensor named in `to_tensor`.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorConnection.ToTensorFieldNumber">
            <summary>Field number for the "to_tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorConnection.ToTensor">
            <summary>
            A tensor name. The value of this tensor will be bound to the
            value of the tensor named in `from_tensor`.
            </summary>
        </member>
        <member name="T:Tensorflow.CallableOptions">
             <summary>
             Defines a subgraph in another `GraphDef` as a set of feed points and nodes
             to be fetched or executed.
            
             Compare with the arguments to `Session::Run()`.
             </summary>
        </member>
        <member name="F:Tensorflow.CallableOptions.FeedFieldNumber">
            <summary>Field number for the "feed" field.</summary>
        </member>
        <member name="P:Tensorflow.CallableOptions.Feed">
            <summary>
            Tensors to be fed in the callable. Each feed is the name of a tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.CallableOptions.FetchFieldNumber">
            <summary>Field number for the "fetch" field.</summary>
        </member>
        <member name="P:Tensorflow.CallableOptions.Fetch">
            <summary>
            Fetches. A list of tensor names. The caller of the callable expects a
            tensor to be returned for each fetch[i] (see RunStepResponse.tensor). The
            order of specified fetches does not change the execution order.
            </summary>
        </member>
        <member name="F:Tensorflow.CallableOptions.TargetFieldNumber">
            <summary>Field number for the "target" field.</summary>
        </member>
        <member name="P:Tensorflow.CallableOptions.Target">
            <summary>
            Target Nodes. A list of node names. The named nodes will be run by the
            callable but their outputs will not be returned.
            </summary>
        </member>
        <member name="F:Tensorflow.CallableOptions.RunOptionsFieldNumber">
            <summary>Field number for the "run_options" field.</summary>
        </member>
        <member name="P:Tensorflow.CallableOptions.RunOptions">
            <summary>
            Options that will be applied to each run.
            </summary>
        </member>
        <member name="F:Tensorflow.CallableOptions.TensorConnectionFieldNumber">
            <summary>Field number for the "tensor_connection" field.</summary>
        </member>
        <member name="P:Tensorflow.CallableOptions.TensorConnection">
            <summary>
            Tensors to be connected in the callable. Each TensorConnection denotes
            a pair of tensors in the graph, between which an edge will be created
            in the callable.
            </summary>
        </member>
        <member name="F:Tensorflow.CallableOptions.FeedDevicesFieldNumber">
            <summary>Field number for the "feed_devices" field.</summary>
        </member>
        <member name="P:Tensorflow.CallableOptions.FeedDevices">
             <summary>
             The Tensor objects fed in the callable and fetched from the callable
             are expected to be backed by host (CPU) memory by default.
            
             The options below allow changing that - feeding tensors backed by
             device memory, or returning tensors that are backed by device memory.
            
             The maps below map the name of a feed/fetch tensor (which appears in
             'feed' or 'fetch' fields above), to the fully qualified name of the device
             owning the memory backing the contents of the tensor.
            
             For example, creating a callable with the following options:
            
             CallableOptions {
               feed: "a:0"
               feed: "b:0"
            
               fetch: "x:0"
               fetch: "y:0"
            
               feed_devices: {
                 "a:0": "/job:localhost/replica:0/task:0/device:GPU:0"
               }
            
               fetch_devices: {
                 "y:0": "/job:localhost/replica:0/task:0/device:GPU:0"
              }
             }
            
             means that the Callable expects:
             - The first argument ("a:0") is a Tensor backed by GPU memory.
             - The second argument ("b:0") is a Tensor backed by host memory.
             and of its return values:
             - The first output ("x:0") will be backed by host memory.
             - The second output ("y:0") will be backed by GPU memory.
            
             FEEDS:
             It is the responsibility of the caller to ensure that the memory of the fed
             tensors will be correctly initialized and synchronized before it is
             accessed by operations executed during the call to Session::RunCallable().
            
             This is typically ensured by using the TensorFlow memory allocators
             (Device::GetAllocator()) to create the Tensor to be fed.
            
             Alternatively, for CUDA-enabled GPU devices, this typically means that the
             operation that produced the contents of the tensor has completed, i.e., the
             CUDA stream has been synchronized (e.g., via cuCtxSynchronize() or
             cuStreamSynchronize()).
             </summary>
        </member>
        <member name="F:Tensorflow.CallableOptions.FetchDevicesFieldNumber">
            <summary>Field number for the "fetch_devices" field.</summary>
        </member>
        <member name="F:Tensorflow.CallableOptions.FetchSkipSyncFieldNumber">
            <summary>Field number for the "fetch_skip_sync" field.</summary>
        </member>
        <member name="P:Tensorflow.CallableOptions.FetchSkipSync">
             <summary>
             By default, RunCallable() will synchronize the GPU stream before returning
             fetched tensors on a GPU device, to ensure that the values in those tensors
             have been produced. This simplifies interacting with the tensors, but
             potentially incurs a performance hit.
            
             If this options is set to true, the caller is responsible for ensuring
             that the values in the fetched tensors have been produced before they are
             used. The caller can do this by invoking `Device::Sync()` on the underlying
             device(s), or by feeding the tensors back to the same Session using
             `feed_devices` with the same corresponding device name.
             </summary>
        </member>
        <member name="T:Tensorflow.ControlFlowReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/control_flow.proto</summary>
        </member>
        <member name="P:Tensorflow.ControlFlowReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/control_flow.proto</summary>
        </member>
        <member name="T:Tensorflow.ValuesDef">
            <summary>
            Protocol buffer representing the values in ControlFlowContext.
            </summary>
        </member>
        <member name="F:Tensorflow.ValuesDef.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="P:Tensorflow.ValuesDef.Values">
            <summary>
            Value names that have been seen in this context.
            </summary>
        </member>
        <member name="F:Tensorflow.ValuesDef.ExternalValuesFieldNumber">
            <summary>Field number for the "external_values" field.</summary>
        </member>
        <member name="P:Tensorflow.ValuesDef.ExternalValues">
            <summary>
            Value names referenced by but external to this context.
            </summary>
        </member>
        <member name="T:Tensorflow.ControlFlowContextDef">
            <summary>
            Container for any kind of control flow context. Any other control flow
            contexts that are added below should also be added here.
            </summary>
        </member>
        <member name="F:Tensorflow.ControlFlowContextDef.CondCtxtFieldNumber">
            <summary>Field number for the "cond_ctxt" field.</summary>
        </member>
        <member name="F:Tensorflow.ControlFlowContextDef.WhileCtxtFieldNumber">
            <summary>Field number for the "while_ctxt" field.</summary>
        </member>
        <member name="T:Tensorflow.ControlFlowContextDef.CtxtOneofCase">
            <summary>Enum of possible cases for the "ctxt" oneof.</summary>
        </member>
        <member name="T:Tensorflow.CondContextDef">
            <summary>
            Protocol buffer representing a CondContext object.
            </summary>
        </member>
        <member name="F:Tensorflow.CondContextDef.ContextNameFieldNumber">
            <summary>Field number for the "context_name" field.</summary>
        </member>
        <member name="P:Tensorflow.CondContextDef.ContextName">
            <summary>
            Name of the context.
            </summary>
        </member>
        <member name="F:Tensorflow.CondContextDef.PredNameFieldNumber">
            <summary>Field number for the "pred_name" field.</summary>
        </member>
        <member name="P:Tensorflow.CondContextDef.PredName">
            <summary>
            Name of the pred tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.CondContextDef.PivotNameFieldNumber">
            <summary>Field number for the "pivot_name" field.</summary>
        </member>
        <member name="P:Tensorflow.CondContextDef.PivotName">
            <summary>
            Name of the pivot tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.CondContextDef.BranchFieldNumber">
            <summary>Field number for the "branch" field.</summary>
        </member>
        <member name="P:Tensorflow.CondContextDef.Branch">
            <summary>
            Branch prediction. 0 or 1.
            </summary>
        </member>
        <member name="F:Tensorflow.CondContextDef.ValuesDefFieldNumber">
            <summary>Field number for the "values_def" field.</summary>
        </member>
        <member name="P:Tensorflow.CondContextDef.ValuesDef">
            <summary>
            Values and external values in control flow context.
            </summary>
        </member>
        <member name="F:Tensorflow.CondContextDef.NestedContextsFieldNumber">
            <summary>Field number for the "nested_contexts" field.</summary>
        </member>
        <member name="P:Tensorflow.CondContextDef.NestedContexts">
            <summary>
            Contexts contained inside this context (e.g. nested conds).
            </summary>
        </member>
        <member name="T:Tensorflow.WhileContextDef">
            <summary>
            Protocol buffer representing a WhileContext object.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.ContextNameFieldNumber">
            <summary>Field number for the "context_name" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.ContextName">
            <summary>
            Name of the context.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.ParallelIterationsFieldNumber">
            <summary>Field number for the "parallel_iterations" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.ParallelIterations">
            <summary>
            The number of iterations allowed to run in parallel.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.BackPropFieldNumber">
            <summary>Field number for the "back_prop" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.BackProp">
            <summary>
            Whether backprop is enabled for this while loop.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.SwapMemoryFieldNumber">
            <summary>Field number for the "swap_memory" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.SwapMemory">
            <summary>
            Whether GPU-CPU memory swap is enabled for this loop.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.PivotNameFieldNumber">
            <summary>Field number for the "pivot_name" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.PivotName">
            <summary>
            Name of the pivot tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.PivotForPredNameFieldNumber">
            <summary>Field number for the "pivot_for_pred_name" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.PivotForPredName">
            <summary>
            Name of the pivot_for_pred tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.PivotForBodyNameFieldNumber">
            <summary>Field number for the "pivot_for_body_name" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.PivotForBodyName">
            <summary>
            Name of the pivot_for_body tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.LoopExitNamesFieldNumber">
            <summary>Field number for the "loop_exit_names" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.LoopExitNames">
            <summary>
            List of names for exit tensors.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.LoopEnterNamesFieldNumber">
            <summary>Field number for the "loop_enter_names" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.LoopEnterNames">
            <summary>
            List of names for enter tensors.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.ValuesDefFieldNumber">
            <summary>Field number for the "values_def" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.ValuesDef">
            <summary>
            Values and external values in control flow context.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.MaximumIterationsNameFieldNumber">
            <summary>Field number for the "maximum_iterations_name" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.MaximumIterationsName">
            <summary>
            Optional name of the maximum_iterations tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.WhileContextDef.NestedContextsFieldNumber">
            <summary>Field number for the "nested_contexts" field.</summary>
        </member>
        <member name="P:Tensorflow.WhileContextDef.NestedContexts">
            <summary>
            Contexts contained inside this context (e.g. nested whiles).
            </summary>
        </member>
        <member name="T:Tensorflow.ConvAutotuningReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/conv_autotuning.proto</summary>
        </member>
        <member name="P:Tensorflow.ConvAutotuningReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/conv_autotuning.proto</summary>
        </member>
        <member name="T:Tensorflow.ConvolutionProto">
            <summary>
            A convolution. Currently it's only used for logging. In the future, we may
            want to use it in the API as well.
            </summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.InputFieldNumber">
            <summary>Field number for the "input" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.FilterFieldNumber">
            <summary>Field number for the "filter" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.OutputFieldNumber">
            <summary>Field number for the "output" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.ConvDescFieldNumber">
            <summary>Field number for the "conv_desc" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.ConvScaleFieldNumber">
            <summary>Field number for the "conv_scale" field.</summary>
        </member>
        <member name="P:Tensorflow.ConvolutionProto.ConvScale">
            <summary>
            result = conv_scale * conv(...) + side_value_scale * side_value.
            side_value is an arbitrary buffer if activation is not none. Otherwise, it
            has to be the result buffer (using its old values).
            </summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.SideValueScaleFieldNumber">
            <summary>Field number for the "side_value_scale" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.ActivationFieldNumber">
            <summary>Field number for the "activation" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.InputAddressFieldNumber">
            <summary>Field number for the "input_address" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.FilterAddressFieldNumber">
            <summary>Field number for the "filter_address" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.OutputAddressFieldNumber">
            <summary>Field number for the "output_address" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.BiasAddressFieldNumber">
            <summary>Field number for the "bias_address" field.</summary>
        </member>
        <member name="F:Tensorflow.ConvolutionProto.SideInputAddressFieldNumber">
            <summary>Field number for the "side_input_address" field.</summary>
        </member>
        <member name="T:Tensorflow.CostGraphReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/cost_graph.proto</summary>
        </member>
        <member name="P:Tensorflow.CostGraphReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/cost_graph.proto</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.NodeFieldNumber">
            <summary>Field number for the "node" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.CostFieldNumber">
            <summary>Field number for the "cost" field.</summary>
        </member>
        <member name="T:Tensorflow.CostGraphDef.Types">
            <summary>Container for nested types declared in the CostGraphDef message type.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.Name">
            <summary>
            The name of the node. Names are globally unique.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.Device">
            <summary>
            The device of the node. Can be empty if the node is mapped to the
            default partition or partitioning hasn't been run yet.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.Id">
            <summary>
            The id of the node. Node ids are only unique inside a partition.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.InputInfoFieldNumber">
            <summary>Field number for the "input_info" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.OutputInfoFieldNumber">
            <summary>Field number for the "output_info" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.TemporaryMemorySizeFieldNumber">
            <summary>Field number for the "temporary_memory_size" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.TemporaryMemorySize">
            <summary>
            Temporary memory used by this node.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.PersistentMemorySizeFieldNumber">
            <summary>Field number for the "persistent_memory_size" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.PersistentMemorySize">
            <summary>
            Persistent memory used by this node.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.HostTempMemorySizeFieldNumber">
            <summary>Field number for the "host_temp_memory_size" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.DeviceTempMemorySizeFieldNumber">
            <summary>Field number for the "device_temp_memory_size" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.DevicePersistentMemorySizeFieldNumber">
            <summary>Field number for the "device_persistent_memory_size" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.ComputeCostFieldNumber">
            <summary>Field number for the "compute_cost" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.ComputeCost">
            <summary>
            Estimate of the computational cost of this node, in microseconds.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.ComputeTimeFieldNumber">
            <summary>Field number for the "compute_time" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.ComputeTime">
            <summary>
            Analytical estimate of the computational cost of this node, in
            microseconds.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.MemoryTimeFieldNumber">
            <summary>Field number for the "memory_time" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.MemoryTime">
            <summary>
            Analytical estimate of the memory access cost of this node, in
            microseconds.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.IsFinalFieldNumber">
            <summary>Field number for the "is_final" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.IsFinal">
            <summary>
            If true, the output is permanent: it can't be discarded, because this
            node is part of the "final output". Nodes may depend on final nodes.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.ControlInputFieldNumber">
            <summary>Field number for the "control_input" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.ControlInput">
            <summary>
            Ids of the control inputs for this node.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.InaccurateFieldNumber">
            <summary>Field number for the "inaccurate" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.Inaccurate">
            <summary>
            Are the costs inaccurate?
            </summary>
        </member>
        <member name="T:Tensorflow.CostGraphDef.Types.Node.Types">
            <summary>Container for nested types declared in the Node message type.</summary>
        </member>
        <member name="T:Tensorflow.CostGraphDef.Types.Node.Types.InputInfo">
            <summary>
            Inputs of this node. They must be executed before this node can be
            executed. An input is a particular output of another node, specified
            by the node id and the output index.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.Types.InputInfo.PrecedingNodeFieldNumber">
            <summary>Field number for the "preceding_node" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.Types.InputInfo.PrecedingPortFieldNumber">
            <summary>Field number for the "preceding_port" field.</summary>
        </member>
        <member name="T:Tensorflow.CostGraphDef.Types.Node.Types.OutputInfo">
            <summary>
            Outputs of this node.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.Types.OutputInfo.SizeFieldNumber">
            <summary>Field number for the "size" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.Types.OutputInfo.AliasInputPortFieldNumber">
            <summary>Field number for the "alias_input_port" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.Node.Types.OutputInfo.AliasInputPort">
            <summary>
            If >= 0, the output is an alias of an input. Note that an alias input
            may itself be an alias. The algorithm will therefore need to follow
            those pointers.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.Types.OutputInfo.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.Node.Types.OutputInfo.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="T:Tensorflow.CostGraphDef.Types.AggregatedCost">
            <summary>
            Total cost of this graph, typically used for balancing decisions.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.AggregatedCost.CostFieldNumber">
            <summary>Field number for the "cost" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.AggregatedCost.Cost">
            <summary>
            Aggregated cost value.
            </summary>
        </member>
        <member name="F:Tensorflow.CostGraphDef.Types.AggregatedCost.DimensionFieldNumber">
            <summary>Field number for the "dimension" field.</summary>
        </member>
        <member name="P:Tensorflow.CostGraphDef.Types.AggregatedCost.Dimension">
            <summary>
            Aggregated cost dimension (e.g. 'memory', 'compute', 'network').
            </summary>
        </member>
        <member name="T:Tensorflow.CriticalSectionReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/critical_section.proto</summary>
        </member>
        <member name="P:Tensorflow.CriticalSectionReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/critical_section.proto</summary>
        </member>
        <member name="T:Tensorflow.CriticalSectionDef">
            <summary>
            Protocol buffer representing a CriticalSection.
            </summary>
        </member>
        <member name="F:Tensorflow.CriticalSectionDef.CriticalSectionNameFieldNumber">
            <summary>Field number for the "critical_section_name" field.</summary>
        </member>
        <member name="P:Tensorflow.CriticalSectionDef.CriticalSectionName">
            <summary>
            Name of the critical section handle.
            </summary>
        </member>
        <member name="T:Tensorflow.CriticalSectionExecutionDef">
            <summary>
            Protocol buffer representing a CriticalSection execution.
            </summary>
        </member>
        <member name="F:Tensorflow.CriticalSectionExecutionDef.ExecuteInCriticalSectionNameFieldNumber">
            <summary>Field number for the "execute_in_critical_section_name" field.</summary>
        </member>
        <member name="P:Tensorflow.CriticalSectionExecutionDef.ExecuteInCriticalSectionName">
            <summary>
            Name of the critical section handle.
            </summary>
        </member>
        <member name="F:Tensorflow.CriticalSectionExecutionDef.ExclusiveResourceAccessFieldNumber">
            <summary>Field number for the "exclusive_resource_access" field.</summary>
        </member>
        <member name="P:Tensorflow.CriticalSectionExecutionDef.ExclusiveResourceAccess">
            <summary>
            Whether this operation requires exclusive access to its resources,
            (i.e., no other CriticalSections may request the same resources).
            </summary>
        </member>
        <member name="T:Tensorflow.DebugReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/debug.proto</summary>
        </member>
        <member name="P:Tensorflow.DebugReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/debug.proto</summary>
        </member>
        <member name="T:Tensorflow.DebugTensorWatch">
            <summary>
            Option for watching a node in TensorFlow Debugger (tfdbg).
            </summary>
        </member>
        <member name="F:Tensorflow.DebugTensorWatch.NodeNameFieldNumber">
            <summary>Field number for the "node_name" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugTensorWatch.NodeName">
            <summary>
            Name of the node to watch.
            Use "*" for wildcard. But note: currently, regex is not supported in
            general.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugTensorWatch.OutputSlotFieldNumber">
            <summary>Field number for the "output_slot" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugTensorWatch.OutputSlot">
            <summary>
            Output slot to watch.
            The semantics of output_slot == -1 is that all outputs of the node
            will be watched (i.e., a wildcard).
            Other negative values of output_slot are invalid and will lead to
            errors currently.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugTensorWatch.DebugOpsFieldNumber">
            <summary>Field number for the "debug_ops" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugTensorWatch.DebugOps">
            <summary>
            Name(s) of the debugging op(s).
            One or more than one probes on a tensor.
            e.g., {"DebugIdentity", "DebugNanCount"}
            </summary>
        </member>
        <member name="F:Tensorflow.DebugTensorWatch.DebugUrlsFieldNumber">
            <summary>Field number for the "debug_urls" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugTensorWatch.DebugUrls">
             <summary>
             URL(s) for debug targets(s).
            
             Supported URL formats are:
               - file:///foo/tfdbg_dump: Writes out Event content to file
                 /foo/tfdbg_dump.  Assumes all directories can be created if they don't
                 already exist.
               - grpc://localhost:11011: Sends an RPC request to an EventListener
                 service running at localhost:11011 with the event.
               - memcbk:///event_key: Routes tensors to clients using the
                 callback registered with the DebugCallbackRegistry for event_key.
            
             Each debug op listed in debug_ops will publish its output tensor (debug
             signal) to all URLs in debug_urls.
            
             N.B. Session::Run() supports concurrent invocations of the same inputs
             (feed keys), outputs and target nodes. If such concurrent invocations
             are to be debugged, the callers of Session::Run() must use distinct
             debug_urls to make sure that the streamed or dumped events do not overlap
             among the invocations.
             TODO(cais): More visible documentation of this in g3docs.
             </summary>
        </member>
        <member name="F:Tensorflow.DebugTensorWatch.TolerateDebugOpCreationFailuresFieldNumber">
            <summary>Field number for the "tolerate_debug_op_creation_failures" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugTensorWatch.TolerateDebugOpCreationFailures">
            <summary>
            Do not error out if debug op creation fails (e.g., due to dtype
            incompatibility). Instead, just log the failure.
            </summary>
        </member>
        <member name="T:Tensorflow.DebugOptions">
            <summary>
            Options for initializing DebuggerState in TensorFlow Debugger (tfdbg).
            </summary>
        </member>
        <member name="F:Tensorflow.DebugOptions.DebugTensorWatchOptsFieldNumber">
            <summary>Field number for the "debug_tensor_watch_opts" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugOptions.DebugTensorWatchOpts">
            <summary>
            Debugging options
            </summary>
        </member>
        <member name="F:Tensorflow.DebugOptions.GlobalStepFieldNumber">
            <summary>Field number for the "global_step" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugOptions.GlobalStep">
            <summary>
            Caller-specified global step count.
            Note that this is distinct from the session run count and the executor
            step count.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugOptions.ResetDiskByteUsageFieldNumber">
            <summary>Field number for the "reset_disk_byte_usage" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugOptions.ResetDiskByteUsage">
            <summary>
            Whether the total disk usage of tfdbg is to be reset to zero
            in this Session.run call. This is used by wrappers and hooks
            such as the local CLI ones to indicate that the dumped tensors
            are cleaned up from the disk after each Session.run.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedSourceFile.HostFieldNumber">
            <summary>Field number for the "host" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedSourceFile.Host">
            <summary>
            The host name on which a source code file is located.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedSourceFile.FilePathFieldNumber">
            <summary>Field number for the "file_path" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedSourceFile.FilePath">
            <summary>
            Path to the source code file.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedSourceFile.LastModifiedFieldNumber">
            <summary>Field number for the "last_modified" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedSourceFile.LastModified">
            <summary>
            The timestamp at which the source code file is last modified.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedSourceFile.BytesFieldNumber">
            <summary>Field number for the "bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedSourceFile.Bytes">
            <summary>
            Byte size of the file.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedSourceFile.LinesFieldNumber">
            <summary>Field number for the "lines" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedSourceFile.Lines">
            <summary>
            Line-by-line content of the source code file.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedSourceFiles.SourceFilesFieldNumber">
            <summary>Field number for the "source_files" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedSourceFiles.SourceFiles">
            <summary>
            A collection of source code files.
            </summary>
        </member>
        <member name="T:Tensorflow.DebugEventReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/debug_event.proto</summary>
        </member>
        <member name="P:Tensorflow.DebugEventReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/debug_event.proto</summary>
        </member>
        <member name="T:Tensorflow.TensorDebugMode">
            <summary>
            Available modes for extracting debugging information from a Tensor.
            TODO(cais): Document the detailed column names and semantics in a separate
            markdown file once the implementation settles.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDebugMode.NoTensor">
            <summary>
            Only records what tensors are computed, eagerly or in graphs.
            No information regarding the value of the tensor is available.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDebugMode.CurtHealth">
            <summary>
            A minimalist health summary for float-type tensors.
            Contains information only about the presence/absence of pathological
            values including Infinity and NaN.
            Applicable only to float dtypes.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDebugMode.ConciseHealth">
            <summary>
            A concise health summary for float-type tensors.
            Contains more information that CURT_HEALTH.
            Infinity and NaN are treated differently.
            Applicable only to float and integer dtypes.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDebugMode.FullHealth">
            <summary>
            A detailed health summary.
            Contains further detailed information than `CONCISE_HEALTH`.
            Information about device, dtype and shape are included.
            Counts for various types of values (Infinity, NaN, negative, zero,
            positive) are included.
            Applicable to float, integer and boolean dtypes.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDebugMode.Shape">
            <summary>
            Provides full runtime shape information, up to a maximum rank, beyond
            which the dimension sizes are truncated.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDebugMode.FullNumerics">
            <summary>
            Full numeric summary.
            Including device, dtype, shape, counts of various types of values
            (Infinity, NaN, negative, zero, positive), and summary statistics
            (minimum, maximum, mean and variance).
            Applicable to float, integer and boolean dtypes.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDebugMode.FullTensor">
            <summary>
            Full tensor value.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDebugMode.ReduceInfNanThreeSlots">
            <summary>
            Reduce the elements of a tensor to a rank-1 tensor of shape [3], in which
            - the 1st element is -inf if any element of the tensor is -inf,
              or zero otherwise.
            - the 2nd element is +inf if any element of the tensor is +inf,
              or zero otherwise.
            - the 3rd element is nan if any element of the tensor is nan, or zero
              otherwise.
            </summary>
        </member>
        <member name="T:Tensorflow.DebugEvent">
            <summary>
            An Event related to the debugging of a TensorFlow program.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.WallTimeFieldNumber">
            <summary>Field number for the "wall_time" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.WallTime">
            <summary>
            Timestamp in seconds (with microsecond precision).
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.StepFieldNumber">
            <summary>Field number for the "step" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.Step">
            <summary>
            Step of training (if available).
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.DebugMetadataFieldNumber">
            <summary>Field number for the "debug_metadata" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.DebugMetadata">
            <summary>
            Metadata related to this debugging data.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.SourceFileFieldNumber">
            <summary>Field number for the "source_file" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.SourceFile">
            <summary>
            The content of a source file.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.StackFrameWithIdFieldNumber">
            <summary>Field number for the "stack_frame_with_id" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.StackFrameWithId">
            <summary>
            A stack frame (filename, line number and column number, function name and
            code string) with ID.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.GraphOpCreationFieldNumber">
            <summary>Field number for the "graph_op_creation" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.GraphOpCreation">
            <summary>
            The creation of an op within a graph (e.g., a FuncGraph compiled from
            a Python function).
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.DebuggedGraphFieldNumber">
            <summary>Field number for the "debugged_graph" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.DebuggedGraph">
            <summary>
            Information about a debugged graph.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.ExecutionFieldNumber">
            <summary>Field number for the "execution" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.Execution">
            <summary>
            Execution of an op or a Graph (e.g., a tf.function).
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.GraphExecutionTraceFieldNumber">
            <summary>Field number for the "graph_execution_trace" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.GraphExecutionTrace">
            <summary>
            A graph execution trace: Contains information about the intermediate
            tensors computed during the graph execution.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.GraphIdFieldNumber">
            <summary>Field number for the "graph_id" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.GraphId">
            <summary>
            The ID of the graph (i.e., FuncGraph) executed here: applicable only
            to the execution of a FuncGraph.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugEvent.DebuggedDeviceFieldNumber">
            <summary>Field number for the "debugged_device" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugEvent.DebuggedDevice">
            <summary>
            A device on which debugger-instrumented ops and/or tensors reside.
            </summary>
        </member>
        <member name="T:Tensorflow.DebugEvent.WhatOneofCase">
            <summary>Enum of possible cases for the "what" oneof.</summary>
        </member>
        <member name="T:Tensorflow.DebugMetadata">
            <summary>
            Metadata about the debugger and the debugged TensorFlow program.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugMetadata.TensorflowVersionFieldNumber">
            <summary>Field number for the "tensorflow_version" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugMetadata.TensorflowVersion">
            <summary>
            Version of TensorFlow.
            </summary>
        </member>
        <member name="F:Tensorflow.DebugMetadata.FileVersionFieldNumber">
            <summary>Field number for the "file_version" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugMetadata.FileVersion">
            <summary>
            Version of the DebugEvent file format.
            Has a format of "debug.Event:&lt;number>", e.g., "debug.Event:1".
            </summary>
        </member>
        <member name="F:Tensorflow.DebugMetadata.TfdbgRunIdFieldNumber">
            <summary>Field number for the "tfdbg_run_id" field.</summary>
        </member>
        <member name="P:Tensorflow.DebugMetadata.TfdbgRunId">
            <summary>
            A unique ID for the current run of tfdbg.
            A run of tfdbg is defined as a TensorFlow job instrumented by tfdbg.
            Multiple hosts in a distributed TensorFlow job instrumented by tfdbg
            have the same ID.
            </summary>
        </member>
        <member name="T:Tensorflow.SourceFile">
            <summary>
            Content of a source file involved in the execution of the debugged TensorFlow
            program.
            </summary>
        </member>
        <member name="F:Tensorflow.SourceFile.FilePathFieldNumber">
            <summary>Field number for the "file_path" field.</summary>
        </member>
        <member name="P:Tensorflow.SourceFile.FilePath">
            <summary>
            Path to the file.
            </summary>
        </member>
        <member name="F:Tensorflow.SourceFile.HostNameFieldNumber">
            <summary>Field number for the "host_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SourceFile.HostName">
            <summary>
            Name of the host on which the file is located.
            </summary>
        </member>
        <member name="F:Tensorflow.SourceFile.LinesFieldNumber">
            <summary>Field number for the "lines" field.</summary>
        </member>
        <member name="P:Tensorflow.SourceFile.Lines">
            <summary>
            Line-by-line content of the file.
            </summary>
        </member>
        <member name="T:Tensorflow.StackFrameWithId">
            <summary>
            A stack frame with ID.
            </summary>
        </member>
        <member name="F:Tensorflow.StackFrameWithId.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Tensorflow.StackFrameWithId.Id">
            <summary>
            A unique ID for the stack frame: A UUID-like string.
            </summary>
        </member>
        <member name="F:Tensorflow.StackFrameWithId.FileLineColFieldNumber">
            <summary>Field number for the "file_line_col" field.</summary>
        </member>
        <member name="P:Tensorflow.StackFrameWithId.FileLineCol">
            <summary>
            Stack frame, i.e., a frame of a stack trace, containing information
            regarding the file name, line number, function name, code content
            of the line, and column number (if available).
            </summary>
        </member>
        <member name="T:Tensorflow.CodeLocation">
            <summary>
            Code location information: A stack trace with host-name information.
            Instead of encoding the detailed stack trace, this proto refers to IDs of
            stack frames stored as `StackFrameWithId` protos.
            </summary>
        </member>
        <member name="F:Tensorflow.CodeLocation.HostNameFieldNumber">
            <summary>Field number for the "host_name" field.</summary>
        </member>
        <member name="P:Tensorflow.CodeLocation.HostName">
            <summary>
            Host name on which the source files are located.
            </summary>
        </member>
        <member name="F:Tensorflow.CodeLocation.StackFrameIdsFieldNumber">
            <summary>Field number for the "stack_frame_ids" field.</summary>
        </member>
        <member name="P:Tensorflow.CodeLocation.StackFrameIds">
            <summary>
            ID to a stack frame, each of which is pointed to
            by a unique ID. The ordering of the frames is consistent with Python's
            `traceback.extract_tb()`.
            </summary>
        </member>
        <member name="T:Tensorflow.GraphOpCreation">
            <summary>
            The creation of an op in a TensorFlow Graph (e.g., FuncGraph in TF2).
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.OpTypeFieldNumber">
            <summary>Field number for the "op_type" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.OpType">
            <summary>
            Type of the op (e.g., "MatMul").
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.OpNameFieldNumber">
            <summary>Field number for the "op_name" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.OpName">
            <summary>
            Name of the op (e.g., "Dense/MatMul_1").
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.GraphNameFieldNumber">
            <summary>Field number for the "graph_name" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.GraphName">
            <summary>
            Name of the graph that the op is a part of (if available).
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.GraphIdFieldNumber">
            <summary>Field number for the "graph_id" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.GraphId">
            <summary>
            Unique ID of the graph (generated by debugger).
            This is the ID of the immediately-enclosing graph.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.DeviceNameFieldNumber">
            <summary>Field number for the "device_name" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.DeviceName">
            <summary>
            Name of the device that the op is assigned to (if available).
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.InputNamesFieldNumber">
            <summary>Field number for the "input_names" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.InputNames">
            <summary>
            Names of the input tensors to the op.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.NumOutputsFieldNumber">
            <summary>Field number for the "num_outputs" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.NumOutputs">
            <summary>
            Number of output tensors emitted by the op.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.CodeLocationFieldNumber">
            <summary>Field number for the "code_location" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.CodeLocation">
            <summary>
            The unique ID for code location (stack trace) of the op's creation.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphOpCreation.OutputTensorIdsFieldNumber">
            <summary>Field number for the "output_tensor_ids" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphOpCreation.OutputTensorIds">
            <summary>
            Unique IDs for the output tensors of this op.
            </summary>
        </member>
        <member name="T:Tensorflow.DebuggedGraph">
            <summary>
            A debugger-instrumented graph.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedGraph.GraphIdFieldNumber">
            <summary>Field number for the "graph_id" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedGraph.GraphId">
            <summary>
            An ID for the graph.
            This can be used up to look up graph names. Generated by the debugger.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedGraph.GraphNameFieldNumber">
            <summary>Field number for the "graph_name" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedGraph.GraphName">
            <summary>
            Name of the graph (if available).
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedGraph.InstrumentedOpsFieldNumber">
            <summary>Field number for the "instrumented_ops" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedGraph.InstrumentedOps">
            <summary>
            Names of the instrumented ops. This can be used to look up op name
            based on the numeric-summary tensors (2nd column).
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedGraph.OriginalGraphDefFieldNumber">
            <summary>Field number for the "original_graph_def" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedGraph.OriginalGraphDef">
            <summary>
            Original (uninstrumented) GraphDef (if available).
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedGraph.InstrumentedGraphDefFieldNumber">
            <summary>Field number for the "instrumented_graph_def" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedGraph.InstrumentedGraphDef">
            <summary>
            An encoded version of a GraphDef.
            This graph may include the debugger-inserted ops.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedGraph.OuterContextIdFieldNumber">
            <summary>Field number for the "outer_context_id" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedGraph.OuterContextId">
            <summary>
            IDs of the immediate enclosing context (graph), if any.
            </summary>
        </member>
        <member name="T:Tensorflow.DebuggedDevice">
            <summary>
            A device on which ops and/or tensors are instrumented by the debugger.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedDevice.DeviceNameFieldNumber">
            <summary>Field number for the "device_name" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedDevice.DeviceName">
            <summary>
            Name of the device.
            </summary>
        </member>
        <member name="F:Tensorflow.DebuggedDevice.DeviceIdFieldNumber">
            <summary>Field number for the "device_id" field.</summary>
        </member>
        <member name="P:Tensorflow.DebuggedDevice.DeviceId">
            <summary>
            A debugger-generated ID for the device. Guaranteed to be unique within
            the scope of the debugged TensorFlow program, including single-host and
            multi-host settings.
            TODO(cais): Test the uniqueness guarantee in multi-host settings.
            </summary>
        </member>
        <member name="T:Tensorflow.Execution">
            <summary>
            Data relating to the eager execution of an op or a Graph.
            For a op that generates N output tensors (N >= 0), only one
            Execution proto will be used to describe the execution event.
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.OpTypeFieldNumber">
            <summary>Field number for the "op_type" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.OpType">
            <summary>
            Op type (e.g., "MatMul").
            In the case of a Graph, this is the name of the Graph.
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.NumOutputsFieldNumber">
            <summary>Field number for the "num_outputs" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.NumOutputs">
            <summary>
            Number of output tensors.
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.GraphIdFieldNumber">
            <summary>Field number for the "graph_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.GraphId">
            <summary>
            The graph that's executed: applicable only to the eager
            execution of a FuncGraph.
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.InputTensorIdsFieldNumber">
            <summary>Field number for the "input_tensor_ids" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.InputTensorIds">
            <summary>
            IDs of the input tensors (if available).
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.OutputTensorIdsFieldNumber">
            <summary>Field number for the "output_tensor_ids" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.OutputTensorIds">
            <summary>
            IDs of the output tensors (if availbable).
            If specified, must have the same length as tensor_protos.
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.TensorDebugModeFieldNumber">
            <summary>Field number for the "tensor_debug_mode" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.TensorDebugMode">
            <summary>
            Type of the tensor value encapsulated in this proto.
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.TensorProtosFieldNumber">
            <summary>Field number for the "tensor_protos" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.TensorProtos">
            <summary>
            Output Tensor values in the type described by `tensor_value_type`.
            The length of this should match `num_outputs`.
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.CodeLocationFieldNumber">
            <summary>Field number for the "code_location" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.CodeLocation">
            <summary>
            Stack trace of the eager execution.
            </summary>
        </member>
        <member name="F:Tensorflow.Execution.OutputTensorDeviceIdsFieldNumber">
            <summary>Field number for the "output_tensor_device_ids" field.</summary>
        </member>
        <member name="P:Tensorflow.Execution.OutputTensorDeviceIds">
            <summary>
            Debugged-generated IDs of the devices on which the output tensors reside.
            To look up details about the device (e.g., name), cross-reference this
            field with the DebuggedDevice messages.
            </summary>
        </member>
        <member name="T:Tensorflow.GraphExecutionTrace">
            <summary>
            Data relating to an execution of a Graph (e.g., an eager execution of a
            FuncGraph).
            The values of the intermediate tensors computed in the graph are recorded
            in this proto. A graph execution may correspond to one or more pieces of
            `GraphExecutionTrace`, depending on whether the instrumented tensor values
            are summarized in an aggregated or separate fashion.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphExecutionTrace.TfdbgContextIdFieldNumber">
            <summary>Field number for the "tfdbg_context_id" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphExecutionTrace.TfdbgContextId">
            <summary>
            Unique ID of the context that the executed op(s) belong to (e.g., a
            compiled concrete tf.function).
            </summary>
        </member>
        <member name="F:Tensorflow.GraphExecutionTrace.OpNameFieldNumber">
            <summary>Field number for the "op_name" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphExecutionTrace.OpName">
            <summary>
            Name of the op (applicable only in the case of the `FULL_TENSOR` trace
            level).
            </summary>
        </member>
        <member name="F:Tensorflow.GraphExecutionTrace.OutputSlotFieldNumber">
            <summary>Field number for the "output_slot" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphExecutionTrace.OutputSlot">
            <summary>
            Output slot of the tensor (applicable only in the case of the `FULL_TENSOR`
            trace level).
            </summary>
        </member>
        <member name="F:Tensorflow.GraphExecutionTrace.TensorDebugModeFieldNumber">
            <summary>Field number for the "tensor_debug_mode" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphExecutionTrace.TensorDebugMode">
            <summary>
            Type of the tensor value encapsulated in this proto.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphExecutionTrace.TensorProtoFieldNumber">
            <summary>Field number for the "tensor_proto" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphExecutionTrace.TensorProto">
            <summary>
            Tensor value in the type described by `tensor_value_type`.
            This tensor may summarize the value of a single intermediate op of the
            graph, or those of multiple intermediate tensors.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphExecutionTrace.DeviceNameFieldNumber">
            <summary>Field number for the "device_name" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphExecutionTrace.DeviceName">
            <summary>
            Name of the device that the op belongs to.
            </summary>
        </member>
        <member name="T:Tensorflow.DeviceAttributesReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/device_attributes.proto</summary>
        </member>
        <member name="P:Tensorflow.DeviceAttributesReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/device_attributes.proto</summary>
        </member>
        <member name="F:Tensorflow.InterconnectLink.DeviceIdFieldNumber">
            <summary>Field number for the "device_id" field.</summary>
        </member>
        <member name="F:Tensorflow.InterconnectLink.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="F:Tensorflow.InterconnectLink.StrengthFieldNumber">
            <summary>Field number for the "strength" field.</summary>
        </member>
        <member name="F:Tensorflow.LocalLinks.LinkFieldNumber">
            <summary>Field number for the "link" field.</summary>
        </member>
        <member name="F:Tensorflow.DeviceLocality.BusIdFieldNumber">
            <summary>Field number for the "bus_id" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceLocality.BusId">
            <summary>
            Optional bus locality of device.  Default value of 0 means
            no specific locality.  Specific localities are indexed from 1.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceLocality.NumaNodeFieldNumber">
            <summary>Field number for the "numa_node" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceLocality.NumaNode">
            <summary>
            Optional NUMA locality of device.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceLocality.LinksFieldNumber">
            <summary>Field number for the "links" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceLocality.Links">
            <summary>
            Optional local interconnect links to other devices.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceAttributes.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceAttributes.Name">
            <summary>
            Fully specified name of the device within a cluster.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceAttributes.DeviceTypeFieldNumber">
            <summary>Field number for the "device_type" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceAttributes.DeviceType">
            <summary>
            String representation of device_type.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceAttributes.MemoryLimitFieldNumber">
            <summary>Field number for the "memory_limit" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceAttributes.MemoryLimit">
            <summary>
            Memory capacity of device in bytes.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceAttributes.LocalityFieldNumber">
            <summary>Field number for the "locality" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceAttributes.Locality">
            <summary>
            Platform-specific data about device that may be useful
            for supporting efficient data transfers.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceAttributes.IncarnationFieldNumber">
            <summary>Field number for the "incarnation" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceAttributes.Incarnation">
            <summary>
            A device is assigned a global unique number each time it is
            initialized. "incarnation" should never be 0.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceAttributes.PhysicalDeviceDescFieldNumber">
            <summary>Field number for the "physical_device_desc" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceAttributes.PhysicalDeviceDesc">
            <summary>
            String representation of the physical device that this device maps to.
            </summary>
        </member>
        <member name="T:Tensorflow.DeviceFiltersReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/device_filters.proto</summary>
        </member>
        <member name="P:Tensorflow.DeviceFiltersReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/device_filters.proto</summary>
        </member>
        <member name="T:Tensorflow.TaskDeviceFilters">
            <summary>
            Defines the device filters for a remote task.
            </summary>
        </member>
        <member name="F:Tensorflow.TaskDeviceFilters.DeviceFiltersFieldNumber">
            <summary>Field number for the "device_filters" field.</summary>
        </member>
        <member name="T:Tensorflow.JobDeviceFilters">
            <summary>
            Defines the device filters for tasks in a job.
            </summary>
        </member>
        <member name="F:Tensorflow.JobDeviceFilters.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.JobDeviceFilters.Name">
            <summary>
            The name of this job.
            </summary>
        </member>
        <member name="F:Tensorflow.JobDeviceFilters.TasksFieldNumber">
            <summary>Field number for the "tasks" field.</summary>
        </member>
        <member name="P:Tensorflow.JobDeviceFilters.Tasks">
            <summary>
            Mapping from task ID to task device filters.
            </summary>
        </member>
        <member name="T:Tensorflow.ClusterDeviceFilters">
            <summary>
            Defines the device filters for jobs in a cluster.
            </summary>
        </member>
        <member name="F:Tensorflow.ClusterDeviceFilters.JobsFieldNumber">
            <summary>Field number for the "jobs" field.</summary>
        </member>
        <member name="T:Tensorflow.DevicePropertiesReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/device_properties.proto</summary>
        </member>
        <member name="P:Tensorflow.DevicePropertiesReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/device_properties.proto</summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.Type">
            <summary>
            Device type (CPU, GPU, ...)
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.VendorFieldNumber">
            <summary>Field number for the "vendor" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.Vendor">
            <summary>
            Vendor (Intel, nvidia, ...)
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.ModelFieldNumber">
            <summary>Field number for the "model" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.Model">
            <summary>
            Model (Haswell, K40, ...)
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.FrequencyFieldNumber">
            <summary>Field number for the "frequency" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.Frequency">
            <summary>
            Core Frequency in Mhz
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.NumCoresFieldNumber">
            <summary>Field number for the "num_cores" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.NumCores">
            <summary>
            Number of cores
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.EnvironmentFieldNumber">
            <summary>Field number for the "environment" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.Environment">
            <summary>
            Version of the tools and libraries used with this device (e.g. gcc 4.9,
            cudnn 5.1)
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.NumRegistersFieldNumber">
            <summary>Field number for the "num_registers" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.NumRegisters">
            <summary>
            Number of registers per core.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.L1CacheSizeFieldNumber">
            <summary>Field number for the "l1_cache_size" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.L1CacheSize">
            <summary>
            L1 cache size in bytes
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.L2CacheSizeFieldNumber">
            <summary>Field number for the "l2_cache_size" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.L2CacheSize">
            <summary>
            L2 cache size in bytes
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.L3CacheSizeFieldNumber">
            <summary>Field number for the "l3_cache_size" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.L3CacheSize">
            <summary>
            L3 cache size in bytes
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.SharedMemorySizePerMultiprocessorFieldNumber">
            <summary>Field number for the "shared_memory_size_per_multiprocessor" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.SharedMemorySizePerMultiprocessor">
            <summary>
            Shared memory size per multiprocessor in bytes. This field is
            applicable to GPUs only.
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.MemorySizeFieldNumber">
            <summary>Field number for the "memory_size" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.MemorySize">
            <summary>
            Memory size in bytes
            </summary>
        </member>
        <member name="F:Tensorflow.DeviceProperties.BandwidthFieldNumber">
            <summary>Field number for the "bandwidth" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceProperties.Bandwidth">
            <summary>
            Memory bandwidth in KB/s
            </summary>
        </member>
        <member name="F:Tensorflow.NamedDevice.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.NamedDevice.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="T:Tensorflow.Eager.EagerServiceReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/eager_service.proto</summary>
        </member>
        <member name="P:Tensorflow.Eager.EagerServiceReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/eager_service.proto</summary>
        </member>
        <member name="T:Tensorflow.Eager.Operation">
            <summary>
            A proto representation of an eager operation.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.Operation.Id">
             <summary>
             A unique identifier for the operation. Set by the client so that the client
             can uniquely identify the outputs of the scheduled operation.
            
             In the initial implementation, sending duplicate IDs has undefined
             behaviour, but additional constraints may be placed upon this in the
             future.
             </summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.OpInputsFieldNumber">
            <summary>Field number for the "op_inputs" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.ControlOpIdsFieldNumber">
            <summary>Field number for the "control_op_ids" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.Operation.ControlOpIds">
            <summary>
            Control Operation IDs that will be respected when ops are re-ordered by
            async execution. If async execution (+ op re-ordering) is not enabled, this
            should have no effect.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.AttrsFieldNumber">
            <summary>Field number for the "attrs" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.IsComponentFunctionFieldNumber">
            <summary>Field number for the "is_component_function" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.Operation.IsComponentFunction">
            <summary>
            Indicates whether the op is a component of a multi-device function.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.FuncStepIdFieldNumber">
            <summary>Field number for the "func_step_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.Operation.FuncStepId">
            <summary>
            Set when is_component_function is true. It's initially generated
            when we create an FunctionLibraryRuntime::Options (negative value) and used
            to create Rendezvous for function execution. All components of a
            multi-device function should use the same step id to make sure that they
            can communicate through Send/Recv ops.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.IsFunctionFieldNumber">
            <summary>Field number for the "is_function" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.Operation.IsFunction">
            <summary>
            Indicates whether the op is a function.
            </summary>
        </member>
        <member name="T:Tensorflow.Eager.Operation.Types">
            <summary>Container for nested types declared in the Operation message type.</summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.Types.Input.RemoteHandleFieldNumber">
            <summary>Field number for the "remote_handle" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.Operation.Types.Input.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="T:Tensorflow.Eager.Operation.Types.Input.ItemOneofCase">
            <summary>Enum of possible cases for the "item" oneof.</summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueItem.HandleToDecrefFieldNumber">
            <summary>Field number for the "handle_to_decref" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueItem.OperationFieldNumber">
            <summary>Field number for the "operation" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueItem.SendTensorFieldNumber">
            <summary>Field number for the "send_tensor" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueItem.RegisterFunctionFieldNumber">
            <summary>Field number for the "register_function" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.QueueItem.RegisterFunction">
            <summary>
            Takes a FunctionDef and makes it enqueable on the remote worker.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueItem.CleanupFunctionFieldNumber">
            <summary>Field number for the "cleanup_function" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueItem.SyncRemoteExecutorForStreamFieldNumber">
            <summary>Field number for the "sync_remote_executor_for_stream" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.QueueItem.SyncRemoteExecutorForStream">
            <summary>
            A remote executor is created to execute ops/functions asynchronously
            enqueued in streaming call. Request with this item type waits for pending
            nodes to finish on the remote executor and report status.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueItem.SendPackedHandleFieldNumber">
            <summary>Field number for the "send_packed_handle" field.</summary>
        </member>
        <member name="T:Tensorflow.Eager.QueueItem.ItemOneofCase">
            <summary>Enum of possible cases for the "item" oneof.</summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueResponse.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.QueueResponse.Shape">
            <summary>
            `shape` and `tensor` cannot be set in the same response.
            Shapes of output tensors for creating remote TensorHandles.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueResponse.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.QueueResponse.Device">
            <summary>
            Optional. If set, represents the output devices of a function.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.QueueResponse.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.QueueResponse.Tensor">
            <summary>
            Output tensors of a remote function. Set when Operation.id is invalid.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextRequest.ServerDefFieldNumber">
            <summary>Field number for the "server_def" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextRequest.ServerDef">
            <summary>
            Identifies the full cluster, and this particular worker's position within.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextRequest.AsyncFieldNumber">
            <summary>Field number for the "async" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextRequest.Async">
            <summary>
            Whether the ops on the worker should be executed synchronously or
            asynchronously. By default, ops are executed synchronously.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextRequest.KeepAliveSecsFieldNumber">
            <summary>Field number for the "keep_alive_secs" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextRequest.KeepAliveSecs">
            <summary>
            Number of seconds to keep the context alive. If more than keep_alive_secs
            has passed since a particular context has been communicated with, it will
            be garbage collected.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextRequest.VersionDefFieldNumber">
            <summary>Field number for the "version_def" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextRequest.VersionDef">
            <summary>
            This is the version for all the ops that will be enqueued by the client.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextRequest.ClusterDeviceAttributesFieldNumber">
            <summary>Field number for the "cluster_device_attributes" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextRequest.ClusterDeviceAttributes">
            <summary>
            Device attributes in the cluster
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextRequest.ContextIdFieldNumber">
            <summary>Field number for the "context_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextRequest.ContextId">
            <summary>
            The ID of the created context. This is usually a randomly generated number,
            that will be used to identify the context in future requests to the
            service. Contexts are not persisted through server restarts.
            This ID will be used for all future communications as well. It is essential
            that both ends use this ID for selecting a rendezvous to get everything to
            match.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextRequest.ContextViewIdFieldNumber">
            <summary>Field number for the "context_view_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextRequest.ContextViewId">
            <summary>
            The view ID of the context.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextRequest.LazyCopyRemoteFunctionInputsFieldNumber">
            <summary>Field number for the "lazy_copy_remote_function_inputs" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextRequest.LazyCopyRemoteFunctionInputs">
            <summary>
            For a multi device function, if false, eagerly copy all remote inputs to
            the default function device; if true, lazily copy remote inputs to their
            target devices after function instantiation to avoid redundant copies.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CreateContextResponse.DeviceAttributesFieldNumber">
            <summary>Field number for the "device_attributes" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.CreateContextResponse.DeviceAttributes">
            <summary>
            List of devices that are locally accessible to the worker.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.UpdateContextRequest.ServerDefFieldNumber">
            <summary>Field number for the "server_def" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.UpdateContextRequest.ServerDef">
            <summary>
            Identifies the full cluster, and this particular worker's position within.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.UpdateContextRequest.ClusterDeviceAttributesFieldNumber">
            <summary>Field number for the "cluster_device_attributes" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.UpdateContextRequest.ClusterDeviceAttributes">
            <summary>
            Device attributes in the cluster.
            If this field is empty, it indicates that this is a simple update request
            that only increments the cluster view ID and does not require changes to
            the workers it connects to.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.UpdateContextRequest.ContextIdFieldNumber">
            <summary>Field number for the "context_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.UpdateContextRequest.ContextId">
            <summary>
            The ID of the context to be updated. A context with the specified ID must
            already exist on the recepient server of this request.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.UpdateContextRequest.ContextViewIdFieldNumber">
            <summary>Field number for the "context_view_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.UpdateContextRequest.ContextViewId">
            <summary>
            The view ID of the context, which should be contiguously incremented when
            updating the same context.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.UpdateContextResponse.DeviceAttributesFieldNumber">
            <summary>Field number for the "device_attributes" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.UpdateContextResponse.DeviceAttributes">
            <summary>
            List of devices that are locally accessible to the worker.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.EnqueueRequest.ContextIdFieldNumber">
            <summary>Field number for the "context_id" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.EnqueueRequest.QueueFieldNumber">
            <summary>Field number for the "queue" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.EnqueueResponse.QueueResponseFieldNumber">
            <summary>Field number for the "queue_response" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.EnqueueResponse.QueueResponse">
            <summary>
            A single operation response for every item in the request.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.WaitQueueDoneRequest.ContextIdFieldNumber">
            <summary>Field number for the "context_id" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.WaitQueueDoneRequest.OpIdFieldNumber">
            <summary>Field number for the "op_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.WaitQueueDoneRequest.OpId">
            <summary>
            Ids to wait on. If empty, wait on everything currently pending.
            </summary>
        </member>
        <member name="T:Tensorflow.Eager.WaitQueueDoneResponse">
            <summary>
            TODO(nareshmodi): Consider adding NodeExecStats here to be able to
            propagate some stats.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.RunComponentFunctionRequest.ContextIdFieldNumber">
            <summary>Field number for the "context_id" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.RunComponentFunctionRequest.OperationFieldNumber">
            <summary>Field number for the "operation" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.RunComponentFunctionRequest.OutputNumFieldNumber">
            <summary>Field number for the "output_num" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RunComponentFunctionRequest.OutputNum">
            <summary>
            The output indices of its parent function.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.RunComponentFunctionResponse.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.RunComponentFunctionResponse.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.KeepAliveRequest.ContextIdFieldNumber">
            <summary>Field number for the "context_id" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.KeepAliveResponse.ContextViewIdFieldNumber">
            <summary>Field number for the "context_view_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.KeepAliveResponse.ContextViewId">
            <summary>
            If the requested context_id is on the remote host, set the context view ID.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CloseContextRequest.ContextIdFieldNumber">
            <summary>Field number for the "context_id" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.CloseContextRequest.ContextViewIdFieldNumber">
            <summary>Field number for the "context_view_id" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.RegisterFunctionOp.FunctionDefFieldNumber">
            <summary>Field number for the "function_def" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.RegisterFunctionOp.IsComponentFunctionFieldNumber">
            <summary>Field number for the "is_component_function" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RegisterFunctionOp.IsComponentFunction">
            <summary>
            If true, it means that function_def is produced by graph partition during
            multi-device function instantiation.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.RegisterFunctionOp.LibraryFieldNumber">
            <summary>Field number for the "library" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RegisterFunctionOp.Library">
            <summary>
            All necessary FunctionDefs and GradientDefs to expand `function_def`.
            When is_component_function is true, `function_def` could be a nested
            function, since some nodes in its parent's function body could be
            replaced with a new function by the graph optimization passes. No need to
            add FunctionDefs here to the function cache in EagerContext since they
            won't be executed as KernelAndDevices.
            </summary>
        </member>
        <member name="T:Tensorflow.Eager.CleanupFunctionOp">
            <summary>
            Cleanup the step state of a multi-device function (e.g. tensors buffered by
            a `Send` op but not picked up by its corresponding `Recv` op).
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.CleanupFunctionOp.StepIdFieldNumber">
            <summary>Field number for the "step_id" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.SendTensorOp.OpIdFieldNumber">
            <summary>Field number for the "op_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.SendTensorOp.OpId">
            <summary>
            All remote tensors are identified by &lt;Op ID, Output num>. To mimic this
            situation when directly sending tensors, we include an "artificial" op ID
            (which would have corresponded to the _Recv op when not using SendTensor).
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.SendTensorOp.TensorsFieldNumber">
            <summary>Field number for the "tensors" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.SendTensorOp.Tensors">
            <summary>
            The index within the repeated field is the output number that will help
            uniquely identify (along with the above op_id) the particular tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.SendTensorOp.DeviceNameFieldNumber">
            <summary>Field number for the "device_name" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.SendTensorOp.DeviceName">
            <summary>
            The device on which the tensors should be resident.
            </summary>
        </member>
        <member name="T:Tensorflow.Eager.SendPackedHandleOp">
            <summary>
            Send a packed TensorHandle to a remote worker.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.SendPackedHandleOp.OpIdFieldNumber">
            <summary>Field number for the "op_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.SendPackedHandleOp.OpId">
            <summary>
            Op id of the remote packed TensorHandle.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.SendPackedHandleOp.HandlesFieldNumber">
            <summary>Field number for the "handles" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.SendPackedHandleOp.DeviceNameFieldNumber">
            <summary>Field number for the "device_name" field.</summary>
        </member>
        <member name="T:Tensorflow.Eager.SendPackedHandleOp.Types">
            <summary>Container for nested types declared in the SendPackedHandleOp message type.</summary>
        </member>
        <member name="F:Tensorflow.Eager.SendPackedHandleOp.Types.LocalTensorHandle.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.SendPackedHandleOp.Types.LocalTensorHandle.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.SendPackedHandleOp.Types.LocalTensorHandle.Device">
            <summary>
            Device where the tensor is produced.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.SendPackedHandleOp.Types.Handle.LocalHandleFieldNumber">
            <summary>Field number for the "local_handle" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.SendPackedHandleOp.Types.Handle.RemoteHandleFieldNumber">
            <summary>Field number for the "remote_handle" field.</summary>
        </member>
        <member name="T:Tensorflow.Eager.SendPackedHandleOp.Types.Handle.ItemOneofCase">
            <summary>Enum of possible cases for the "item" oneof.</summary>
        </member>
        <member name="T:Tensorflow.Eager.RemoteTensorHandleReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/remote_tensor_handle.proto</summary>
        </member>
        <member name="P:Tensorflow.Eager.RemoteTensorHandleReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/remote_tensor_handle.proto</summary>
        </member>
        <member name="F:Tensorflow.Eager.ResourceDtypeAndShape.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.ResourceDtypeAndShape.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.Eager.RemoteTensorHandle.OpIdFieldNumber">
            <summary>Field number for the "op_id" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RemoteTensorHandle.OpId">
            <summary>
            The ID of the operation that produced this tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.RemoteTensorHandle.OutputNumFieldNumber">
            <summary>Field number for the "output_num" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RemoteTensorHandle.OutputNum">
            <summary>
            The index into the outputs of the operation that produced this tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.RemoteTensorHandle.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RemoteTensorHandle.Device">
            <summary>
            Device where the tensor is located. Cannot be empty.
            For multi-device functions, it's the default device passed to placer.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.RemoteTensorHandle.OpDeviceFieldNumber">
            <summary>Field number for the "op_device" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RemoteTensorHandle.OpDevice">
            <summary>
            Device of the operation producing this tensor. Can be empty if the
            operation producing this tensor is a multi-device function.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.RemoteTensorHandle.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RemoteTensorHandle.Dtype">
            <summary>
            Tensor type.
            </summary>
        </member>
        <member name="F:Tensorflow.Eager.RemoteTensorHandle.ResourceDtypesAndShapesFieldNumber">
            <summary>Field number for the "resource_dtypes_and_shapes" field.</summary>
        </member>
        <member name="P:Tensorflow.Eager.RemoteTensorHandle.ResourceDtypesAndShapes">
            <summary>
            Optional data types and shapes of a remote resource variable.
            </summary>
        </member>
        <member name="T:Tensorflow.Error.ErrorCodesReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/error_codes.proto</summary>
        </member>
        <member name="P:Tensorflow.Error.ErrorCodesReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/error_codes.proto</summary>
        </member>
        <member name="T:Tensorflow.Error.Code">
             <summary>
             The canonical error codes for TensorFlow APIs.
            
             Warnings:
            
             -   Do not change any numeric assignments.
             -   Changes to this list should only be made if there is a compelling
                 need that can't be satisfied in another way.  Such changes
                 must be approved by at least two OWNERS.
             -   These error codes must match gRPC and protobuf error codes (except for
                 DO_NOT_USE_RESERVED_FOR_FUTURE_EXPANSION_USE_DEFAULT_IN_SWITCH_INSTEAD_).
            
             Sometimes multiple error codes may apply.  Services should return
             the most specific error code that applies.  For example, prefer
             OUT_OF_RANGE over FAILED_PRECONDITION if both codes apply.
             Similarly prefer NOT_FOUND or ALREADY_EXISTS over FAILED_PRECONDITION.
             </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.Ok">
            <summary>
            Not an error; returned on success
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.Cancelled">
            <summary>
            The operation was cancelled (typically by the caller).
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.Unknown">
            <summary>
            Unknown error.  An example of where this error may be returned is
            if a Status value received from another address space belongs to
            an error-space that is not known in this address space.  Also
            errors raised by APIs that do not return enough error information
            may be converted to this error.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.InvalidArgument">
            <summary>
            Client specified an invalid argument.  Note that this differs
            from FAILED_PRECONDITION.  INVALID_ARGUMENT indicates arguments
            that are problematic regardless of the state of the system
            (e.g., a malformed file name).
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.DeadlineExceeded">
            <summary>
            Deadline expired before operation could complete.  For operations
            that change the state of the system, this error may be returned
            even if the operation has completed successfully.  For example, a
            successful response from a server could have been delayed long
            enough for the deadline to expire.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.NotFound">
            <summary>
            Some requested entity (e.g., file or directory) was not found.
            For privacy reasons, this code *may* be returned when the client
            does not have the access right to the entity.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.AlreadyExists">
            <summary>
            Some entity that we attempted to create (e.g., file or directory)
            already exists.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.PermissionDenied">
            <summary>
            The caller does not have permission to execute the specified
            operation.  PERMISSION_DENIED must not be used for rejections
            caused by exhausting some resource (use RESOURCE_EXHAUSTED
            instead for those errors).  PERMISSION_DENIED must not be
            used if the caller can not be identified (use UNAUTHENTICATED
            instead for those errors).
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.Unauthenticated">
            <summary>
            The request does not have valid authentication credentials for the
            operation.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.ResourceExhausted">
            <summary>
            Some resource has been exhausted, perhaps a per-user quota, or
            perhaps the entire file system is out of space.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.FailedPrecondition">
             <summary>
             Operation was rejected because the system is not in a state
             required for the operation's execution.  For example, directory
             to be deleted may be non-empty, an rmdir operation is applied to
             a non-directory, etc.
            
             A litmus test that may help a service implementor in deciding
             between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
              (a) Use UNAVAILABLE if the client can retry just the failing call.
              (b) Use ABORTED if the client should retry at a higher-level
                  (e.g., restarting a read-modify-write sequence).
              (c) Use FAILED_PRECONDITION if the client should not retry until
                  the system state has been explicitly fixed.  E.g., if an "rmdir"
                  fails because the directory is non-empty, FAILED_PRECONDITION
                  should be returned since the client should not retry unless
                  they have first fixed up the directory by deleting files from it.
              (d) Use FAILED_PRECONDITION if the client performs conditional
                  REST Get/Update/Delete on a resource and the resource on the
                  server does not match the condition. E.g., conflicting
                  read-modify-write on the same resource.
             </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.Aborted">
             <summary>
             The operation was aborted, typically due to a concurrency issue
             like sequencer check failures, transaction aborts, etc.
            
             See litmus test above for deciding between FAILED_PRECONDITION,
             ABORTED, and UNAVAILABLE.
             </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.OutOfRange">
             <summary>
             Operation tried to iterate past the valid input range.  E.g., seeking or
             reading past end of file.
            
             Unlike INVALID_ARGUMENT, this error indicates a problem that may
             be fixed if the system state changes. For example, a 32-bit file
             system will generate INVALID_ARGUMENT if asked to read at an
             offset that is not in the range [0,2^32-1], but it will generate
             OUT_OF_RANGE if asked to read from an offset past the current
             file size.
            
             There is a fair bit of overlap between FAILED_PRECONDITION and
             OUT_OF_RANGE.  We recommend using OUT_OF_RANGE (the more specific
             error) when it applies so that callers who are iterating through
             a space can easily look for an OUT_OF_RANGE error to detect when
             they are done.
             </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.Unimplemented">
            <summary>
            Operation is not implemented or not supported/enabled in this service.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.Internal">
            <summary>
            Internal errors.  Means some invariant expected by the underlying
            system has been broken.  If you see one of these errors,
            something is very broken.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.Unavailable">
             <summary>
             The service is currently unavailable.  This is a most likely a
             transient condition and may be corrected by retrying with
             a backoff.
            
             See litmus test above for deciding between FAILED_PRECONDITION,
             ABORTED, and UNAVAILABLE.
             </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.DataLoss">
            <summary>
            Unrecoverable data loss or corruption.
            </summary>
        </member>
        <member name="F:Tensorflow.Error.Code.DoNotUseReservedForFutureExpansionUseDefaultInSwitchInstead">
             <summary>
             An extra enum entry to prevent people from writing code that
             fails to compile when a new code is added.
            
             Nobody should ever reference this enumeration entry. In particular,
             if you write C++ code that switches on this enumeration, add a default:
             case instead of a case that mentions this enumeration entry.
            
             Nobody should rely on the value (currently 20) listed here.  It
             may change in the future.
             </summary>
        </member>
        <member name="T:Tensorflow.FunctionReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/function.proto</summary>
        </member>
        <member name="P:Tensorflow.FunctionReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/function.proto</summary>
        </member>
        <member name="T:Tensorflow.FunctionDefLibrary">
            <summary>
            A library is a set of named functions.
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionDefLibrary.FunctionFieldNumber">
            <summary>Field number for the "function" field.</summary>
        </member>
        <member name="F:Tensorflow.FunctionDefLibrary.GradientFieldNumber">
            <summary>Field number for the "gradient" field.</summary>
        </member>
        <member name="T:Tensorflow.FunctionDef">
             <summary>
             A function can be instantiated when the runtime can bind every attr
             with a value. When a GraphDef has a call to a function, it must
             have binding for every attr defined in the signature.
            
             TODO(zhifengc):
               * device spec, etc.
             </summary>
        </member>
        <member name="F:Tensorflow.FunctionDef.SignatureFieldNumber">
            <summary>Field number for the "signature" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionDef.Signature">
            <summary>
            The definition of the function's name, arguments, return values,
            attrs etc.
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionDef.AttrFieldNumber">
            <summary>Field number for the "attr" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionDef.Attr">
            <summary>
            Attributes specific to this function definition.
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionDef.ArgAttrFieldNumber">
            <summary>Field number for the "arg_attr" field.</summary>
        </member>
        <member name="F:Tensorflow.FunctionDef.ResourceArgUniqueIdFieldNumber">
            <summary>Field number for the "resource_arg_unique_id" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionDef.ResourceArgUniqueId">
             <summary>
             Unique IDs for each resource argument, used to track aliasing resources. If
             Argument A and Argument B alias each other, then
             resource_arg_unique_ids[A.index] == resource_arg_unique_ids[B.index].
            
             If this field is empty, none of the arguments could alias; otherwise, every
             resource argument should have an entry in this field.
            
             When instantiated, the unique IDs will be attached to the _Arg nodes'
             "_resource_arg_unique_id" attribute.
             </summary>
        </member>
        <member name="F:Tensorflow.FunctionDef.NodeDefFieldNumber">
            <summary>Field number for the "node_def" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionDef.NodeDef">
            <summary>
            By convention, "op" in node_def is resolved by consulting with a
            user-defined library first. If not resolved, "func" is assumed to
            be a builtin op.
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionDef.RetFieldNumber">
            <summary>Field number for the "ret" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionDef.Ret">
            <summary>
            A mapping from the output arg names from `signature` to the
            outputs from `node_def` that should be returned by the function.
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionDef.ControlRetFieldNumber">
            <summary>Field number for the "control_ret" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionDef.ControlRet">
            <summary>
            A mapping from control output names from `signature` to node names in
            `node_def` which should be control outputs of this function.
            </summary>
        </member>
        <member name="T:Tensorflow.FunctionDef.Types">
            <summary>Container for nested types declared in the FunctionDef message type.</summary>
        </member>
        <member name="T:Tensorflow.FunctionDef.Types.ArgAttrs">
            <summary>
            Attributes for function arguments. These attributes are the same set of
            valid attributes as to _Arg nodes.
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionDef.Types.ArgAttrs.AttrFieldNumber">
            <summary>Field number for the "attr" field.</summary>
        </member>
        <member name="T:Tensorflow.GradientDef">
             <summary>
             GradientDef defines the gradient function of a function defined in
             a function library.
            
             A gradient function g (specified by gradient_func) for a function f
             (specified by function_name) must follow the following:
            
             The function 'f' must be a numerical function which takes N inputs
             and produces M outputs. Its gradient function 'g', which is a
             function taking N + M inputs and produces N outputs.
            
             I.e. if we have
                (y1, y2, ..., y_M) = f(x1, x2, ..., x_N),
             then, g is
                (dL/dx1, dL/dx2, ..., dL/dx_N) = g(x1, x2, ..., x_N,
                                                  dL/dy1, dL/dy2, ..., dL/dy_M),
             where L is a scalar-value function of (x1, x2, ..., xN) (e.g., the
             loss function). dL/dx_i is the partial derivative of L with respect
             to x_i.
             </summary>
        </member>
        <member name="F:Tensorflow.GradientDef.FunctionNameFieldNumber">
            <summary>Field number for the "function_name" field.</summary>
        </member>
        <member name="P:Tensorflow.GradientDef.FunctionName">
            <summary>
            The function name.
            </summary>
        </member>
        <member name="F:Tensorflow.GradientDef.GradientFuncFieldNumber">
            <summary>Field number for the "gradient_func" field.</summary>
        </member>
        <member name="P:Tensorflow.GradientDef.GradientFunc">
            <summary>
            The gradient function's name.
            </summary>
        </member>
        <member name="T:Tensorflow.GraphReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/graph.proto</summary>
        </member>
        <member name="P:Tensorflow.GraphReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/graph.proto</summary>
        </member>
        <member name="T:Tensorflow.GraphDef">
            <summary>
            Represents the graph of operations
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDef.NodeFieldNumber">
            <summary>Field number for the "node" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphDef.VersionsFieldNumber">
            <summary>Field number for the "versions" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDef.Versions">
            <summary>
            Compatibility versions of the graph.  See core/public/version.h for version
            history.  The GraphDef version is distinct from the TensorFlow version, and
            each release of TensorFlow will support a range of GraphDef versions.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDef.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDef.Version">
            <summary>
            Deprecated single version field; use versions above instead.  Since all
            GraphDef changes before "versions" was introduced were forward
            compatible, this field is entirely ignored.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDef.LibraryFieldNumber">
            <summary>Field number for the "library" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDef.Library">
             <summary>
             EXPERIMENTAL. DO NOT USE OR DEPEND ON THIS YET.
            
             "library" provides user-defined functions.
            
             Naming:
               * library.function.name are in a flat namespace.
                 NOTE: We may need to change it to be hierarchical to support
                 different orgs. E.g.,
                 { "/google/nn", { ... }},
                 { "/google/vision", { ... }}
                 { "/org_foo/module_bar", { ... }}
                 map&lt;string, FunctionDefLib> named_lib;
               * If node[i].op is the name of one function in "library",
                 node[i] is deemed as a function call. Otherwise, node[i].op
                 must be a primitive operation supported by the runtime.
            
             Function call semantics:
            
               * The callee may start execution as soon as some of its inputs
                 are ready. The caller may want to use Tuple() mechanism to
                 ensure all inputs are ready in the same time.
            
               * The consumer of return values may start executing as soon as
                 the return values the consumer depends on are ready.  The
                 consumer may want to use Tuple() mechanism to ensure the
                 consumer does not start until all return values of the callee
                 function are ready.
             </summary>
        </member>
        <member name="T:Tensorflow.GraphDebugInfoReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/graph_debug_info.proto</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfoReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/graph_debug_info.proto</summary>
        </member>
        <member name="F:Tensorflow.GraphDebugInfo.FilesFieldNumber">
            <summary>Field number for the "files" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfo.Files">
            <summary>
            This stores all the source code file names and can be indexed by the
            `file_index`.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDebugInfo.TracesFieldNumber">
            <summary>Field number for the "traces" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfo.Traces">
            <summary>
            This maps a node name to a stack trace in the source code.
            The map key is a mangling of the containing function and op name with
            syntax:
              op.name '@' func_name
            For ops in the top-level graph, the func_name is the empty string.
            Note that op names are restricted to a small number of characters which
            exclude '@', making it impossible to collide keys of this form. Function
            names accept a much wider set of characters.
            It would be preferable to avoid mangling and use a tuple key of (op.name,
            func_name), but this is not supported with protocol buffers.
            </summary>
        </member>
        <member name="T:Tensorflow.GraphDebugInfo.Types">
            <summary>Container for nested types declared in the GraphDebugInfo message type.</summary>
        </member>
        <member name="T:Tensorflow.GraphDebugInfo.Types.FileLineCol">
            <summary>
            This represents a file/line location in the source code.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDebugInfo.Types.FileLineCol.FileIndexFieldNumber">
            <summary>Field number for the "file_index" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfo.Types.FileLineCol.FileIndex">
            <summary>
            File name index, which can be used to retrieve the file name string from
            `files`. The value should be between 0 and (len(files)-1)
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDebugInfo.Types.FileLineCol.LineFieldNumber">
            <summary>Field number for the "line" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfo.Types.FileLineCol.Line">
            <summary>
            Line number in the file.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDebugInfo.Types.FileLineCol.ColFieldNumber">
            <summary>Field number for the "col" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfo.Types.FileLineCol.Col">
            <summary>
            Col number in the file line.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDebugInfo.Types.FileLineCol.FuncFieldNumber">
            <summary>Field number for the "func" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfo.Types.FileLineCol.Func">
            <summary>
            Name of function contains the file line.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDebugInfo.Types.FileLineCol.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfo.Types.FileLineCol.Code">
            <summary>
            Source code contained in this file line.
            </summary>
        </member>
        <member name="T:Tensorflow.GraphDebugInfo.Types.StackTrace">
            <summary>
            This represents a stack trace which is a ordered list of `FileLineCol`.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphDebugInfo.Types.StackTrace.FileLineColsFieldNumber">
            <summary>Field number for the "file_line_cols" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphDebugInfo.Types.StackTrace.FileLineCols">
            <summary>
            Each line in the stack trace.
            </summary>
        </member>
        <member name="T:Tensorflow.GraphTransferInfoReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/graph_transfer_info.proto</summary>
        </member>
        <member name="P:Tensorflow.GraphTransferInfoReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/graph_transfer_info.proto</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInput.NodeIdFieldNumber">
            <summary>Field number for the "node_id" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInput.OutputPortFieldNumber">
            <summary>Field number for the "output_port" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInfo.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInfo.NodeIdFieldNumber">
            <summary>Field number for the "node_id" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInfo.TypeNameFieldNumber">
            <summary>Field number for the "type_name" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInfo.SocOpIdFieldNumber">
            <summary>Field number for the "soc_op_id" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInfo.PaddingIdFieldNumber">
            <summary>Field number for the "padding_id" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInfo.InputCountFieldNumber">
            <summary>Field number for the "input_count" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInfo.OutputCountFieldNumber">
            <summary>Field number for the "output_count" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferConstNodeInfo.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferConstNodeInfo.NodeIdFieldNumber">
            <summary>Field number for the "node_id" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferConstNodeInfo.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferConstNodeInfo.DataFieldNumber">
            <summary>Field number for the "data" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferConstNodeInfo.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInputInfo.NodeIdFieldNumber">
            <summary>Field number for the "node_id" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeInputInfo.NodeInputFieldNumber">
            <summary>Field number for the "node_input" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeOutputInfo.NodeIdFieldNumber">
            <summary>Field number for the "node_id" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferNodeOutputInfo.MaxByteSizeFieldNumber">
            <summary>Field number for the "max_byte_size" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferGraphInputNodeInfo.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferGraphInputNodeInfo.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferGraphInputNodeInfo.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferGraphOutputNodeInfo.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferGraphOutputNodeInfo.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferGraphOutputNodeInfo.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="T:Tensorflow.GraphTransferInfo">
            <summary>
            Protocol buffer representing a handle to a tensorflow resource. Handles are
            not valid across executions, but can be serialized back and forth from within
            a single run.
            </summary>
        </member>
        <member name="F:Tensorflow.GraphTransferInfo.NodeInfoFieldNumber">
            <summary>Field number for the "node_info" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferInfo.ConstNodeInfoFieldNumber">
            <summary>Field number for the "const_node_info" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferInfo.NodeInputInfoFieldNumber">
            <summary>Field number for the "node_input_info" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferInfo.NodeOutputInfoFieldNumber">
            <summary>Field number for the "node_output_info" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferInfo.GraphInputNodeInfoFieldNumber">
            <summary>Field number for the "graph_input_node_info" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphTransferInfo.GraphInputNodeInfo">
            <summary>
            Input Node parameters of transferred graph
            </summary>
        </member>
        <member name="F:Tensorflow.GraphTransferInfo.GraphOutputNodeInfoFieldNumber">
            <summary>Field number for the "graph_output_node_info" field.</summary>
        </member>
        <member name="F:Tensorflow.GraphTransferInfo.DestinationFieldNumber">
            <summary>Field number for the "destination" field.</summary>
        </member>
        <member name="P:Tensorflow.GraphTransferInfo.Destination">
            <summary>
            Destination of graph transfer
            </summary>
        </member>
        <member name="T:Tensorflow.GraphTransferInfo.Types">
            <summary>Container for nested types declared in the GraphTransferInfo message type.</summary>
        </member>
        <member name="T:Tensorflow.KernelDefReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/kernel_def.proto</summary>
        </member>
        <member name="P:Tensorflow.KernelDefReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/kernel_def.proto</summary>
        </member>
        <member name="F:Tensorflow.KernelDef.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="P:Tensorflow.KernelDef.Op">
            <summary>
            Must match the name of an Op.
            </summary>
        </member>
        <member name="F:Tensorflow.KernelDef.DeviceTypeFieldNumber">
            <summary>Field number for the "device_type" field.</summary>
        </member>
        <member name="P:Tensorflow.KernelDef.DeviceType">
            <summary>
            Type of device this kernel runs on.
            </summary>
        </member>
        <member name="F:Tensorflow.KernelDef.ConstraintFieldNumber">
            <summary>Field number for the "constraint" field.</summary>
        </member>
        <member name="F:Tensorflow.KernelDef.HostMemoryArgFieldNumber">
            <summary>Field number for the "host_memory_arg" field.</summary>
        </member>
        <member name="P:Tensorflow.KernelDef.HostMemoryArg">
            <summary>
            Names of the Op's input_/output_args that reside in host memory
            instead of device memory.
            </summary>
        </member>
        <member name="F:Tensorflow.KernelDef.LabelFieldNumber">
            <summary>Field number for the "label" field.</summary>
        </member>
        <member name="P:Tensorflow.KernelDef.Label">
            <summary>
            This allows experimental kernels to be registered for an op that
            won't be used unless the user specifies a "_kernel" attr with
            value matching this.
            </summary>
        </member>
        <member name="F:Tensorflow.KernelDef.PriorityFieldNumber">
            <summary>Field number for the "priority" field.</summary>
        </member>
        <member name="P:Tensorflow.KernelDef.Priority">
            <summary>
            Prioritization of kernel amongst different devices. By default we assume
            priority is 0. The higher the priority the better. By default (i.e. if
            this is not set), we prefer GPU kernels over CPU.
            </summary>
        </member>
        <member name="T:Tensorflow.KernelDef.Types">
            <summary>Container for nested types declared in the KernelDef message type.</summary>
        </member>
        <member name="F:Tensorflow.KernelDef.Types.AttrConstraint.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.KernelDef.Types.AttrConstraint.Name">
            <summary>
            Name of an attr from the Op.
            </summary>
        </member>
        <member name="F:Tensorflow.KernelDef.Types.AttrConstraint.AllowedValuesFieldNumber">
            <summary>Field number for the "allowed_values" field.</summary>
        </member>
        <member name="P:Tensorflow.KernelDef.Types.AttrConstraint.AllowedValues">
            <summary>
            A list of values that this kernel supports for this attr.
            Like OpDef.AttrDef.allowed_values, except for kernels instead of Ops.
            </summary>
        </member>
        <member name="T:Tensorflow.KernelList">
            <summary>
            A collection of KernelDefs
            </summary>
        </member>
        <member name="F:Tensorflow.KernelList.KernelFieldNumber">
            <summary>Field number for the "kernel" field.</summary>
        </member>
        <member name="T:Tensorflow.LogMemoryReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/log_memory.proto</summary>
        </member>
        <member name="P:Tensorflow.LogMemoryReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/log_memory.proto</summary>
        </member>
        <member name="F:Tensorflow.MemoryLogStep.StepIdFieldNumber">
            <summary>Field number for the "step_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogStep.StepId">
            <summary>
            Process-unique step id.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogStep.HandleFieldNumber">
            <summary>Field number for the "handle" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogStep.Handle">
            <summary>
            Handle describing the feeds and fetches of the step.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorAllocation.StepIdFieldNumber">
            <summary>Field number for the "step_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorAllocation.StepId">
            <summary>
            Process-unique step id.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorAllocation.KernelNameFieldNumber">
            <summary>Field number for the "kernel_name" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorAllocation.KernelName">
            <summary>
            Name of the kernel making the allocation as set in GraphDef,
            e.g., "affine2/weights/Assign".
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorAllocation.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorAllocation.Tensor">
            <summary>
            Allocated tensor details.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorDeallocation.AllocationIdFieldNumber">
            <summary>Field number for the "allocation_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorDeallocation.AllocationId">
            <summary>
            Id of the tensor buffer being deallocated, used to match to a
            corresponding allocation.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorDeallocation.AllocatorNameFieldNumber">
            <summary>Field number for the "allocator_name" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorDeallocation.AllocatorName">
            <summary>
            Name of the allocator used.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorOutput.StepIdFieldNumber">
            <summary>Field number for the "step_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorOutput.StepId">
            <summary>
            Process-unique step id.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorOutput.KernelNameFieldNumber">
            <summary>Field number for the "kernel_name" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorOutput.KernelName">
            <summary>
            Name of the kernel producing an output as set in GraphDef, e.g.,
            "affine2/weights/Assign".
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorOutput.IndexFieldNumber">
            <summary>Field number for the "index" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorOutput.Index">
            <summary>
            Index of the output being set.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogTensorOutput.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogTensorOutput.Tensor">
            <summary>
            Output tensor details.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawAllocation.StepIdFieldNumber">
            <summary>Field number for the "step_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawAllocation.StepId">
            <summary>
            Process-unique step id.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawAllocation.OperationFieldNumber">
            <summary>Field number for the "operation" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawAllocation.Operation">
            <summary>
            Name of the operation making the allocation.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawAllocation.NumBytesFieldNumber">
            <summary>Field number for the "num_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawAllocation.NumBytes">
            <summary>
            Number of bytes in the allocation.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawAllocation.PtrFieldNumber">
            <summary>Field number for the "ptr" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawAllocation.Ptr">
            <summary>
            Address of the allocation.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawAllocation.AllocationIdFieldNumber">
            <summary>Field number for the "allocation_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawAllocation.AllocationId">
            <summary>
            Id of the tensor buffer being allocated, used to match to a
            corresponding deallocation.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawAllocation.AllocatorNameFieldNumber">
            <summary>Field number for the "allocator_name" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawAllocation.AllocatorName">
            <summary>
            Name of the allocator used.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawDeallocation.StepIdFieldNumber">
            <summary>Field number for the "step_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawDeallocation.StepId">
            <summary>
            Process-unique step id.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawDeallocation.OperationFieldNumber">
            <summary>Field number for the "operation" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawDeallocation.Operation">
            <summary>
            Name of the operation making the deallocation.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawDeallocation.AllocationIdFieldNumber">
            <summary>Field number for the "allocation_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawDeallocation.AllocationId">
            <summary>
            Id of the tensor buffer being deallocated, used to match to a
            corresponding allocation.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawDeallocation.AllocatorNameFieldNumber">
            <summary>Field number for the "allocator_name" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawDeallocation.AllocatorName">
            <summary>
            Name of the allocator used.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryLogRawDeallocation.DeferredFieldNumber">
            <summary>Field number for the "deferred" field.</summary>
        </member>
        <member name="P:Tensorflow.MemoryLogRawDeallocation.Deferred">
            <summary>
            True if the deallocation is queued and will be performed later,
            e.g. for GPU lazy freeing of buffers.
            </summary>
        </member>
        <member name="T:Tensorflow.MasterReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/master.proto</summary>
        </member>
        <member name="P:Tensorflow.MasterReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/master.proto</summary>
        </member>
        <member name="F:Tensorflow.CreateSessionRequest.GraphDefFieldNumber">
            <summary>Field number for the "graph_def" field.</summary>
        </member>
        <member name="P:Tensorflow.CreateSessionRequest.GraphDef">
            <summary>
            The initial graph definition.
            </summary>
        </member>
        <member name="F:Tensorflow.CreateSessionRequest.ConfigFieldNumber">
            <summary>Field number for the "config" field.</summary>
        </member>
        <member name="P:Tensorflow.CreateSessionRequest.Config">
            <summary>
            Configuration options.
            </summary>
        </member>
        <member name="F:Tensorflow.CreateSessionRequest.TargetFieldNumber">
            <summary>Field number for the "target" field.</summary>
        </member>
        <member name="P:Tensorflow.CreateSessionRequest.Target">
            <summary>
            The target string used from the client's perspective.
            </summary>
        </member>
        <member name="F:Tensorflow.CreateSessionResponse.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.CreateSessionResponse.SessionHandle">
             <summary>
             The session handle to be used in subsequent calls for the created session.
            
             The client must arrange to call CloseSession with this returned
             session handle to close the session.
             </summary>
        </member>
        <member name="F:Tensorflow.CreateSessionResponse.GraphVersionFieldNumber">
            <summary>Field number for the "graph_version" field.</summary>
        </member>
        <member name="P:Tensorflow.CreateSessionResponse.GraphVersion">
            <summary>
            The initial version number for the graph, to be used in the next call
            to ExtendSession.
            </summary>
        </member>
        <member name="F:Tensorflow.ExtendSessionRequest.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.ExtendSessionRequest.SessionHandle">
            <summary>
            REQUIRED: session_handle must be returned by a CreateSession call
            to the same master service.
            </summary>
        </member>
        <member name="F:Tensorflow.ExtendSessionRequest.GraphDefFieldNumber">
            <summary>Field number for the "graph_def" field.</summary>
        </member>
        <member name="P:Tensorflow.ExtendSessionRequest.GraphDef">
            <summary>
            REQUIRED: The nodes to be added to the session's graph. If any node has
            the same name as an existing node, the operation will fail with
            ILLEGAL_ARGUMENT.
            </summary>
        </member>
        <member name="F:Tensorflow.ExtendSessionRequest.CurrentGraphVersionFieldNumber">
            <summary>Field number for the "current_graph_version" field.</summary>
        </member>
        <member name="P:Tensorflow.ExtendSessionRequest.CurrentGraphVersion">
            <summary>
            REQUIRED: The version number of the graph to be extended. This will be
            tested against the current server-side version number, and the operation
            will fail with FAILED_PRECONDITION if they do not match.
            </summary>
        </member>
        <member name="T:Tensorflow.ExtendSessionResponse">
            <summary>
            TODO(mrry): Return something about the operation?
            </summary>
        </member>
        <member name="F:Tensorflow.ExtendSessionResponse.NewGraphVersionFieldNumber">
            <summary>Field number for the "new_graph_version" field.</summary>
        </member>
        <member name="P:Tensorflow.ExtendSessionResponse.NewGraphVersion">
            <summary>
            The new version number for the extended graph, to be used in the next call
            to ExtendSession.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepRequest.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepRequest.SessionHandle">
            <summary>
            REQUIRED: session_handle must be returned by a CreateSession call
            to the same master service.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepRequest.FeedFieldNumber">
            <summary>Field number for the "feed" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepRequest.Feed">
            <summary>
            Tensors to be fed in the step. Each feed is a named tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepRequest.FetchFieldNumber">
            <summary>Field number for the "fetch" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepRequest.Fetch">
            <summary>
            Fetches. A list of tensor names. The caller expects a tensor to
            be returned for each fetch[i] (see RunStepResponse.tensor). The
            order of specified fetches does not change the execution order.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepRequest.TargetFieldNumber">
            <summary>Field number for the "target" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepRequest.Target">
            <summary>
            Target Nodes. A list of node names. The named nodes will be run
            to but their outputs will not be fetched.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepRequest.OptionsFieldNumber">
            <summary>Field number for the "options" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepRequest.Options">
            <summary>
            Options for the run call.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepRequest.PartialRunHandleFieldNumber">
            <summary>Field number for the "partial_run_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepRequest.PartialRunHandle">
            <summary>
            Partial run handle (optional). If specified, this will be a partial run
            execution, run up to the specified fetches.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepRequest.StoreErrorsInResponseBodyFieldNumber">
            <summary>Field number for the "store_errors_in_response_body" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepRequest.StoreErrorsInResponseBody">
            <summary>
            If true then some errors, e.g., execution errors that have long
            error messages, may return an OK RunStepResponse with the actual
            error saved in the status_code/status_error_message fields of the
            response body. This is a workaround since the RPC subsystem may
            truncate long metadata messages.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepRequest.RequestIdFieldNumber">
            <summary>Field number for the "request_id" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepRequest.RequestId">
            <summary>
            Unique identifier for this request. Every RunStepRequest must
            have a unique request_id, and retried RunStepRequest must have
            the same request_id. If request_id is zero, retry detection is disabled.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepResponse.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepResponse.Tensor">
            <summary>
            NOTE: The order of the returned tensors may or may not match
            the fetch order specified in RunStepRequest.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepResponse.MetadataFieldNumber">
            <summary>Field number for the "metadata" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepResponse.Metadata">
            <summary>
            Returned metadata if requested in the options.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepResponse.StatusCodeFieldNumber">
            <summary>Field number for the "status_code" field.</summary>
        </member>
        <member name="P:Tensorflow.RunStepResponse.StatusCode">
            <summary>
            If store_errors_in_response_body is true in the request, then
            optionally the server may return an OK status for the RPC and
            fill the true status into the fields below, to allow for messages
            that are too long to fit in metadata.
            </summary>
        </member>
        <member name="F:Tensorflow.RunStepResponse.StatusErrorMessageFieldNumber">
            <summary>Field number for the "status_error_message" field.</summary>
        </member>
        <member name="F:Tensorflow.PartialRunSetupRequest.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.PartialRunSetupRequest.SessionHandle">
            <summary>
            REQUIRED: session_handle must be returned by a CreateSession call
            to the same master service.
            </summary>
        </member>
        <member name="F:Tensorflow.PartialRunSetupRequest.FeedFieldNumber">
            <summary>Field number for the "feed" field.</summary>
        </member>
        <member name="P:Tensorflow.PartialRunSetupRequest.Feed">
            <summary>
            Tensors to be fed in future steps.
            </summary>
        </member>
        <member name="F:Tensorflow.PartialRunSetupRequest.FetchFieldNumber">
            <summary>Field number for the "fetch" field.</summary>
        </member>
        <member name="P:Tensorflow.PartialRunSetupRequest.Fetch">
            <summary>
            Fetches. A list of tensor names. The caller expects a tensor to be returned
            for each fetch[i] (see RunStepResponse.tensor), for corresponding partial
            RunStepRequests. The order of specified fetches does not change the
            execution order.
            </summary>
        </member>
        <member name="F:Tensorflow.PartialRunSetupRequest.TargetFieldNumber">
            <summary>Field number for the "target" field.</summary>
        </member>
        <member name="P:Tensorflow.PartialRunSetupRequest.Target">
            <summary>
            Target Nodes. A list of node names. The named nodes will be run in future
            steps, but their outputs will not be fetched.
            </summary>
        </member>
        <member name="F:Tensorflow.PartialRunSetupRequest.RequestIdFieldNumber">
            <summary>Field number for the "request_id" field.</summary>
        </member>
        <member name="P:Tensorflow.PartialRunSetupRequest.RequestId">
            <summary>
            Unique identifier for this request. Every PartialRunSetupRequest must
            have a unique request_id, and retried PartialRunSetupRequest must have
            the same request_id. If request_id is zero, retry detection is disabled.
            </summary>
        </member>
        <member name="F:Tensorflow.PartialRunSetupResponse.PartialRunHandleFieldNumber">
            <summary>Field number for the "partial_run_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.PartialRunSetupResponse.PartialRunHandle">
            <summary>
            The unique handle corresponding to the ongoing partial run call setup by
            the invocation to PartialRunSetup. This handle may be passed to
            RunStepRequest to send and receive tensors for this partial run.
            </summary>
        </member>
        <member name="F:Tensorflow.CloseSessionRequest.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.CloseSessionRequest.SessionHandle">
            <summary>
            REQUIRED: session_handle must be returned by a CreateSession call
            to the same master service.
            </summary>
        </member>
        <member name="T:Tensorflow.ResetRequest">
             <summary>
             Reset() allows misbehaving or slow sessions to be aborted and closed, and
             causes their resources eventually to be released.  Reset() does not wait
             for the computations in old sessions to cease; it merely starts the
             process of tearing them down.  However, if a new session is started after
             a Reset(), the new session is isolated from changes that old sessions
             (started prior to the Reset()) may continue to make to resources, provided
             all those resources are in containers listed in "containers".
            
             Old sessions may continue to have side-effects on resources not in
             containers listed in "containers", and thus may affect future
             sessions' results in ways that are hard to predict.  Thus, if well-defined
             behavior is desired, is it recommended that all containers be listed in
             "containers".  Similarly, if a device_filter is specified, results may be
             hard to predict.
             </summary>
        </member>
        <member name="F:Tensorflow.ResetRequest.ContainerFieldNumber">
            <summary>Field number for the "container" field.</summary>
        </member>
        <member name="P:Tensorflow.ResetRequest.Container">
             <summary>
             A list of container names, which may be empty.
            
             If 'container' is not empty, releases resources in the given
             containers in all devices.
            
             If 'container' is empty, releases resources in the default
             container in all devices.
             </summary>
        </member>
        <member name="F:Tensorflow.ResetRequest.DeviceFiltersFieldNumber">
            <summary>Field number for the "device_filters" field.</summary>
        </member>
        <member name="P:Tensorflow.ResetRequest.DeviceFilters">
            <summary>
            When any filters are present, only devices that match the filters
            will be reset. Each filter can be partially specified,
            e.g. "/job:ps" "/job:worker/replica:3", etc.
            </summary>
        </member>
        <member name="F:Tensorflow.ListDevicesRequest.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.ListDevicesRequest.SessionHandle">
             <summary>
             Optional: session_handle must be returned by a CreateSession call to the
             same master service.
            
             When session_handle is empty, the ClusterSpec provided when the master was
             started is used to compute the available devices. If the session_handle is
             provided but not recognized, an error is returned. Finally, if a valid
             session_handle is provided, the cluster configuration for that session is
             used when computing the response.
             </summary>
        </member>
        <member name="F:Tensorflow.ListDevicesResponse.LocalDeviceFieldNumber">
            <summary>Field number for the "local_device" field.</summary>
        </member>
        <member name="F:Tensorflow.ListDevicesResponse.RemoteDeviceFieldNumber">
            <summary>Field number for the "remote_device" field.</summary>
        </member>
        <member name="F:Tensorflow.MakeCallableRequest.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.MakeCallableRequest.SessionHandle">
            <summary>
            REQUIRED: session_handle must be returned by a CreateSession call
            to the same master service.
            </summary>
        </member>
        <member name="F:Tensorflow.MakeCallableRequest.OptionsFieldNumber">
            <summary>Field number for the "options" field.</summary>
        </member>
        <member name="P:Tensorflow.MakeCallableRequest.Options">
            <summary>
            Options that define the behavior of the created callable.
            </summary>
        </member>
        <member name="F:Tensorflow.MakeCallableRequest.RequestIdFieldNumber">
            <summary>Field number for the "request_id" field.</summary>
        </member>
        <member name="P:Tensorflow.MakeCallableRequest.RequestId">
            <summary>
            Unique identifier for this request. Every MakeCallableRequest must
            have a unique request_id, and retried MakeCallableRequest must have
            the same request_id. If request_id is zero, retry detection is disabled.
            </summary>
        </member>
        <member name="F:Tensorflow.MakeCallableResponse.HandleFieldNumber">
            <summary>Field number for the "handle" field.</summary>
        </member>
        <member name="P:Tensorflow.MakeCallableResponse.Handle">
            <summary>
            A handle to the created callable.
            </summary>
        </member>
        <member name="F:Tensorflow.RunCallableRequest.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.RunCallableRequest.SessionHandle">
            <summary>
            REQUIRED: session_handle must be returned by a CreateSession call
            to the same master service.
            </summary>
        </member>
        <member name="F:Tensorflow.RunCallableRequest.HandleFieldNumber">
            <summary>Field number for the "handle" field.</summary>
        </member>
        <member name="P:Tensorflow.RunCallableRequest.Handle">
            <summary>
            REQUIRED: handle must be returned by a MakeCallable call to the same
            master service.
            </summary>
        </member>
        <member name="F:Tensorflow.RunCallableRequest.FeedFieldNumber">
            <summary>Field number for the "feed" field.</summary>
        </member>
        <member name="P:Tensorflow.RunCallableRequest.Feed">
            <summary>
            Values of the tensors passed as arguments to the callable, in the order
            defined in the CallableOptions.feed field passed to MakeCallable.
            </summary>
        </member>
        <member name="F:Tensorflow.RunCallableRequest.RequestIdFieldNumber">
            <summary>Field number for the "request_id" field.</summary>
        </member>
        <member name="P:Tensorflow.RunCallableRequest.RequestId">
            <summary>
            Unique identifier for this request. Every RunCallableRequest must
            have a unique request_id, and retried RunCallableRequest must have
            the same request_id. If request_id is zero, retry detection is disabled.
            </summary>
        </member>
        <member name="F:Tensorflow.RunCallableResponse.FetchFieldNumber">
            <summary>Field number for the "fetch" field.</summary>
        </member>
        <member name="P:Tensorflow.RunCallableResponse.Fetch">
            <summary>
            Values of the tensors returned by the callable, in the order defined in the
            CallableOptions.fetch field passed to MakeCallable.
            </summary>
        </member>
        <member name="F:Tensorflow.RunCallableResponse.MetadataFieldNumber">
            <summary>Field number for the "metadata" field.</summary>
        </member>
        <member name="P:Tensorflow.RunCallableResponse.Metadata">
            <summary>
            Returned metadata if requested in the options.
            </summary>
        </member>
        <member name="F:Tensorflow.ReleaseCallableRequest.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="P:Tensorflow.ReleaseCallableRequest.SessionHandle">
            <summary>
            REQUIRED: session_handle must be returned by a CreateSession call
            to the same master service.
            </summary>
        </member>
        <member name="F:Tensorflow.ReleaseCallableRequest.HandleFieldNumber">
            <summary>Field number for the "handle" field.</summary>
        </member>
        <member name="P:Tensorflow.ReleaseCallableRequest.Handle">
            <summary>
            REQUIRED: handle must be returned by a MakeCallable call to the same
            master service.
            </summary>
        </member>
        <member name="T:Tensorflow.Grpc.MasterServiceReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/master_service.proto</summary>
        </member>
        <member name="P:Tensorflow.Grpc.MasterServiceReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/master_service.proto</summary>
        </member>
        <member name="T:Tensorflow.MetaGraphReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/meta_graph.proto</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/meta_graph.proto</summary>
        </member>
        <member name="T:Tensorflow.MetaGraphDef">
             <summary>
             NOTE: This protocol buffer is evolving, and will go through revisions in the
             coming months.
            
             Protocol buffer containing the following which are necessary to restart
             training, run inference. It can be used to serialize/de-serialize memory
             objects necessary for running computation in a graph when crossing the
             process boundary. It can be used for long term storage of graphs,
             cross-language execution of graphs, etc.
               MetaInfoDef
               GraphDef
               SaverDef
               CollectionDef
               TensorInfo
               SignatureDef
             </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.MetaInfoDefFieldNumber">
            <summary>Field number for the "meta_info_def" field.</summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.GraphDefFieldNumber">
            <summary>Field number for the "graph_def" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.GraphDef">
            <summary>
            GraphDef.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.SaverDefFieldNumber">
            <summary>Field number for the "saver_def" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.SaverDef">
            <summary>
            SaverDef.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.CollectionDefFieldNumber">
            <summary>Field number for the "collection_def" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.CollectionDef">
            <summary>
            collection_def: Map from collection name to collections.
            See CollectionDef section for details.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.SignatureDefFieldNumber">
            <summary>Field number for the "signature_def" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.SignatureDef">
            <summary>
            signature_def: Map from user supplied key for a signature to a single
            SignatureDef.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.AssetFileDefFieldNumber">
            <summary>Field number for the "asset_file_def" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.AssetFileDef">
            <summary>
            Asset file def to be used with the defined graph.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.ObjectGraphDefFieldNumber">
            <summary>Field number for the "object_graph_def" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.ObjectGraphDef">
            <summary>
            Extra information about the structure of functions and stateful objects.
            </summary>
        </member>
        <member name="T:Tensorflow.MetaGraphDef.Types">
            <summary>Container for nested types declared in the MetaGraphDef message type.</summary>
        </member>
        <member name="T:Tensorflow.MetaGraphDef.Types.MetaInfoDef">
            <summary>
            Meta information regarding the graph to be exported.  To be used by users
            of this protocol buffer to encode information regarding their meta graph.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.Types.MetaInfoDef.MetaGraphVersionFieldNumber">
            <summary>Field number for the "meta_graph_version" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.Types.MetaInfoDef.MetaGraphVersion">
            <summary>
            User specified Version string. Can be the name of the model and revision,
            steps this model has been trained to, etc.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.Types.MetaInfoDef.StrippedOpListFieldNumber">
            <summary>Field number for the "stripped_op_list" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.Types.MetaInfoDef.StrippedOpList">
            <summary>
            A copy of the OpDefs used by the producer of this graph_def.
            Descriptions and Ops not used in graph_def are stripped out.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.Types.MetaInfoDef.AnyInfoFieldNumber">
            <summary>Field number for the "any_info" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.Types.MetaInfoDef.AnyInfo">
            <summary>
            A serialized protobuf. Can be the time this meta graph is created, or
            modified, or name of the model.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.Types.MetaInfoDef.TagsFieldNumber">
            <summary>Field number for the "tags" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.Types.MetaInfoDef.Tags">
             <summary>
             User supplied tag(s) on the meta_graph and included graph_def.
            
             MetaGraphDefs should be tagged with their capabilities or use-cases.
             Examples: "train", "serve", "gpu", "tpu", etc.
             These tags enable loaders to access the MetaGraph(s) appropriate for a
             specific use-case or runtime environment.
             </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.Types.MetaInfoDef.TensorflowVersionFieldNumber">
            <summary>Field number for the "tensorflow_version" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.Types.MetaInfoDef.TensorflowVersion">
            <summary>
            The __version__ string of the tensorflow build used to write this graph.
            This will be populated by the framework, which will overwrite any user
            supplied value.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.Types.MetaInfoDef.TensorflowGitVersionFieldNumber">
            <summary>Field number for the "tensorflow_git_version" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.Types.MetaInfoDef.TensorflowGitVersion">
            <summary>
            The __git_version__ string of the tensorflow build used to write this
            graph. This will be populated by the framework, which will overwrite any
            user supplied value.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.Types.MetaInfoDef.StrippedDefaultAttrsFieldNumber">
            <summary>Field number for the "stripped_default_attrs" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.Types.MetaInfoDef.StrippedDefaultAttrs">
            <summary>
            A flag to denote whether default-valued attrs have been stripped from
            the nodes in this graph_def.
            </summary>
        </member>
        <member name="F:Tensorflow.MetaGraphDef.Types.MetaInfoDef.FunctionAliasesFieldNumber">
            <summary>Field number for the "function_aliases" field.</summary>
        </member>
        <member name="P:Tensorflow.MetaGraphDef.Types.MetaInfoDef.FunctionAliases">
            <summary>
            FunctionDef name to aliases mapping.
            </summary>
        </member>
        <member name="T:Tensorflow.CollectionDef">
             <summary>
             CollectionDef should cover most collections.
             To add a user-defined collection, do one of the following:
             1. For simple data types, such as string, int, float:
                  tf.add_to_collection("your_collection_name", your_simple_value)
                strings will be stored as bytes_list.
            
             2. For Protobuf types, there are three ways to add them:
                1) tf.add_to_collection("your_collection_name",
                     your_proto.SerializeToString())
            
                   collection_def {
                     key: "user_defined_bytes_collection"
                     value {
                       bytes_list {
                         value: "queue_name: \"test_queue\"\n"
                       }
                     }
                   }
            
              or
            
                2) tf.add_to_collection("your_collection_name", str(your_proto))
            
                   collection_def {
                     key: "user_defined_string_collection"
                     value {
                      bytes_list {
                         value: "\n\ntest_queue"
                       }
                     }
                   }
            
              or
            
                3) any_buf = any_pb2.Any()
                   tf.add_to_collection("your_collection_name",
                     any_buf.Pack(your_proto))
            
                   collection_def {
                     key: "user_defined_any_collection"
                     value {
                       any_list {
                         value {
                           type_url: "type.googleapis.com/tensorflow.QueueRunnerDef"
                           value: "\n\ntest_queue"
                         }
                       }
                     }
                   }
            
             3. For Python objects, implement to_proto() and from_proto(), and register
                them in the following manner:
                ops.register_proto_function("your_collection_name",
                                            proto_type,
                                            to_proto=YourPythonObject.to_proto,
                                            from_proto=YourPythonObject.from_proto)
                These functions will be invoked to serialize and de-serialize the
                collection. For example,
                ops.register_proto_function(ops.GraphKeys.GLOBAL_VARIABLES,
                                            proto_type=variable_pb2.VariableDef,
                                            to_proto=Variable.to_proto,
                                            from_proto=Variable.from_proto)
             </summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.NodeListFieldNumber">
            <summary>Field number for the "node_list" field.</summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.BytesListFieldNumber">
            <summary>Field number for the "bytes_list" field.</summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.Int64ListFieldNumber">
            <summary>Field number for the "int64_list" field.</summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.FloatListFieldNumber">
            <summary>Field number for the "float_list" field.</summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.AnyListFieldNumber">
            <summary>Field number for the "any_list" field.</summary>
        </member>
        <member name="T:Tensorflow.CollectionDef.KindOneofCase">
            <summary>Enum of possible cases for the "kind" oneof.</summary>
        </member>
        <member name="T:Tensorflow.CollectionDef.Types">
            <summary>Container for nested types declared in the CollectionDef message type.</summary>
        </member>
        <member name="T:Tensorflow.CollectionDef.Types.NodeList">
            <summary>
            NodeList is used for collecting nodes in graph. For example
            collection_def {
              key: "summaries"
              value {
                node_list {
                  value: "input_producer/ScalarSummary:0"
                  value: "shuffle_batch/ScalarSummary:0"
                  value: "ImageSummary:0"
                }
              }
            </summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.Types.NodeList.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:Tensorflow.CollectionDef.Types.BytesList">
            <summary>
            BytesList is used for collecting strings and serialized protobufs. For
            example:
            collection_def {
              key: "trainable_variables"
              value {
                bytes_list {
                  value: "\n\017conv1/weights:0\022\024conv1/weights/Assign
                         \032\024conv1/weights/read:0"
                  value: "\n\016conv1/biases:0\022\023conv1/biases/Assign\032
                         \023conv1/biases/read:0"
                }
              }
            }
            </summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.Types.BytesList.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:Tensorflow.CollectionDef.Types.Int64List">
            <summary>
            Int64List is used for collecting int, int64 and long values.
            </summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.Types.Int64List.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:Tensorflow.CollectionDef.Types.FloatList">
            <summary>
            FloatList is used for collecting float values.
            </summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.Types.FloatList.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:Tensorflow.CollectionDef.Types.AnyList">
            <summary>
            AnyList is used for collecting Any protos.
            </summary>
        </member>
        <member name="F:Tensorflow.CollectionDef.Types.AnyList.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:Tensorflow.TensorInfo">
            <summary>
            Information about a Tensor necessary for feeding or retrieval.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.Name">
            <summary>
            For dense `Tensor`s, the name of the tensor in the graph.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.CooSparseFieldNumber">
            <summary>Field number for the "coo_sparse" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.CooSparse">
            <summary>
            There are many possible encodings of sparse matrices
            (https://en.wikipedia.org/wiki/Sparse_matrix).  Currently, TensorFlow
            uses only the COO encoding.  This is supported and documented in the
            SparseTensor Python class.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.CompositeTensorFieldNumber">
            <summary>Field number for the "composite_tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.CompositeTensor">
            <summary>
            Generic encoding for CompositeTensors.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.TensorShapeFieldNumber">
            <summary>Field number for the "tensor_shape" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.TensorShape">
            <summary>
            The static shape should be recorded here, to the extent that it can
            be known in advance.  In the case of a SparseTensor, this field describes
            the logical shape of the represented tensor (aka dense_shape).
            </summary>
        </member>
        <member name="T:Tensorflow.TensorInfo.EncodingOneofCase">
            <summary>Enum of possible cases for the "encoding" oneof.</summary>
        </member>
        <member name="T:Tensorflow.TensorInfo.Types">
            <summary>Container for nested types declared in the TensorInfo message type.</summary>
        </member>
        <member name="T:Tensorflow.TensorInfo.Types.CooSparse">
            <summary>
            For sparse tensors, The COO encoding stores a triple of values, indices,
            and shape.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.Types.CooSparse.ValuesTensorNameFieldNumber">
            <summary>Field number for the "values_tensor_name" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.Types.CooSparse.ValuesTensorName">
            <summary>
            The shape of the values Tensor is [?].  Its dtype must be the dtype of
            the SparseTensor as a whole, given in the enclosing TensorInfo.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.Types.CooSparse.IndicesTensorNameFieldNumber">
            <summary>Field number for the "indices_tensor_name" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.Types.CooSparse.IndicesTensorName">
            <summary>
            The indices Tensor must have dtype int64 and shape [?, ?].
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.Types.CooSparse.DenseShapeTensorNameFieldNumber">
            <summary>Field number for the "dense_shape_tensor_name" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.Types.CooSparse.DenseShapeTensorName">
            <summary>
            The dynamic logical shape represented by the SparseTensor is recorded in
            the Tensor referenced here.  It must have dtype int64 and shape [?].
            </summary>
        </member>
        <member name="T:Tensorflow.TensorInfo.Types.CompositeTensor">
            <summary>
            Generic encoding for composite tensors.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.Types.CompositeTensor.TypeSpecFieldNumber">
            <summary>Field number for the "type_spec" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.Types.CompositeTensor.TypeSpec">
            <summary>
            The serialized TypeSpec for the composite tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorInfo.Types.CompositeTensor.ComponentsFieldNumber">
            <summary>Field number for the "components" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorInfo.Types.CompositeTensor.Components">
            <summary>
            A TensorInfo for each flattened component tensor.
            </summary>
        </member>
        <member name="T:Tensorflow.SignatureDef">
             <summary>
             SignatureDef defines the signature of a computation supported by a TensorFlow
             graph.
            
             For example, a model with two loss computations, sharing a single input,
             might have the following signature_def map.
            
             Note that across the two SignatureDefs "loss_A" and "loss_B", the input key,
             output key, and method_name are identical, and will be used by system(s) that
             implement or rely upon this particular loss method. The output tensor names
             differ, demonstrating how different outputs can exist for the same method.
            
             signature_def {
               key: "loss_A"
               value {
                 inputs {
                   key: "input"
                   value {
                     name: "input:0"
                     dtype: DT_STRING
                     tensor_shape: ...
                   }
                 }
                 outputs {
                   key: "loss_output"
                   value {
                     name: "loss_output_A:0"
                     dtype: DT_FLOAT
                     tensor_shape: ...
                   }
                 }
               }
               ...
               method_name: "some/package/compute_loss"
             }
             signature_def {
               key: "loss_B"
               value {
                 inputs {
                   key: "input"
                   value {
                     name: "input:0"
                     dtype: DT_STRING
                     tensor_shape: ...
                   }
                 }
                 outputs {
                   key: "loss_output"
                   value {
                     name: "loss_output_B:0"
                     dtype: DT_FLOAT
                     tensor_shape: ...
                   }
                 }
               }
               ...
               method_name: "some/package/compute_loss"
             }
             </summary>
        </member>
        <member name="F:Tensorflow.SignatureDef.InputsFieldNumber">
            <summary>Field number for the "inputs" field.</summary>
        </member>
        <member name="P:Tensorflow.SignatureDef.Inputs">
            <summary>
            Named input parameters.
            </summary>
        </member>
        <member name="F:Tensorflow.SignatureDef.OutputsFieldNumber">
            <summary>Field number for the "outputs" field.</summary>
        </member>
        <member name="P:Tensorflow.SignatureDef.Outputs">
            <summary>
            Named output parameters.
            </summary>
        </member>
        <member name="F:Tensorflow.SignatureDef.MethodNameFieldNumber">
            <summary>Field number for the "method_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SignatureDef.MethodName">
             <summary>
             Extensible method_name information enabling third-party users to mark a
             SignatureDef as supporting a particular method. This enables producers and
             consumers of SignatureDefs, e.g. a model definition library and a serving
             library to have a clear hand-off regarding the semantics of a computation.
            
             Note that multiple SignatureDefs in a single MetaGraphDef may have the same
             method_name. This is commonly used to support multi-headed computation,
             where a single graph computation may return multiple results.
             </summary>
        </member>
        <member name="T:Tensorflow.AssetFileDef">
            <summary>
            An asset file def for a single file or a set of sharded files with the same
            name.
            </summary>
        </member>
        <member name="F:Tensorflow.AssetFileDef.TensorInfoFieldNumber">
            <summary>Field number for the "tensor_info" field.</summary>
        </member>
        <member name="P:Tensorflow.AssetFileDef.TensorInfo">
            <summary>
            The tensor to bind the asset filename to.
            </summary>
        </member>
        <member name="F:Tensorflow.AssetFileDef.FilenameFieldNumber">
            <summary>Field number for the "filename" field.</summary>
        </member>
        <member name="P:Tensorflow.AssetFileDef.Filename">
            <summary>
            The filename within an assets directory. Note: does not include the path
            prefix, i.e. directories. For an asset at /tmp/path/vocab.txt, the filename
            would be "vocab.txt".
            </summary>
        </member>
        <member name="T:Tensorflow.NamedTensorReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/named_tensor.proto</summary>
        </member>
        <member name="P:Tensorflow.NamedTensorReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/named_tensor.proto</summary>
        </member>
        <member name="T:Tensorflow.NamedTensorProto">
            <summary>
            A pair of tensor name and tensor values.
            </summary>
        </member>
        <member name="F:Tensorflow.NamedTensorProto.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.NamedTensorProto.Name">
            <summary>
            Name of the tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.NamedTensorProto.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="P:Tensorflow.NamedTensorProto.Tensor">
             <summary>
             The client can populate a TensorProto using a tensorflow::Tensor`, or
             directly using the protobuf field accessors.
            
             The client specifies whether the returned tensor values should be
             filled tensor fields (float_val, int_val, etc.) or encoded in a
             compact form in tensor.tensor_content.
             </summary>
        </member>
        <member name="T:Tensorflow.NodeDefReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/node_def.proto</summary>
        </member>
        <member name="P:Tensorflow.NodeDefReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/node_def.proto</summary>
        </member>
        <member name="F:Tensorflow.NodeDef.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeDef.Name">
            <summary>
            The name given to this operator. Used for naming inputs,
            logging, visualization, etc.  Unique within a single GraphDef.
            Must match the regexp "[A-Za-z0-9.][A-Za-z0-9_>./]*".
            </summary>
        </member>
        <member name="F:Tensorflow.NodeDef.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeDef.Op">
            <summary>
            The operation name.  There may be custom parameters in attrs.
            Op names starting with an underscore are reserved for internal use.
            </summary>
        </member>
        <member name="F:Tensorflow.NodeDef.InputFieldNumber">
            <summary>Field number for the "input" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeDef.Input">
            <summary>
            Each input is "node:src_output" with "node" being a string name and
            "src_output" indicating which output tensor to use from "node". If
            "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
            may optionally be followed by control inputs that have the format
            "^node".
            </summary>
        </member>
        <member name="F:Tensorflow.NodeDef.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeDef.Device">
             <summary>
             A (possibly partial) specification for the device on which this
             node should be placed.
             The expected syntax for this string is as follows:
            
             DEVICE_SPEC ::= PARTIAL_SPEC
            
             PARTIAL_SPEC ::= ("/" CONSTRAINT) *
             CONSTRAINT ::= ("job:" JOB_NAME)
                          | ("replica:" [1-9][0-9]*)
                          | ("task:" [1-9][0-9]*)
                          | ("device:" [A-Za-z]* ":" ([1-9][0-9]* | "*") )
            
             Valid values for this string include:
             * "/job:worker/replica:0/task:1/device:GPU:3"  (full specification)
             * "/job:worker/device:GPU:3"                   (partial specification)
             * ""                                    (no specification)
            
             If the constraints do not resolve to a single device (or if this
             field is empty or not present), the runtime will attempt to
             choose a device automatically.
             </summary>
        </member>
        <member name="F:Tensorflow.NodeDef.AttrFieldNumber">
            <summary>Field number for the "attr" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeDef.Attr">
            <summary>
            Operation-specific graph-construction-time configuration.
            Note that this should include all attrs defined in the
            corresponding OpDef, including those with a value matching
            the default -- this allows the default to change and makes
            NodeDefs easier to interpret on their own.  However, if
            an attr with a default is not specified in this list, the
            default will be used.
            The "names" (keys) must match the regexp "[a-z][a-z0-9_]+" (and
            one of the names from the corresponding OpDef's attr field).
            The values must have a type matching the corresponding OpDef
            attr's type field.
            TODO(josh11b): Add some examples here showing best practices.
            </summary>
        </member>
        <member name="F:Tensorflow.NodeDef.ExperimentalDebugInfoFieldNumber">
            <summary>Field number for the "experimental_debug_info" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeDef.ExperimentalDebugInfo">
            <summary>
            This stores debug information associated with the node.
            </summary>
        </member>
        <member name="T:Tensorflow.NodeDef.Types">
            <summary>Container for nested types declared in the NodeDef message type.</summary>
        </member>
        <member name="F:Tensorflow.NodeDef.Types.ExperimentalDebugInfo.OriginalNodeNamesFieldNumber">
            <summary>Field number for the "original_node_names" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeDef.Types.ExperimentalDebugInfo.OriginalNodeNames">
             <summary>
             Opaque string inserted into error messages created by the runtime.
            
             This is intended to store the list of names of the nodes from the
             original graph that this node was derived. For example if this node, say
             C, was result of a fusion of 2 nodes A and B, then 'original_node' would
             be {A, B}. This information can be used to map errors originating at the
             current node to some top level source code.
             </summary>
        </member>
        <member name="F:Tensorflow.NodeDef.Types.ExperimentalDebugInfo.OriginalFuncNamesFieldNumber">
            <summary>Field number for the "original_func_names" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeDef.Types.ExperimentalDebugInfo.OriginalFuncNames">
            <summary>
            This is intended to store the list of names of the functions from the
            original graph that this node was derived. For example if this node, say
            C, was result of a fusion of node A in function FA and node B in function
            FB, then `original_funcs` would be {FA, FB}. If the node is in the top
            level graph, the `original_func` is empty. This information, with the
            `original_node_names` can be used to map errors originating at the
            current ndoe to some top level source code.
            </summary>
        </member>
        <member name="T:Tensorflow.OpDefReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/op_def.proto</summary>
        </member>
        <member name="P:Tensorflow.OpDefReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/op_def.proto</summary>
        </member>
        <member name="T:Tensorflow.OpDef">
            <summary>
            Defines an operation. A NodeDef in a GraphDef specifies an Op by
            using the "op" field which should match the name of a OpDef.
            LINT.IfChange
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Name">
            <summary>
            Op names starting with an underscore are reserved for internal use.
            Names should be CamelCase and match the regexp "[A-Z][a-zA-Z0-9>_]*".
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.InputArgFieldNumber">
            <summary>Field number for the "input_arg" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.InputArg">
            <summary>
            Description of the input(s).
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.OutputArgFieldNumber">
            <summary>Field number for the "output_arg" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.OutputArg">
            <summary>
            Description of the output(s).
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.ControlOutputFieldNumber">
            <summary>Field number for the "control_output" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.ControlOutput">
            <summary>
            Named control outputs for this operation. Useful only for composite
            operations (i.e. functions) which want to name different control outputs.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.AttrFieldNumber">
            <summary>Field number for the "attr" field.</summary>
        </member>
        <member name="F:Tensorflow.OpDef.DeprecationFieldNumber">
            <summary>Field number for the "deprecation" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Deprecation">
            <summary>
            Optional deprecation based on GraphDef versions.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.SummaryFieldNumber">
            <summary>Field number for the "summary" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Summary">
            <summary>
            One-line human-readable description of what the Op does.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Description">
            <summary>
            Additional, longer human-readable description of what the Op does.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.IsCommutativeFieldNumber">
            <summary>Field number for the "is_commutative" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.IsCommutative">
            <summary>
            True if the operation is commutative ("op(a,b) == op(b,a)" for all inputs)
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.IsAggregateFieldNumber">
            <summary>Field number for the "is_aggregate" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.IsAggregate">
            <summary>
            If is_aggregate is true, then this operation accepts N >= 2
            inputs and produces 1 output all of the same type.  Should be
            associative and commutative, and produce output with the same
            shape as the input.  The optimizer may replace an aggregate op
            taking input from multiple devices with a tree of aggregate ops
            that aggregate locally within each device (and possibly within
            groups of nearby devices) before communicating.
            TODO(josh11b): Implement that optimization.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.IsStatefulFieldNumber">
            <summary>Field number for the "is_stateful" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.IsStateful">
             <summary>
             Ops are marked as stateful if their behavior depends on some state beyond
             their input tensors (e.g. variable reading op) or if they have
             a side-effect (e.g. printing or asserting ops). Equivalently, stateless ops
             must always produce the same output for the same input and have
             no side-effects.
            
             By default Ops may be moved between devices.  Stateful ops should
             either not be moved, or should only be moved if that state can also
             be moved (e.g. via some sort of save / restore).
             Stateful ops are guaranteed to never be optimized away by Common
             Subexpression Elimination (CSE).
             </summary>
        </member>
        <member name="F:Tensorflow.OpDef.AllowsUninitializedInputFieldNumber">
            <summary>Field number for the "allows_uninitialized_input" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.AllowsUninitializedInput">
            <summary>
            By default, all inputs to an Op must be initialized Tensors.  Ops
            that may initialize tensors for the first time should set this
            field to true, to allow the Op to take an uninitialized Tensor as
            input.
            </summary>
        </member>
        <member name="T:Tensorflow.OpDef.Types">
            <summary>Container for nested types declared in the OpDef message type.</summary>
        </member>
        <member name="T:Tensorflow.OpDef.Types.ArgDef">
            <summary>
            For describing inputs and outputs.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.ArgDef.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.ArgDef.Name">
            <summary>
            Name for the input/output.  Should match the regexp "[a-z][a-z0-9_]*".
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.ArgDef.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.ArgDef.Description">
            <summary>
            Human readable description.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.ArgDef.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.ArgDef.Type">
            <summary>
            Describes the type of one or more tensors that are accepted/produced
            by this input/output arg.  The only legal combinations are:
            * For a single tensor: either the "type" field is set or the
              "type_attr" field is set to the name of an attr with type "type".
            * For a sequence of tensors with the same type: the "number_attr"
              field will be set to the name of an attr with type "int", and
              either the "type" or "type_attr" field will be set as for
              single tensors.
            * For a sequence of tensors, the "type_list_attr" field will be set
              to the name of an attr with type "list(type)".
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.ArgDef.TypeAttrFieldNumber">
            <summary>Field number for the "type_attr" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.ArgDef.TypeAttr">
            <summary>
            if specified, attr must have type "type"
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.ArgDef.NumberAttrFieldNumber">
            <summary>Field number for the "number_attr" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.ArgDef.NumberAttr">
            <summary>
            if specified, attr must have type "int"
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.ArgDef.TypeListAttrFieldNumber">
            <summary>Field number for the "type_list_attr" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.ArgDef.TypeListAttr">
            <summary>
            If specified, attr must have type "list(type)", and none of
            type, type_attr, and number_attr may be specified.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.ArgDef.IsRefFieldNumber">
            <summary>Field number for the "is_ref" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.ArgDef.IsRef">
            <summary>
            For inputs: if true, the inputs are required to be refs.
              By default, inputs can be either refs or non-refs.
            For outputs: if true, outputs are refs, otherwise they are not.
            </summary>
        </member>
        <member name="T:Tensorflow.OpDef.Types.AttrDef">
            <summary>
            Description of the graph-construction-time configuration of this
            Op.  That is to say, this describes the attr fields that will
            be specified in the NodeDef.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.AttrDef.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.AttrDef.Name">
            <summary>
            A descriptive name for the argument.  May be used, e.g. by the
            Python client, as a keyword argument name, and so should match
            the regexp "[a-z][a-z0-9_]+".
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.AttrDef.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.AttrDef.Type">
            <summary>
            One of the type names from attr_value.proto ("string", "list(string)",
            "int", etc.).
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.AttrDef.DefaultValueFieldNumber">
            <summary>Field number for the "default_value" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.AttrDef.DefaultValue">
            <summary>
            A reasonable default for this attribute if the user does not supply
            a value.  If not specified, the user must supply a value.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.AttrDef.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.AttrDef.Description">
            <summary>
            Human-readable description.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.AttrDef.HasMinimumFieldNumber">
            <summary>Field number for the "has_minimum" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.AttrDef.HasMinimum">
            <summary>
            For type == "int", this is a minimum value.  For "list(___)"
            types, this is the minimum length.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.AttrDef.MinimumFieldNumber">
            <summary>Field number for the "minimum" field.</summary>
        </member>
        <member name="F:Tensorflow.OpDef.Types.AttrDef.AllowedValuesFieldNumber">
            <summary>Field number for the "allowed_values" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDef.Types.AttrDef.AllowedValues">
            <summary>
            The set of allowed values.  Has type that is the "list" version
            of the "type" field above (uses the "list" field of AttrValue).
            If type == "type" or "list(type)" above, then the "type" field
            of "allowed_values.list" has the set of allowed DataTypes.
            If type == "string" or "list(string)", then the "s" field of
            "allowed_values.list" has the set of allowed strings.
            </summary>
        </member>
        <member name="T:Tensorflow.OpDeprecation">
            <summary>
            Information about version-dependent deprecation of an op
            </summary>
        </member>
        <member name="F:Tensorflow.OpDeprecation.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDeprecation.Version">
            <summary>
            First GraphDef version at which the op is disallowed.
            </summary>
        </member>
        <member name="F:Tensorflow.OpDeprecation.ExplanationFieldNumber">
            <summary>Field number for the "explanation" field.</summary>
        </member>
        <member name="P:Tensorflow.OpDeprecation.Explanation">
            <summary>
            Explanation of why it was deprecated and what to use instead.
            </summary>
        </member>
        <member name="T:Tensorflow.OpList">
            <summary>
            A collection of OpDefs
            </summary>
        </member>
        <member name="F:Tensorflow.OpList.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="T:Tensorflow.QueueRunnerReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/queue_runner.proto</summary>
        </member>
        <member name="P:Tensorflow.QueueRunnerReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/queue_runner.proto</summary>
        </member>
        <member name="T:Tensorflow.QueueRunnerDef">
            <summary>
            Protocol buffer representing a QueueRunner.
            </summary>
        </member>
        <member name="F:Tensorflow.QueueRunnerDef.QueueNameFieldNumber">
            <summary>Field number for the "queue_name" field.</summary>
        </member>
        <member name="P:Tensorflow.QueueRunnerDef.QueueName">
            <summary>
            Queue name.
            </summary>
        </member>
        <member name="F:Tensorflow.QueueRunnerDef.EnqueueOpNameFieldNumber">
            <summary>Field number for the "enqueue_op_name" field.</summary>
        </member>
        <member name="P:Tensorflow.QueueRunnerDef.EnqueueOpName">
            <summary>
            A list of enqueue operations.
            </summary>
        </member>
        <member name="F:Tensorflow.QueueRunnerDef.CloseOpNameFieldNumber">
            <summary>Field number for the "close_op_name" field.</summary>
        </member>
        <member name="P:Tensorflow.QueueRunnerDef.CloseOpName">
            <summary>
            The operation to run to close the queue.
            </summary>
        </member>
        <member name="F:Tensorflow.QueueRunnerDef.CancelOpNameFieldNumber">
            <summary>Field number for the "cancel_op_name" field.</summary>
        </member>
        <member name="P:Tensorflow.QueueRunnerDef.CancelOpName">
            <summary>
            The operation to run to cancel the queue.
            </summary>
        </member>
        <member name="F:Tensorflow.QueueRunnerDef.QueueClosedExceptionTypesFieldNumber">
            <summary>Field number for the "queue_closed_exception_types" field.</summary>
        </member>
        <member name="P:Tensorflow.QueueRunnerDef.QueueClosedExceptionTypes">
            <summary>
            A list of exception types considered to signal a safely closed queue
            if raised during enqueue operations.
            </summary>
        </member>
        <member name="T:Tensorflow.ReaderBaseReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/reader_base.proto</summary>
        </member>
        <member name="P:Tensorflow.ReaderBaseReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/reader_base.proto</summary>
        </member>
        <member name="T:Tensorflow.ReaderBaseState">
            <summary>
            For serializing and restoring the state of ReaderBase, see
            reader_base.h for details.
            </summary>
        </member>
        <member name="F:Tensorflow.ReaderBaseState.WorkStartedFieldNumber">
            <summary>Field number for the "work_started" field.</summary>
        </member>
        <member name="F:Tensorflow.ReaderBaseState.WorkFinishedFieldNumber">
            <summary>Field number for the "work_finished" field.</summary>
        </member>
        <member name="F:Tensorflow.ReaderBaseState.NumRecordsProducedFieldNumber">
            <summary>Field number for the "num_records_produced" field.</summary>
        </member>
        <member name="F:Tensorflow.ReaderBaseState.CurrentWorkFieldNumber">
            <summary>Field number for the "current_work" field.</summary>
        </member>
        <member name="T:Tensorflow.RemoteFusedGraphExecuteInfoReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/remote_fused_graph_execute_info.proto</summary>
        </member>
        <member name="P:Tensorflow.RemoteFusedGraphExecuteInfoReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/remote_fused_graph_execute_info.proto</summary>
        </member>
        <member name="T:Tensorflow.RemoteFusedGraphExecuteInfo">
            <summary>
            Protocol buffer representing a handle to a tensorflow resource. Handles are
            not valid across executions, but can be serialized back and forth from within
            a single run.
            </summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.RemoteGraphFieldNumber">
            <summary>Field number for the "remote_graph" field.</summary>
        </member>
        <member name="P:Tensorflow.RemoteFusedGraphExecuteInfo.RemoteGraph">
            <summary>
            Definition of remote graph
            </summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.GraphInputNodeNameFieldNumber">
            <summary>Field number for the "graph_input_node_name" field.</summary>
        </member>
        <member name="P:Tensorflow.RemoteFusedGraphExecuteInfo.GraphInputNodeName">
            <summary>
            Remote fused graph input node name
            </summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.GraphOutputNodeNameFieldNumber">
            <summary>Field number for the "graph_output_node_name" field.</summary>
        </member>
        <member name="P:Tensorflow.RemoteFusedGraphExecuteInfo.GraphOutputNodeName">
            <summary>
            Remote fused graph output node name
            </summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.ExecutorNameFieldNumber">
            <summary>Field number for the "executor_name" field.</summary>
        </member>
        <member name="P:Tensorflow.RemoteFusedGraphExecuteInfo.ExecutorName">
            <summary>
            Executor's name
            </summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.SerializedExecutorParametersFieldNumber">
            <summary>Field number for the "serialized_executor_parameters" field.</summary>
        </member>
        <member name="P:Tensorflow.RemoteFusedGraphExecuteInfo.SerializedExecutorParameters">
            <summary>
            Optional: Parameters given to the executor
            </summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.DefaultGraphInputTensorShapeFieldNumber">
            <summary>Field number for the "default_graph_input_tensor_shape" field.</summary>
        </member>
        <member name="P:Tensorflow.RemoteFusedGraphExecuteInfo.DefaultGraphInputTensorShape">
            <summary>
            Optional: Default graph input tensor shape used to allocate memory
            before executing op
            </summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.DefaultGraphOutputTensorShapeFieldNumber">
            <summary>Field number for the "default_graph_output_tensor_shape" field.</summary>
        </member>
        <member name="P:Tensorflow.RemoteFusedGraphExecuteInfo.DefaultGraphOutputTensorShape">
            <summary>
            Optional: Default graph input tensor shape used to allocate memory
            before executing op
            TODO(satok): Remote output tensor shape once shape information is stored
            in NodeDef
            </summary>
        </member>
        <member name="T:Tensorflow.RemoteFusedGraphExecuteInfo.Types">
            <summary>Container for nested types declared in the RemoteFusedGraphExecuteInfo message type.</summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.Types.TensorShapeTypeProto.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.RemoteFusedGraphExecuteInfo.Types.TensorShapeTypeProto.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="T:Tensorflow.ReplayLogReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/replay_log.proto</summary>
        </member>
        <member name="P:Tensorflow.ReplayLogReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/replay_log.proto</summary>
        </member>
        <member name="T:Tensorflow.NewReplaySession">
            <summary>
            Records the creation of a new replay session.  We record the device listing
            here to capture the state of the cluster.
            </summary>
        </member>
        <member name="F:Tensorflow.NewReplaySession.DevicesFieldNumber">
            <summary>Field number for the "devices" field.</summary>
        </member>
        <member name="F:Tensorflow.NewReplaySession.SessionHandleFieldNumber">
            <summary>Field number for the "session_handle" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.StartTimeUsFieldNumber">
            <summary>Field number for the "start_time_us" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.EndTimeUsFieldNumber">
            <summary>Field number for the "end_time_us" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.CreateSessionFieldNumber">
            <summary>Field number for the "create_session" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.ExtendSessionFieldNumber">
            <summary>Field number for the "extend_session" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.PartialRunSetupFieldNumber">
            <summary>Field number for the "partial_run_setup" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.RunStepFieldNumber">
            <summary>Field number for the "run_step" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.CloseSessionFieldNumber">
            <summary>Field number for the "close_session" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.ListDevicesFieldNumber">
            <summary>Field number for the "list_devices" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.ResetRequestFieldNumber">
            <summary>Field number for the "reset_request" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.MakeCallableFieldNumber">
            <summary>Field number for the "make_callable" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.RunCallableFieldNumber">
            <summary>Field number for the "run_callable" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.ReleaseCallableFieldNumber">
            <summary>Field number for the "release_callable" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.NewReplaySessionFieldNumber">
            <summary>Field number for the "new_replay_session" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.CreateSessionResponseFieldNumber">
            <summary>Field number for the "create_session_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.ExtendSessionResponseFieldNumber">
            <summary>Field number for the "extend_session_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.PartialRunSetupResponseFieldNumber">
            <summary>Field number for the "partial_run_setup_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.RunStepResponseFieldNumber">
            <summary>Field number for the "run_step_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.CloseSessionResponseFieldNumber">
            <summary>Field number for the "close_session_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.ListDevicesResponseFieldNumber">
            <summary>Field number for the "list_devices_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.ResetRequestResponseFieldNumber">
            <summary>Field number for the "reset_request_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.MakeCallableResponseFieldNumber">
            <summary>Field number for the "make_callable_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.RunCallableResponseFieldNumber">
            <summary>Field number for the "run_callable_response" field.</summary>
        </member>
        <member name="F:Tensorflow.ReplayOp.ReleaseCallableResponseFieldNumber">
            <summary>Field number for the "release_callable_response" field.</summary>
        </member>
        <member name="T:Tensorflow.ReplayOp.OpOneofCase">
            <summary>Enum of possible cases for the "op" oneof.</summary>
        </member>
        <member name="T:Tensorflow.ReplayOp.ResponseOneofCase">
            <summary>Enum of possible cases for the "response" oneof.</summary>
        </member>
        <member name="T:Tensorflow.ResourceHandleReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/resource_handle.proto</summary>
        </member>
        <member name="P:Tensorflow.ResourceHandleReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/resource_handle.proto</summary>
        </member>
        <member name="T:Tensorflow.ResourceHandleProto">
            <summary>
            Protocol buffer representing a handle to a tensorflow resource. Handles are
            not valid across executions, but can be serialized back and forth from within
            a single run.
            </summary>
        </member>
        <member name="F:Tensorflow.ResourceHandleProto.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="P:Tensorflow.ResourceHandleProto.Device">
            <summary>
            Unique name for the device containing the resource.
            </summary>
        </member>
        <member name="F:Tensorflow.ResourceHandleProto.ContainerFieldNumber">
            <summary>Field number for the "container" field.</summary>
        </member>
        <member name="P:Tensorflow.ResourceHandleProto.Container">
            <summary>
            Container in which this resource is placed.
            </summary>
        </member>
        <member name="F:Tensorflow.ResourceHandleProto.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.ResourceHandleProto.Name">
            <summary>
            Unique name of this resource.
            </summary>
        </member>
        <member name="F:Tensorflow.ResourceHandleProto.HashCodeFieldNumber">
            <summary>Field number for the "hash_code" field.</summary>
        </member>
        <member name="P:Tensorflow.ResourceHandleProto.HashCode">
            <summary>
            Hash code for the type of the resource. Is only valid in the same device
            and in the same execution.
            </summary>
        </member>
        <member name="F:Tensorflow.ResourceHandleProto.MaybeTypeNameFieldNumber">
            <summary>Field number for the "maybe_type_name" field.</summary>
        </member>
        <member name="P:Tensorflow.ResourceHandleProto.MaybeTypeName">
            <summary>
            For debug-only, the name of the type pointed to by this handle, if
            available.
            </summary>
        </member>
        <member name="F:Tensorflow.ResourceHandleProto.DtypesAndShapesFieldNumber">
            <summary>Field number for the "dtypes_and_shapes" field.</summary>
        </member>
        <member name="P:Tensorflow.ResourceHandleProto.DtypesAndShapes">
            <summary>
            Data types and shapes for the underlying resource.
            </summary>
        </member>
        <member name="T:Tensorflow.ResourceHandleProto.Types">
            <summary>Container for nested types declared in the ResourceHandleProto message type.</summary>
        </member>
        <member name="T:Tensorflow.ResourceHandleProto.Types.DtypeAndShape">
            <summary>
            Protocol buffer representing a pair of (data type, tensor shape).
            </summary>
        </member>
        <member name="F:Tensorflow.ResourceHandleProto.Types.DtypeAndShape.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.ResourceHandleProto.Types.DtypeAndShape.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="T:Tensorflow.RewriterConfigReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/rewriter_config.proto</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfigReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/rewriter_config.proto</summary>
        </member>
        <member name="F:Tensorflow.AutoParallelOptions.EnableFieldNumber">
            <summary>Field number for the "enable" field.</summary>
        </member>
        <member name="F:Tensorflow.AutoParallelOptions.NumReplicasFieldNumber">
            <summary>Field number for the "num_replicas" field.</summary>
        </member>
        <member name="F:Tensorflow.ScopedAllocatorOptions.EnableOpFieldNumber">
            <summary>Field number for the "enable_op" field.</summary>
        </member>
        <member name="P:Tensorflow.ScopedAllocatorOptions.EnableOp">
            <summary>
            If present, only perform optimization for these ops.
            </summary>
        </member>
        <member name="T:Tensorflow.RewriterConfig">
            <summary>
            Graph rewriting is experimental and subject to change, not covered by any
            API stability guarantees.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.CpuLayoutConversionFieldNumber">
            <summary>Field number for the "cpu_layout_conversion" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.CpuLayoutConversion">
            <summary>
            CPU Conversion settings between NHCW and NCHW.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.LayoutOptimizerFieldNumber">
            <summary>Field number for the "layout_optimizer" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.LayoutOptimizer">
            <summary>
            Optimize tensor layouts (default is ON)
            e.g. This will try to use NCHW layout on GPU which is faster.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.ConstantFoldingFieldNumber">
            <summary>Field number for the "constant_folding" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.ConstantFolding">
            <summary>
            Fold constants (default is ON)
            Statically infer the value of tensors when possible, and materialize the
            result using constants.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.ShapeOptimizationFieldNumber">
            <summary>Field number for the "shape_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.ShapeOptimization">
            <summary>
            Shape optimizations (default is ON)
            Simplify computations made on shapes.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.RemappingFieldNumber">
            <summary>Field number for the "remapping" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.Remapping">
            <summary>
            Remapping (default is ON)
            Remap subgraphs onto more efficient implementations.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.CommonSubgraphEliminationFieldNumber">
            <summary>Field number for the "common_subgraph_elimination" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.CommonSubgraphElimination">
            <summary>
            Common subgraph elimination (default is ON)
            e.g. Simplify arithmetic ops; merge ops with same value (like constants).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.ArithmeticOptimizationFieldNumber">
            <summary>Field number for the "arithmetic_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.ArithmeticOptimization">
            <summary>
            Arithmetic optimizations (default is ON)
            e.g. Simplify arithmetic ops; merge ops with same value (like constants).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.DependencyOptimizationFieldNumber">
            <summary>Field number for the "dependency_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.DependencyOptimization">
            <summary>
            Control dependency optimizations (default is ON).
            Remove redundant control dependencies, which may enable other optimization.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.LoopOptimizationFieldNumber">
            <summary>Field number for the "loop_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.LoopOptimization">
            <summary>
            Loop optimizations (default is ON).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.FunctionOptimizationFieldNumber">
            <summary>Field number for the "function_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.FunctionOptimization">
            <summary>
            Function optimizations (default is ON).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.DebugStripperFieldNumber">
            <summary>Field number for the "debug_stripper" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.DebugStripper">
            <summary>
            Strips debug-related nodes from the graph (off by default).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.DisableModelPruningFieldNumber">
            <summary>Field number for the "disable_model_pruning" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.DisableModelPruning">
            <summary>
            If true, don't remove unnecessary ops from the graph
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.ScopedAllocatorOptimizationFieldNumber">
            <summary>Field number for the "scoped_allocator_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.ScopedAllocatorOptimization">
            <summary>
            Try to allocate some independent Op outputs contiguously in order to
            merge or eliminate downstream Ops (off by default).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.PinToHostOptimizationFieldNumber">
            <summary>Field number for the "pin_to_host_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.PinToHostOptimization">
            <summary>
            Force small ops onto the CPU (default is OFF).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.ImplementationSelectorFieldNumber">
            <summary>Field number for the "implementation_selector" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.ImplementationSelector">
            <summary>
            Enable the swap of kernel implementations based on the device placement
            (default is ON).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.AutoMixedPrecisionFieldNumber">
            <summary>Field number for the "auto_mixed_precision" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.AutoMixedPrecision">
            <summary>
            Optimize data types for CUDA (default is OFF).
            This will try to use float16 on GPU which is faster.
            Note that this can change the numerical stability of the graph and may
            require the use of loss scaling to maintain model convergence.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.AutoMixedPrecisionMklFieldNumber">
            <summary>Field number for the "auto_mixed_precision_mkl" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.AutoMixedPrecisionMkl">
            <summary>
            Optimize data types for MKL (default is OFF).
            This will try to use bfloat16 on CPUs, which is faster.
            Note that this can change the numerical stability of the graph.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.DisableMetaOptimizerFieldNumber">
            <summary>Field number for the "disable_meta_optimizer" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.DisableMetaOptimizer">
            <summary>
            Disable the entire meta optimizer (off by default).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.MetaOptimizerIterationsFieldNumber">
            <summary>Field number for the "meta_optimizer_iterations" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.MetaOptimizerIterations">
            <summary>
            Controls how many times we run the optimizers in meta optimizer (default
            is once).
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.MinGraphNodesFieldNumber">
            <summary>Field number for the "min_graph_nodes" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.MinGraphNodes">
            <summary>
            The minimum number of nodes in a graph to optimizer. For smaller graphs,
            optimization is skipped.
            0 means the system picks an appropriate number.
            &lt; 0 means do not skip optimization.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.ExperimentalDisableCompressedTensorOptimizationFieldNumber">
            <summary>Field number for the "experimental_disable_compressed_tensor_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.ExperimentalDisableCompressedTensorOptimization">
            <summary>
            Disable optimizations that assume compressed tensors. Note that this flag
            is experimental and may be removed in the future.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.MemoryOptimizationFieldNumber">
            <summary>Field number for the "memory_optimization" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.MemoryOptimization">
            <summary>
            Configures memory optimization passes through the meta-optimizer. Has no
            effect on manually requested memory optimization passes in the optimizers
            field.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.MemoryOptimizerTargetNodeNameScopeFieldNumber">
            <summary>Field number for the "memory_optimizer_target_node_name_scope" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.MemoryOptimizerTargetNodeNameScope">
            <summary>
            A node name scope for node names which are valid outputs of recomputations.
            Inputs to nodes that match this scope may be recomputed (subject either to
            manual annotation of those input nodes or to manual annotation and
            heuristics depending on memory_optimization), but the nodes themselves will
            not be recomputed. This matches any sub-scopes as well, meaning the scope
            can appear not just as a top-level scope. For example, if the value is
            "gradients/", the default, it will match node name "gradients/foo",
            "foo/gradients/bar", but not "foo_gradients/"
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.MetaOptimizerTimeoutMsFieldNumber">
            <summary>Field number for the "meta_optimizer_timeout_ms" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.MetaOptimizerTimeoutMs">
            <summary>
            Maximum number of milliseconds to spend optimizing a single graph before
            timing out. If equal to 0 the system picks a default (currently 5 minutes).
            If less than 0 the optimizer will never time out.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.AutoParallelFieldNumber">
            <summary>Field number for the "auto_parallel" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.AutoParallel">
            <summary>
            Configures AutoParallel optimization passes either through the
            meta-optimizer or when manually specified through the optimizers field.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.FailOnOptimizerErrorsFieldNumber">
            <summary>Field number for the "fail_on_optimizer_errors" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.FailOnOptimizerErrors">
            <summary>
            If true, any optimization pass failing will cause the MetaOptimizer to
            stop with an error. By default - or when set to false, failing passes are
            skipped silently.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.ScopedAllocatorOptsFieldNumber">
            <summary>Field number for the "scoped_allocator_opts" field.</summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.OptimizersFieldNumber">
            <summary>Field number for the "optimizers" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.Optimizers">
             <summary>
             If non-empty, will use this as an alternative way to specify a list of
             optimizations to turn on and the order of the optimizations (replacing the
             meta-optimizer).
            
             Of the RewriterConfig options, only the AutoParallel configuration options
             (the auto_parallel field) apply to manually requested optimization passes
             ("autoparallel"). Memory optimization passes ("memory") invoked here are
             not configurable (in contrast to memory optimization passes through the
             meta-optimizer) and act only on manual op annotations.
            
             Custom optimizers (see custom_optimizers) that are not part of this
             schedule will be run after - in the order that they were specified.
             </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.CustomOptimizersFieldNumber">
            <summary>Field number for the "custom_optimizers" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.CustomOptimizers">
            <summary>
            list of CustomGraphOptimizers to apply.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.InterOptimizerVerifierConfigFieldNumber">
            <summary>Field number for the "inter_optimizer_verifier_config" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.InterOptimizerVerifierConfig">
            <summary>
            VerifierConfig specifying the verifiers to be run after every optimizer.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.PostOptimizationVerifierConfigFieldNumber">
            <summary>Field number for the "post_optimization_verifier_config" field.</summary>
        </member>
        <member name="P:Tensorflow.RewriterConfig.PostOptimizationVerifierConfig">
            <summary>
            VerifierConfig specifying the verifiers to be run at the end, after all
            optimizers have run.
            </summary>
        </member>
        <member name="T:Tensorflow.RewriterConfig.Types">
            <summary>Container for nested types declared in the RewriterConfig message type.</summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.Toggle.Aggressive">
            <summary>
            Enable some aggressive optimizations that use assumptions that TF graphs
            may break. For example, assume the shape of a placeholder matches its
            actual feed.
            </summary>
        </member>
        <member name="T:Tensorflow.RewriterConfig.Types.CpuLayout">
            <summary>
            Enum for layout conversion between NCHW and NHWC on CPU. Default is OFF.
            </summary>
        </member>
        <member name="T:Tensorflow.RewriterConfig.Types.NumIterationsType">
            <summary>
            Enum controlling the number of times to run optimizers. The default is to
            run them twice.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.MemOptType.DefaultMemOpt">
            <summary>
            The default setting (SCHEDULING and SWAPPING HEURISTICS only)
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.MemOptType.NoMemOpt">
            <summary>
            Disabled in the meta-optimizer.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.MemOptType.Manual">
            <summary>
            Driven by manual op-level annotations.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.MemOptType.SwappingHeuristics">
            <summary>
            Swapping heuristic will move a tensor from the GPU to the CPU and move
            it back when needed to reduce peak memory usage.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.MemOptType.RecomputationHeuristics">
            <summary>
            Recomputation heuristics will recompute ops (such as Relu activation)
            during backprop instead of storing them, reducing peak memory usage.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.MemOptType.SchedulingHeuristics">
            <summary>
            Scheduling will split big ops such as AddN and try to enforce a schedule
            of the new computations that decreases peak memory usage.
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.MemOptType.Heuristics">
            <summary>
            Use any combination of swapping and recomputation heuristics.
            </summary>
        </member>
        <member name="T:Tensorflow.RewriterConfig.Types.CustomGraphOptimizer">
            <summary>
            Message to describe custom graph optimizer and its parameters
            </summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.CustomGraphOptimizer.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.RewriterConfig.Types.CustomGraphOptimizer.ParameterMapFieldNumber">
            <summary>Field number for the "parameter_map" field.</summary>
        </member>
        <member name="T:Tensorflow.SavedModelReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/saved_model.proto</summary>
        </member>
        <member name="P:Tensorflow.SavedModelReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/saved_model.proto</summary>
        </member>
        <member name="T:Tensorflow.SavedModel">
            <summary>
            SavedModel is the high level serialization format for TensorFlow Models.
            See [todo: doc links, similar to session_bundle] for more information.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedModel.SavedModelSchemaVersionFieldNumber">
            <summary>Field number for the "saved_model_schema_version" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedModel.SavedModelSchemaVersion">
            <summary>
            The schema version of the SavedModel instance. Used for versioning when
            making future changes to the specification/implementation. Initial value
            at release will be 1.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedModel.MetaGraphsFieldNumber">
            <summary>Field number for the "meta_graphs" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedModel.MetaGraphs">
            <summary>
            One or more MetaGraphs.
            </summary>
        </member>
        <member name="T:Tensorflow.SavedObjectGraphReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/saved_object_graph.proto</summary>
        </member>
        <member name="P:Tensorflow.SavedObjectGraphReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/saved_object_graph.proto</summary>
        </member>
        <member name="F:Tensorflow.SavedObjectGraph.NodesFieldNumber">
            <summary>Field number for the "nodes" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedObjectGraph.Nodes">
             <summary>
             Flattened list of objects in the object graph.
            
             The position of the object in this list indicates its id.
             Nodes[0] is considered the root node.
             </summary>
        </member>
        <member name="F:Tensorflow.SavedObjectGraph.ConcreteFunctionsFieldNumber">
            <summary>Field number for the "concrete_functions" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedObjectGraph.ConcreteFunctions">
            <summary>
            Information about captures and output structures in concrete functions.
            Referenced from SavedBareConcreteFunction and SavedFunction.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedObject.ChildrenFieldNumber">
            <summary>Field number for the "children" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedObject.Children">
             <summary>
             Objects which this object depends on: named edges in the dependency
             graph.
            
             Note: currently only valid if kind == "user_object".
             </summary>
        </member>
        <member name="F:Tensorflow.SavedObject.SlotVariablesFieldNumber">
            <summary>Field number for the "slot_variables" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedObject.SlotVariables">
             <summary>
             Slot variables owned by this object. This describes the three-way
             (optimizer, variable, slot variable) relationship; none of the three
             depend on the others directly.
            
             Note: currently only valid if kind == "user_object".
             </summary>
        </member>
        <member name="F:Tensorflow.SavedObject.UserObjectFieldNumber">
            <summary>Field number for the "user_object" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedObject.AssetFieldNumber">
            <summary>Field number for the "asset" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedObject.FunctionFieldNumber">
            <summary>Field number for the "function" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedObject.VariableFieldNumber">
            <summary>Field number for the "variable" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedObject.BareConcreteFunctionFieldNumber">
            <summary>Field number for the "bare_concrete_function" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedObject.ConstantFieldNumber">
            <summary>Field number for the "constant" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedObject.ResourceFieldNumber">
            <summary>Field number for the "resource" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedObject.SaveableObjectsFieldNumber">
            <summary>Field number for the "saveable_objects" field.</summary>
        </member>
        <member name="T:Tensorflow.SavedObject.KindOneofCase">
            <summary>Enum of possible cases for the "kind" oneof.</summary>
        </member>
        <member name="T:Tensorflow.SavedUserObject">
             <summary>
             A SavedUserObject is an object (in the object-oriented language of the
             TensorFlow program) of some user- or framework-defined class other than
             those handled specifically by the other kinds of SavedObjects.
            
             This object cannot be evaluated as a tensor, and therefore cannot be bound
             to an input of a function.
             </summary>
        </member>
        <member name="F:Tensorflow.SavedUserObject.IdentifierFieldNumber">
            <summary>Field number for the "identifier" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedUserObject.Identifier">
            <summary>
            Corresponds to a registration of the type to use in the loading program.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedUserObject.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedUserObject.Version">
            <summary>
            Version information from the producer of this SavedUserObject.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedUserObject.MetadataFieldNumber">
            <summary>Field number for the "metadata" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedUserObject.Metadata">
            <summary>
            Initialization-related metadata.
            </summary>
        </member>
        <member name="T:Tensorflow.SavedAsset">
             <summary>
             A SavedAsset points to an asset in the MetaGraph.
            
             When bound to a function this object evaluates to a tensor with the absolute
             filename. Users should not depend on a particular part of the filename to
             remain stable (e.g. basename could be changed).
             </summary>
        </member>
        <member name="F:Tensorflow.SavedAsset.AssetFileDefIndexFieldNumber">
            <summary>Field number for the "asset_file_def_index" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedAsset.AssetFileDefIndex">
             <summary>
             Index into `MetaGraphDef.asset_file_def[]` that describes the Asset.
            
             Only the field `AssetFileDef.filename` is used. Other fields, such as
             `AssetFileDef.tensor_info`, MUST be ignored.
             </summary>
        </member>
        <member name="T:Tensorflow.SavedFunction">
            <summary>
            A function with multiple signatures, possibly with non-Tensor arguments.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedFunction.ConcreteFunctionsFieldNumber">
            <summary>Field number for the "concrete_functions" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedFunction.FunctionSpecFieldNumber">
            <summary>Field number for the "function_spec" field.</summary>
        </member>
        <member name="T:Tensorflow.SavedConcreteFunction">
            <summary>
            Stores low-level information about a concrete function. Referenced in either
            a SavedFunction or a SavedBareConcreteFunction.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedConcreteFunction.BoundInputsFieldNumber">
            <summary>Field number for the "bound_inputs" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedConcreteFunction.BoundInputs">
            <summary>
            Bound inputs to the function. The SavedObjects identified by the node ids
            given here are appended as extra inputs to the caller-supplied inputs.
            The only types of SavedObjects valid here are SavedVariable, SavedResource
            and SavedAsset.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedConcreteFunction.CanonicalizedInputSignatureFieldNumber">
            <summary>Field number for the "canonicalized_input_signature" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedConcreteFunction.CanonicalizedInputSignature">
            <summary>
            Input in canonicalized form that was received to create this concrete
            function.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedConcreteFunction.OutputSignatureFieldNumber">
            <summary>Field number for the "output_signature" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedConcreteFunction.OutputSignature">
            <summary>
            Output that was the return value of this function after replacing all
            Tensors with TensorSpecs. This can be an arbitrary nested function and will
            be used to reconstruct the full structure from pure tensors.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedBareConcreteFunction.ConcreteFunctionNameFieldNumber">
            <summary>Field number for the "concrete_function_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedBareConcreteFunction.ConcreteFunctionName">
            <summary>
            Identifies a SavedConcreteFunction.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedBareConcreteFunction.ArgumentKeywordsFieldNumber">
            <summary>Field number for the "argument_keywords" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedBareConcreteFunction.ArgumentKeywords">
            <summary>
            A sequence of unique strings, one per Tensor argument.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedBareConcreteFunction.AllowedPositionalArgumentsFieldNumber">
            <summary>Field number for the "allowed_positional_arguments" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedBareConcreteFunction.AllowedPositionalArguments">
            <summary>
            The prefix of `argument_keywords` which may be identified by position.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedConstant.OperationFieldNumber">
            <summary>Field number for the "operation" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedConstant.Operation">
            <summary>
            An Operation name for a ConstantOp in this SavedObjectGraph's MetaGraph.
            </summary>
        </member>
        <member name="T:Tensorflow.SavedVariable">
            <summary>
            Represents a Variable that is initialized by loading the contents from the
            checkpoint.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedVariable.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedVariable.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedVariable.TrainableFieldNumber">
            <summary>Field number for the "trainable" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedVariable.SynchronizationFieldNumber">
            <summary>Field number for the "synchronization" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedVariable.AggregationFieldNumber">
            <summary>Field number for the "aggregation" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedVariable.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.SavedVariable.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="T:Tensorflow.FunctionSpec">
            <summary>
            Represents `FunctionSpec` used in `Function`. This represents a
            function that has been wrapped as a TensorFlow `Function`.
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionSpec.FullargspecFieldNumber">
            <summary>Field number for the "fullargspec" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionSpec.Fullargspec">
            <summary>
            Full arg spec from inspect.getfullargspec().
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionSpec.IsMethodFieldNumber">
            <summary>Field number for the "is_method" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionSpec.IsMethod">
            <summary>
            Whether this represents a class method.
            </summary>
        </member>
        <member name="F:Tensorflow.FunctionSpec.InputSignatureFieldNumber">
            <summary>Field number for the "input_signature" field.</summary>
        </member>
        <member name="P:Tensorflow.FunctionSpec.InputSignature">
            <summary>
            The input signature, if specified.
            </summary>
        </member>
        <member name="T:Tensorflow.SavedResource">
            <summary>
            A SavedResource represents a TF object that holds state during its lifetime.
            An object of this type can have a reference to a:
            create_resource() and an initialize() function.
            </summary>
        </member>
        <member name="F:Tensorflow.SavedResource.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="P:Tensorflow.SavedResource.Device">
            <summary>
            A device specification indicating a required placement for the resource
            creation function, e.g. "CPU". An empty string allows the user to select a
            device.
            </summary>
        </member>
        <member name="F:Tensorflow.SaveableObject.SaveFunctionFieldNumber">
            <summary>Field number for the "save_function" field.</summary>
        </member>
        <member name="P:Tensorflow.SaveableObject.SaveFunction">
            <summary>
            Node ids of concrete functions for saving and loading from a checkpoint.
            </summary>
        </member>
        <member name="F:Tensorflow.SaveableObject.RestoreFunctionFieldNumber">
            <summary>Field number for the "restore_function" field.</summary>
        </member>
        <member name="T:Tensorflow.SaverReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/saver.proto</summary>
        </member>
        <member name="P:Tensorflow.SaverReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/saver.proto</summary>
        </member>
        <member name="T:Tensorflow.SaverDef">
            <summary>
            Protocol buffer representing the configuration of a Saver.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.FilenameTensorNameFieldNumber">
            <summary>Field number for the "filename_tensor_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SaverDef.FilenameTensorName">
            <summary>
            The name of the tensor in which to specify the filename when saving or
            restoring a model checkpoint.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.SaveTensorNameFieldNumber">
            <summary>Field number for the "save_tensor_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SaverDef.SaveTensorName">
            <summary>
            The operation to run when saving a model checkpoint.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.RestoreOpNameFieldNumber">
            <summary>Field number for the "restore_op_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SaverDef.RestoreOpName">
            <summary>
            The operation to run when restoring a model checkpoint.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.MaxToKeepFieldNumber">
            <summary>Field number for the "max_to_keep" field.</summary>
        </member>
        <member name="P:Tensorflow.SaverDef.MaxToKeep">
            <summary>
            Maximum number of checkpoints to keep.  If 0, no checkpoints are deleted.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.ShardedFieldNumber">
            <summary>Field number for the "sharded" field.</summary>
        </member>
        <member name="P:Tensorflow.SaverDef.Sharded">
            <summary>
            Shard the save files, one per device that has Variable nodes.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.KeepCheckpointEveryNHoursFieldNumber">
            <summary>Field number for the "keep_checkpoint_every_n_hours" field.</summary>
        </member>
        <member name="P:Tensorflow.SaverDef.KeepCheckpointEveryNHours">
            <summary>
            How often to keep an additional checkpoint. If not specified, only the last
            "max_to_keep" checkpoints are kept; if specified, in addition to keeping
            the last "max_to_keep" checkpoints, an additional checkpoint will be kept
            for every n hours of training.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="T:Tensorflow.SaverDef.Types">
            <summary>Container for nested types declared in the SaverDef message type.</summary>
        </member>
        <member name="T:Tensorflow.SaverDef.Types.CheckpointFormatVersion">
            <summary>
            A version number that identifies a different on-disk checkpoint format.
            Usually, each subclass of BaseSaverBuilder works with a particular
            version/format.  However, it is possible that the same builder may be
            upgraded to support a newer checkpoint format in the future.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.Types.CheckpointFormatVersion.Legacy">
            <summary>
            Internal legacy format.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.Types.CheckpointFormatVersion.V1">
            <summary>
            Deprecated format: tf.Saver() which works with tensorflow::table::Table.
            </summary>
        </member>
        <member name="F:Tensorflow.SaverDef.Types.CheckpointFormatVersion.V2">
            <summary>
            Current format: more efficient.
            </summary>
        </member>
        <member name="T:Tensorflow.StepStatsReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/step_stats.proto</summary>
        </member>
        <member name="P:Tensorflow.StepStatsReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/step_stats.proto</summary>
        </member>
        <member name="T:Tensorflow.AllocationRecord">
            <summary>
            An allocation/de-allocation operation performed by the allocator.
            </summary>
        </member>
        <member name="F:Tensorflow.AllocationRecord.AllocMicrosFieldNumber">
            <summary>Field number for the "alloc_micros" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocationRecord.AllocMicros">
            <summary>
            The timestamp of the operation.
            </summary>
        </member>
        <member name="F:Tensorflow.AllocationRecord.AllocBytesFieldNumber">
            <summary>Field number for the "alloc_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocationRecord.AllocBytes">
            <summary>
            Number of bytes allocated, or de-allocated if negative.
            </summary>
        </member>
        <member name="F:Tensorflow.AllocatorMemoryUsed.AllocatorNameFieldNumber">
            <summary>Field number for the "allocator_name" field.</summary>
        </member>
        <member name="F:Tensorflow.AllocatorMemoryUsed.TotalBytesFieldNumber">
            <summary>Field number for the "total_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocatorMemoryUsed.TotalBytes">
            <summary>
            These are per-node allocator memory stats.
            </summary>
        </member>
        <member name="F:Tensorflow.AllocatorMemoryUsed.PeakBytesFieldNumber">
            <summary>Field number for the "peak_bytes" field.</summary>
        </member>
        <member name="F:Tensorflow.AllocatorMemoryUsed.LiveBytesFieldNumber">
            <summary>Field number for the "live_bytes" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocatorMemoryUsed.LiveBytes">
            <summary>
            The bytes that are not deallocated.
            </summary>
        </member>
        <member name="F:Tensorflow.AllocatorMemoryUsed.AllocationRecordsFieldNumber">
            <summary>Field number for the "allocation_records" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocatorMemoryUsed.AllocationRecords">
            <summary>
            The allocation and deallocation timeline.
            </summary>
        </member>
        <member name="F:Tensorflow.AllocatorMemoryUsed.AllocatorBytesInUseFieldNumber">
            <summary>Field number for the "allocator_bytes_in_use" field.</summary>
        </member>
        <member name="P:Tensorflow.AllocatorMemoryUsed.AllocatorBytesInUse">
            <summary>
            These are snapshots of the overall allocator memory stats.
            The number of live bytes currently allocated by the allocator.
            </summary>
        </member>
        <member name="T:Tensorflow.NodeOutput">
            <summary>
            Output sizes recorded for a single execution of a graph node.
            </summary>
        </member>
        <member name="F:Tensorflow.NodeOutput.SlotFieldNumber">
            <summary>Field number for the "slot" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeOutput.TensorDescriptionFieldNumber">
            <summary>Field number for the "tensor_description" field.</summary>
        </member>
        <member name="T:Tensorflow.MemoryStats">
            <summary>
            For memory tracking.
            </summary>
        </member>
        <member name="F:Tensorflow.MemoryStats.TempMemorySizeFieldNumber">
            <summary>Field number for the "temp_memory_size" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryStats.PersistentMemorySizeFieldNumber">
            <summary>Field number for the "persistent_memory_size" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryStats.PersistentTensorAllocIdsFieldNumber">
            <summary>Field number for the "persistent_tensor_alloc_ids" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryStats.DeviceTempMemorySizeFieldNumber">
            <summary>Field number for the "device_temp_memory_size" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryStats.DevicePersistentMemorySizeFieldNumber">
            <summary>Field number for the "device_persistent_memory_size" field.</summary>
        </member>
        <member name="F:Tensorflow.MemoryStats.DevicePersistentTensorAllocIdsFieldNumber">
            <summary>Field number for the "device_persistent_tensor_alloc_ids" field.</summary>
        </member>
        <member name="T:Tensorflow.NodeExecStats">
            <summary>
            Time/size stats recorded for a single execution of a graph node.
            </summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.NodeNameFieldNumber">
            <summary>Field number for the "node_name" field.</summary>
        </member>
        <member name="P:Tensorflow.NodeExecStats.NodeName">
            <summary>
            TODO(tucker): Use some more compact form of node identity than
            the full string name.  Either all processes should agree on a
            global id (cost_id?) for each node, or we should use a hash of
            the name.
            </summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.AllStartMicrosFieldNumber">
            <summary>Field number for the "all_start_micros" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.OpStartRelMicrosFieldNumber">
            <summary>Field number for the "op_start_rel_micros" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.OpEndRelMicrosFieldNumber">
            <summary>Field number for the "op_end_rel_micros" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.AllEndRelMicrosFieldNumber">
            <summary>Field number for the "all_end_rel_micros" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.MemoryFieldNumber">
            <summary>Field number for the "memory" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.OutputFieldNumber">
            <summary>Field number for the "output" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.TimelineLabelFieldNumber">
            <summary>Field number for the "timeline_label" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.ScheduledMicrosFieldNumber">
            <summary>Field number for the "scheduled_micros" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.ThreadIdFieldNumber">
            <summary>Field number for the "thread_id" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.ReferencedTensorFieldNumber">
            <summary>Field number for the "referenced_tensor" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.MemoryStatsFieldNumber">
            <summary>Field number for the "memory_stats" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.AllStartNanosFieldNumber">
            <summary>Field number for the "all_start_nanos" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.OpStartRelNanosFieldNumber">
            <summary>Field number for the "op_start_rel_nanos" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.OpEndRelNanosFieldNumber">
            <summary>Field number for the "op_end_rel_nanos" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.AllEndRelNanosFieldNumber">
            <summary>Field number for the "all_end_rel_nanos" field.</summary>
        </member>
        <member name="F:Tensorflow.NodeExecStats.ScheduledNanosFieldNumber">
            <summary>Field number for the "scheduled_nanos" field.</summary>
        </member>
        <member name="F:Tensorflow.DeviceStepStats.DeviceFieldNumber">
            <summary>Field number for the "device" field.</summary>
        </member>
        <member name="F:Tensorflow.DeviceStepStats.NodeStatsFieldNumber">
            <summary>Field number for the "node_stats" field.</summary>
        </member>
        <member name="F:Tensorflow.DeviceStepStats.ThreadNamesFieldNumber">
            <summary>Field number for the "thread_names" field.</summary>
        </member>
        <member name="P:Tensorflow.DeviceStepStats.ThreadNames">
            <summary>
            Its key is thread id.
            </summary>
        </member>
        <member name="F:Tensorflow.StepStats.DevStatsFieldNumber">
            <summary>Field number for the "dev_stats" field.</summary>
        </member>
        <member name="T:Tensorflow.StructReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/struct.proto</summary>
        </member>
        <member name="P:Tensorflow.StructReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/struct.proto</summary>
        </member>
        <member name="T:Tensorflow.StructuredValue">
             <summary>
             `StructuredValue` represents a dynamically typed value representing various
             data structures that are inspired by Python data structures typically used in
             TensorFlow functions as inputs and outputs.
            
             For example when saving a Layer there may be a `training` argument. If the
             user passes a boolean True/False, that switches between two concrete
             TensorFlow functions. In order to switch between them in the same way after
             loading the SavedModel, we need to represent "True" and "False".
            
             A more advanced example might be a function which takes a list of
             dictionaries mapping from strings to Tensors. In order to map from
             user-specified arguments `[{"a": tf.constant(1.)}, {"q": tf.constant(3.)}]`
             after load to the right saved TensorFlow function, we need to represent the
             nested structure and the strings, recording that we have a trace for anything
             matching `[{"a": tf.TensorSpec(None, tf.float32)}, {"q": tf.TensorSpec([],
             tf.float64)}]` as an example.
            
             Likewise functions may return nested structures of Tensors, for example
             returning a dictionary mapping from strings to Tensors. In order for the
             loaded function to return the same structure we need to serialize it.
            
             This is an ergonomic aid for working with loaded SavedModels, not a promise
             to serialize all possible function signatures. For example we do not expect
             to pickle generic Python objects, and ideally we'd stay language-agnostic.
             </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.NoneValueFieldNumber">
            <summary>Field number for the "none_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.NoneValue">
            <summary>
            Represents None.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.Float64ValueFieldNumber">
            <summary>Field number for the "float64_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.Float64Value">
            <summary>
            Represents a double-precision floating-point value (a Python `float`).
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.Int64ValueFieldNumber">
            <summary>Field number for the "int64_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.Int64Value">
            <summary>
            Represents a signed integer value, limited to 64 bits.
            Larger values from Python's arbitrary-precision integers are unsupported.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.StringValueFieldNumber">
            <summary>Field number for the "string_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.StringValue">
            <summary>
            Represents a string of Unicode characters stored in a Python `str`.
            In Python 3, this is exactly what type `str` is.
            In Python 2, this is the UTF-8 encoding of the characters.
            For strings with ASCII characters only (as often used in TensorFlow code)
            there is effectively no difference between the language versions.
            The obsolescent `unicode` type of Python 2 is not supported here.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.BoolValueFieldNumber">
            <summary>Field number for the "bool_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.BoolValue">
            <summary>
            Represents a boolean value.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.TensorShapeValueFieldNumber">
            <summary>Field number for the "tensor_shape_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.TensorShapeValue">
            <summary>
            Represents a TensorShape.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.TensorDtypeValueFieldNumber">
            <summary>Field number for the "tensor_dtype_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.TensorDtypeValue">
            <summary>
            Represents an enum value for dtype.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.TensorSpecValueFieldNumber">
            <summary>Field number for the "tensor_spec_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.TensorSpecValue">
            <summary>
            Represents a value for tf.TensorSpec.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.TypeSpecValueFieldNumber">
            <summary>Field number for the "type_spec_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.TypeSpecValue">
            <summary>
            Represents a value for tf.TypeSpec.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.BoundedTensorSpecValueFieldNumber">
            <summary>Field number for the "bounded_tensor_spec_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.BoundedTensorSpecValue">
            <summary>
            Represents a value for tf.BoundedTensorSpec.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.ListValueFieldNumber">
            <summary>Field number for the "list_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.ListValue">
            <summary>
            Represents a list of `Value`.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.TupleValueFieldNumber">
            <summary>Field number for the "tuple_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.TupleValue">
            <summary>
            Represents a tuple of `Value`.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.DictValueFieldNumber">
            <summary>Field number for the "dict_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.DictValue">
            <summary>
            Represents a dict `Value`.
            </summary>
        </member>
        <member name="F:Tensorflow.StructuredValue.NamedTupleValueFieldNumber">
            <summary>Field number for the "named_tuple_value" field.</summary>
        </member>
        <member name="P:Tensorflow.StructuredValue.NamedTupleValue">
            <summary>
            Represents Python's namedtuple.
            </summary>
        </member>
        <member name="T:Tensorflow.StructuredValue.KindOneofCase">
            <summary>Enum of possible cases for the "kind" oneof.</summary>
        </member>
        <member name="T:Tensorflow.NoneValue">
            <summary>
            Represents None.
            </summary>
        </member>
        <member name="T:Tensorflow.ListValue">
            <summary>
            Represents a Python list.
            </summary>
        </member>
        <member name="F:Tensorflow.ListValue.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="T:Tensorflow.TupleValue">
            <summary>
            Represents a Python tuple.
            </summary>
        </member>
        <member name="F:Tensorflow.TupleValue.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="T:Tensorflow.DictValue">
            <summary>
            Represents a Python dict keyed by `str`.
            The comment on Unicode from Value.string_value applies analogously.
            </summary>
        </member>
        <member name="F:Tensorflow.DictValue.FieldsFieldNumber">
            <summary>Field number for the "fields" field.</summary>
        </member>
        <member name="T:Tensorflow.PairValue">
            <summary>
            Represents a (key, value) pair.
            </summary>
        </member>
        <member name="F:Tensorflow.PairValue.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="F:Tensorflow.PairValue.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="T:Tensorflow.NamedTupleValue">
            <summary>
            Represents Python's namedtuple.
            </summary>
        </member>
        <member name="F:Tensorflow.NamedTupleValue.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.NamedTupleValue.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="T:Tensorflow.TensorSpecProto">
            <summary>
            A protobuf to represent tf.TensorSpec.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorSpecProto.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.TensorSpecProto.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.TensorSpecProto.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="T:Tensorflow.BoundedTensorSpecProto">
            <summary>
            A protobuf to represent tf.BoundedTensorSpec.
            </summary>
        </member>
        <member name="F:Tensorflow.BoundedTensorSpecProto.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="F:Tensorflow.BoundedTensorSpecProto.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.BoundedTensorSpecProto.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.BoundedTensorSpecProto.MinimumFieldNumber">
            <summary>Field number for the "minimum" field.</summary>
        </member>
        <member name="F:Tensorflow.BoundedTensorSpecProto.MaximumFieldNumber">
            <summary>Field number for the "maximum" field.</summary>
        </member>
        <member name="T:Tensorflow.TypeSpecProto">
            <summary>
            Represents a tf.TypeSpec
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.TypeSpecClassFieldNumber">
            <summary>Field number for the "type_spec_class" field.</summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.TypeStateFieldNumber">
            <summary>Field number for the "type_state" field.</summary>
        </member>
        <member name="P:Tensorflow.TypeSpecProto.TypeState">
            <summary>
            The value returned by TypeSpec._serialize().
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.TypeSpecClassNameFieldNumber">
            <summary>Field number for the "type_spec_class_name" field.</summary>
        </member>
        <member name="P:Tensorflow.TypeSpecProto.TypeSpecClassName">
            <summary>
            This is currently redundant with the type_spec_class enum, and is only
            used for error reporting.  In particular, if you use an older binary to
            load a newer model, and the model uses a TypeSpecClass that the older
            binary doesn't support, then this lets us display a useful error message.
            </summary>
        </member>
        <member name="T:Tensorflow.TypeSpecProto.Types">
            <summary>Container for nested types declared in the TypeSpecProto message type.</summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.SparseTensorSpec">
            <summary>
            tf.SparseTensorSpec
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.IndexedSlicesSpec">
            <summary>
            tf.IndexedSlicesSpec
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.RaggedTensorSpec">
            <summary>
            tf.RaggedTensorSpec
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.TensorArraySpec">
            <summary>
            tf.TensorArraySpec
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.DataDatasetSpec">
            <summary>
            tf.data.DatasetSpec
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.DataIteratorSpec">
            <summary>
            IteratorSpec from data/ops/iterator_ops.py
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.OptionalSpec">
            <summary>
            tf.OptionalSpec
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.PerReplicaSpec">
            <summary>
            PerReplicaSpec from distribute/values.py
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.VariableSpec">
            <summary>
            tf.VariableSpec
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.RowPartitionSpec">
            <summary>
            RowPartitionSpec from ragged/row_partition.py
            </summary>
        </member>
        <member name="F:Tensorflow.TypeSpecProto.Types.TypeSpecClass.NdarraySpec">
            <summary>
            TF Numpy NDarray spec
            </summary>
        </member>
        <member name="T:Tensorflow.SummaryReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/summary.proto</summary>
        </member>
        <member name="P:Tensorflow.SummaryReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/summary.proto</summary>
        </member>
        <member name="F:Tensorflow.DataClass.Unknown">
            <summary>
            Unknown data class, used (implicitly) for legacy data. Will not be
            processed by data ingestion pipelines.
            </summary>
        </member>
        <member name="F:Tensorflow.DataClass.Scalar">
            <summary>
            Scalar time series. Each `Value` for the corresponding tag must have
            `tensor` set to a rank-0 tensor of floating-point dtype, which will be
            converted to float64.
            </summary>
        </member>
        <member name="F:Tensorflow.DataClass.Tensor">
            <summary>
            Tensor time series. Each `Value` for the corresponding tag must have
            `tensor` set. The tensor value is arbitrary, but should be small to
            accommodate direct storage in database backends: an upper bound of a few
            kilobytes is a reasonable rule of thumb.
            </summary>
        </member>
        <member name="F:Tensorflow.DataClass.BlobSequence">
            <summary>
            Blob sequence time series. Each `Value` for the corresponding tag must
            have `tensor` set to a rank-1 tensor of bytestring dtype.
            </summary>
        </member>
        <member name="T:Tensorflow.SummaryDescription">
            <summary>
            Metadata associated with a series of Summary data
            </summary>
        </member>
        <member name="F:Tensorflow.SummaryDescription.TypeHintFieldNumber">
            <summary>Field number for the "type_hint" field.</summary>
        </member>
        <member name="P:Tensorflow.SummaryDescription.TypeHint">
            <summary>
            Hint on how plugins should process the data in this series.
            Supported values include "scalar", "histogram", "image", "audio"
            </summary>
        </member>
        <member name="T:Tensorflow.HistogramProto">
            <summary>
            Serialization format for histogram module in
            core/lib/histogram/histogram.h
            </summary>
        </member>
        <member name="F:Tensorflow.HistogramProto.MinFieldNumber">
            <summary>Field number for the "min" field.</summary>
        </member>
        <member name="F:Tensorflow.HistogramProto.MaxFieldNumber">
            <summary>Field number for the "max" field.</summary>
        </member>
        <member name="F:Tensorflow.HistogramProto.NumFieldNumber">
            <summary>Field number for the "num" field.</summary>
        </member>
        <member name="F:Tensorflow.HistogramProto.SumFieldNumber">
            <summary>Field number for the "sum" field.</summary>
        </member>
        <member name="F:Tensorflow.HistogramProto.SumSquaresFieldNumber">
            <summary>Field number for the "sum_squares" field.</summary>
        </member>
        <member name="F:Tensorflow.HistogramProto.BucketLimitFieldNumber">
            <summary>Field number for the "bucket_limit" field.</summary>
        </member>
        <member name="P:Tensorflow.HistogramProto.BucketLimit">
            <summary>
            Parallel arrays encoding the bucket boundaries and the bucket values.
            bucket(i) is the count for the bucket i.  The range for
            a bucket is:
              i == 0:  -DBL_MAX .. bucket_limit(0)
              i != 0:  bucket_limit(i-1) .. bucket_limit(i)
            </summary>
        </member>
        <member name="F:Tensorflow.HistogramProto.BucketFieldNumber">
            <summary>Field number for the "bucket" field.</summary>
        </member>
        <member name="T:Tensorflow.SummaryMetadata">
            <summary>
            A SummaryMetadata encapsulates information on which plugins are able to make
            use of a certain summary value.
            </summary>
        </member>
        <member name="F:Tensorflow.SummaryMetadata.PluginDataFieldNumber">
            <summary>Field number for the "plugin_data" field.</summary>
        </member>
        <member name="P:Tensorflow.SummaryMetadata.PluginData">
            <summary>
            Data that associates a summary with a certain plugin.
            </summary>
        </member>
        <member name="F:Tensorflow.SummaryMetadata.DisplayNameFieldNumber">
            <summary>Field number for the "display_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SummaryMetadata.DisplayName">
            <summary>
            Display name for viewing in TensorBoard.
            </summary>
        </member>
        <member name="F:Tensorflow.SummaryMetadata.SummaryDescriptionFieldNumber">
            <summary>Field number for the "summary_description" field.</summary>
        </member>
        <member name="P:Tensorflow.SummaryMetadata.SummaryDescription">
            <summary>
            Longform readable description of the summary sequence. Markdown supported.
            </summary>
        </member>
        <member name="F:Tensorflow.SummaryMetadata.DataClassFieldNumber">
            <summary>Field number for the "data_class" field.</summary>
        </member>
        <member name="P:Tensorflow.SummaryMetadata.DataClass">
            <summary>
            Class of data stored in this time series. Required for compatibility with
            TensorBoard's generic data facilities (`DataProvider`, et al.). This value
            imposes constraints on the dtype and shape of the corresponding tensor
            values. See `DataClass` docs for details.
            </summary>
        </member>
        <member name="T:Tensorflow.SummaryMetadata.Types">
            <summary>Container for nested types declared in the SummaryMetadata message type.</summary>
        </member>
        <member name="F:Tensorflow.SummaryMetadata.Types.PluginData.PluginNameFieldNumber">
            <summary>Field number for the "plugin_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SummaryMetadata.Types.PluginData.PluginName">
            <summary>
            The name of the plugin this data pertains to.
            </summary>
        </member>
        <member name="F:Tensorflow.SummaryMetadata.Types.PluginData.ContentFieldNumber">
            <summary>Field number for the "content" field.</summary>
        </member>
        <member name="P:Tensorflow.SummaryMetadata.Types.PluginData.Content">
            <summary>
            The content to store for the plugin. The best practice is for this to be
            a binary serialized protocol buffer.
            </summary>
        </member>
        <member name="T:Tensorflow.Summary">
             <summary>
             A Summary is a set of named values to be displayed by the
             visualizer.
            
             Summaries are produced regularly during training, as controlled by
             the "summary_interval_secs" attribute of the training operation.
             Summaries are also produced at the end of an evaluation.
             </summary>
        </member>
        <member name="F:Tensorflow.Summary.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Value">
            <summary>
            Set of values for the summary.
            </summary>
        </member>
        <member name="T:Tensorflow.Summary.Types">
            <summary>Container for nested types declared in the Summary message type.</summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Image.HeightFieldNumber">
            <summary>Field number for the "height" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Image.Height">
            <summary>
            Dimensions of the image.
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Image.WidthFieldNumber">
            <summary>Field number for the "width" field.</summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Image.ColorspaceFieldNumber">
            <summary>Field number for the "colorspace" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Image.Colorspace">
            <summary>
            Valid colorspace values are
              1 - grayscale
              2 - grayscale + alpha
              3 - RGB
              4 - RGBA
              5 - DIGITAL_YUV
              6 - BGRA
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Image.EncodedImageStringFieldNumber">
            <summary>Field number for the "encoded_image_string" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Image.EncodedImageString">
            <summary>
            Image data in encoded format.  All image formats supported by
            image_codec::CoderUtil can be stored here.
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Audio.SampleRateFieldNumber">
            <summary>Field number for the "sample_rate" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Audio.SampleRate">
            <summary>
            Sample rate of the audio in Hz.
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Audio.NumChannelsFieldNumber">
            <summary>Field number for the "num_channels" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Audio.NumChannels">
            <summary>
            Number of channels of audio.
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Audio.LengthFramesFieldNumber">
            <summary>Field number for the "length_frames" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Audio.LengthFrames">
            <summary>
            Length of the audio in frames (samples per channel).
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Audio.EncodedAudioStringFieldNumber">
            <summary>Field number for the "encoded_audio_string" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Audio.EncodedAudioString">
            <summary>
            Encoded audio data and its associated RFC 2045 content type (e.g.
            "audio/wav").
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Audio.ContentTypeFieldNumber">
            <summary>Field number for the "content_type" field.</summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.NodeNameFieldNumber">
            <summary>Field number for the "node_name" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Value.NodeName">
            <summary>
            This field is deprecated and will not be set.
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.TagFieldNumber">
            <summary>Field number for the "tag" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Value.Tag">
            <summary>
            Tag name for the data. Used by TensorBoard plugins to organize data. Tags
            are often organized by scope (which contains slashes to convey
            hierarchy). For example: foo/bar/0
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.MetadataFieldNumber">
            <summary>Field number for the "metadata" field.</summary>
        </member>
        <member name="P:Tensorflow.Summary.Types.Value.Metadata">
            <summary>
            Contains metadata on the summary value such as which plugins may use it.
            Take note that many summary values may lack a metadata field. This is
            because the FileWriter only keeps a metadata object on the first summary
            value with a certain tag for each tag. TensorBoard then remembers which
            tags are associated with which plugins. This saves space.
            </summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.SimpleValueFieldNumber">
            <summary>Field number for the "simple_value" field.</summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.ObsoleteOldStyleHistogramFieldNumber">
            <summary>Field number for the "obsolete_old_style_histogram" field.</summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.ImageFieldNumber">
            <summary>Field number for the "image" field.</summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.HistoFieldNumber">
            <summary>Field number for the "histo" field.</summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.AudioFieldNumber">
            <summary>Field number for the "audio" field.</summary>
        </member>
        <member name="F:Tensorflow.Summary.Types.Value.TensorFieldNumber">
            <summary>Field number for the "tensor" field.</summary>
        </member>
        <member name="T:Tensorflow.Summary.Types.Value.ValueOneofCase">
            <summary>Enum of possible cases for the "value" oneof.</summary>
        </member>
        <member name="T:Tensorflow.TensorReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/tensor.proto</summary>
        </member>
        <member name="P:Tensorflow.TensorReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/tensor.proto</summary>
        </member>
        <member name="T:Tensorflow.TensorProto">
            <summary>
            Protocol buffer representing a tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="F:Tensorflow.TensorProto.TensorShapeFieldNumber">
            <summary>Field number for the "tensor_shape" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.TensorShape">
            <summary>
            Shape of the tensor.  TODO(touts): sort out the 0-rank issues.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.VersionNumberFieldNumber">
            <summary>Field number for the "version_number" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.VersionNumber">
             <summary>
             Version number.
            
             In version 0, if the "repeated xxx" representations contain only one
             element, that element is repeated to fill the shape.  This makes it easy
             to represent a constant Tensor with a single value.
             </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.TensorContentFieldNumber">
            <summary>Field number for the "tensor_content" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.TensorContent">
            <summary>
            Serialized raw tensor content from either Tensor::AsProtoTensorContent or
            memcpy in tensorflow::grpc::EncodeTensorToByteBuffer. This representation
            can be used for all tensor types. The purpose of this representation is to
            reduce serialization overhead during RPC call by avoiding serialization of
            many repeated small items.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.HalfValFieldNumber">
            <summary>Field number for the "half_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.HalfVal">
            <summary>
            DT_HALF, DT_BFLOAT16. Note that since protobuf has no int16 type, we'll
            have some pointless zero padding for each value here.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.FloatValFieldNumber">
            <summary>Field number for the "float_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.FloatVal">
            <summary>
            DT_FLOAT.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.DoubleValFieldNumber">
            <summary>Field number for the "double_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.DoubleVal">
            <summary>
            DT_DOUBLE.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.IntValFieldNumber">
            <summary>Field number for the "int_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.IntVal">
            <summary>
            DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.StringValFieldNumber">
            <summary>Field number for the "string_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.StringVal">
            <summary>
            DT_STRING
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.ScomplexValFieldNumber">
            <summary>Field number for the "scomplex_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.ScomplexVal">
            <summary>
            DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
            and imaginary parts of i-th single precision complex.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.Int64ValFieldNumber">
            <summary>Field number for the "int64_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.Int64Val">
            <summary>
            DT_INT64
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.BoolValFieldNumber">
            <summary>Field number for the "bool_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.BoolVal">
            <summary>
            DT_BOOL
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.DcomplexValFieldNumber">
            <summary>Field number for the "dcomplex_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.DcomplexVal">
            <summary>
            DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
            and imaginary parts of i-th double precision complex.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.ResourceHandleValFieldNumber">
            <summary>Field number for the "resource_handle_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.ResourceHandleVal">
            <summary>
            DT_RESOURCE
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.VariantValFieldNumber">
            <summary>Field number for the "variant_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.VariantVal">
            <summary>
            DT_VARIANT
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.Uint32ValFieldNumber">
            <summary>Field number for the "uint32_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.Uint32Val">
            <summary>
            DT_UINT32
            </summary>
        </member>
        <member name="F:Tensorflow.TensorProto.Uint64ValFieldNumber">
            <summary>Field number for the "uint64_val" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorProto.Uint64Val">
            <summary>
            DT_UINT64
            </summary>
        </member>
        <member name="T:Tensorflow.VariantTensorDataProto">
            <summary>
            Protocol buffer representing the serialization format of DT_VARIANT tensors.
            </summary>
        </member>
        <member name="F:Tensorflow.VariantTensorDataProto.TypeNameFieldNumber">
            <summary>Field number for the "type_name" field.</summary>
        </member>
        <member name="P:Tensorflow.VariantTensorDataProto.TypeName">
            <summary>
            Name of the type of objects being serialized.
            </summary>
        </member>
        <member name="F:Tensorflow.VariantTensorDataProto.MetadataFieldNumber">
            <summary>Field number for the "metadata" field.</summary>
        </member>
        <member name="P:Tensorflow.VariantTensorDataProto.Metadata">
            <summary>
            Portions of the object that are not Tensors.
            </summary>
        </member>
        <member name="F:Tensorflow.VariantTensorDataProto.TensorsFieldNumber">
            <summary>Field number for the "tensors" field.</summary>
        </member>
        <member name="P:Tensorflow.VariantTensorDataProto.Tensors">
            <summary>
            Tensors contained within objects being serialized.
            </summary>
        </member>
        <member name="T:Tensorflow.TensorBundleReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/tensor_bundle.proto</summary>
        </member>
        <member name="P:Tensorflow.TensorBundleReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/tensor_bundle.proto</summary>
        </member>
        <member name="T:Tensorflow.BundleHeaderProto">
             <summary>
             Special header that is associated with a bundle.
            
             TODO(zongheng,zhifengc): maybe in the future, we can add information about
             which binary produced this checkpoint, timestamp, etc. Sometime, these can be
             valuable debugging information. And if needed, these can be used as defensive
             information ensuring reader (binary version) of the checkpoint and the writer
             (binary version) must match within certain range, etc.
             </summary>
        </member>
        <member name="F:Tensorflow.BundleHeaderProto.NumShardsFieldNumber">
            <summary>Field number for the "num_shards" field.</summary>
        </member>
        <member name="P:Tensorflow.BundleHeaderProto.NumShards">
            <summary>
            Number of data files in the bundle.
            </summary>
        </member>
        <member name="F:Tensorflow.BundleHeaderProto.EndiannessFieldNumber">
            <summary>Field number for the "endianness" field.</summary>
        </member>
        <member name="F:Tensorflow.BundleHeaderProto.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Tensorflow.BundleHeaderProto.Version">
            <summary>
            Versioning of the tensor bundle format.
            </summary>
        </member>
        <member name="T:Tensorflow.BundleHeaderProto.Types">
            <summary>Container for nested types declared in the BundleHeaderProto message type.</summary>
        </member>
        <member name="T:Tensorflow.BundleHeaderProto.Types.Endianness">
             <summary>
             An enum indicating the endianness of the platform that produced this
             bundle.  A bundle can only be read by a platform with matching endianness.
             Defaults to LITTLE, as most modern platforms are little-endian.
            
             Affects the binary tensor data bytes only, not the metadata in protobufs.
             </summary>
        </member>
        <member name="T:Tensorflow.BundleEntryProto">
            <summary>
            Describes the metadata related to a checkpointed tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.BundleEntryProto.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="P:Tensorflow.BundleEntryProto.Dtype">
            <summary>
            The tensor dtype and shape.
            </summary>
        </member>
        <member name="F:Tensorflow.BundleEntryProto.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="F:Tensorflow.BundleEntryProto.ShardIdFieldNumber">
            <summary>Field number for the "shard_id" field.</summary>
        </member>
        <member name="P:Tensorflow.BundleEntryProto.ShardId">
            <summary>
            The binary content of the tensor lies in:
              File "shard_id": bytes [offset, offset + size).
            </summary>
        </member>
        <member name="F:Tensorflow.BundleEntryProto.OffsetFieldNumber">
            <summary>Field number for the "offset" field.</summary>
        </member>
        <member name="F:Tensorflow.BundleEntryProto.SizeFieldNumber">
            <summary>Field number for the "size" field.</summary>
        </member>
        <member name="F:Tensorflow.BundleEntryProto.Crc32CFieldNumber">
            <summary>Field number for the "crc32c" field.</summary>
        </member>
        <member name="P:Tensorflow.BundleEntryProto.Crc32C">
            <summary>
            The CRC32C checksum of the tensor bytes.
            </summary>
        </member>
        <member name="F:Tensorflow.BundleEntryProto.SlicesFieldNumber">
            <summary>Field number for the "slices" field.</summary>
        </member>
        <member name="P:Tensorflow.BundleEntryProto.Slices">
             <summary>
             Iff present, this entry represents a partitioned tensor.  The previous
             fields are interpreted as follows:
            
               "dtype", "shape": describe the full tensor.
               "shard_id", "offset", "size", "crc32c": all IGNORED.
                  These information for each slice can be looked up in their own
                  BundleEntryProto, keyed by each "slice_name".
             </summary>
        </member>
        <member name="T:Tensorflow.TensorDescriptionReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/tensor_description.proto</summary>
        </member>
        <member name="P:Tensorflow.TensorDescriptionReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/tensor_description.proto</summary>
        </member>
        <member name="F:Tensorflow.TensorDescription.DtypeFieldNumber">
            <summary>Field number for the "dtype" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorDescription.Dtype">
            <summary>
            Data type of tensor elements
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDescription.ShapeFieldNumber">
            <summary>Field number for the "shape" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorDescription.Shape">
            <summary>
            Shape of the tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorDescription.AllocationDescriptionFieldNumber">
            <summary>Field number for the "allocation_description" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorDescription.AllocationDescription">
            <summary>
            Information about the size and allocator used for the data
            </summary>
        </member>
        <member name="T:Tensorflow.TensorflowServerReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/tensorflow_server.proto</summary>
        </member>
        <member name="P:Tensorflow.TensorflowServerReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/tensorflow_server.proto</summary>
        </member>
        <member name="T:Tensorflow.ServerDef">
            <summary>
            Defines the configuration of a single TensorFlow server.
            </summary>
        </member>
        <member name="F:Tensorflow.ServerDef.ClusterFieldNumber">
            <summary>Field number for the "cluster" field.</summary>
        </member>
        <member name="P:Tensorflow.ServerDef.Cluster">
            <summary>
            The cluster of which this server is a member.
            </summary>
        </member>
        <member name="F:Tensorflow.ServerDef.JobNameFieldNumber">
            <summary>Field number for the "job_name" field.</summary>
        </member>
        <member name="P:Tensorflow.ServerDef.JobName">
             <summary>
             The name of the job of which this server is a member.
            
             NOTE(mrry): The `cluster` field must contain a `JobDef` with a `name` field
             that matches this name.
             </summary>
        </member>
        <member name="F:Tensorflow.ServerDef.TaskIndexFieldNumber">
            <summary>Field number for the "task_index" field.</summary>
        </member>
        <member name="P:Tensorflow.ServerDef.TaskIndex">
             <summary>
             The task index of this server in its job.
            
             NOTE: The `cluster` field must contain a `JobDef` with a matching `name`
             and a mapping in its `tasks` field for this index.
             </summary>
        </member>
        <member name="F:Tensorflow.ServerDef.DefaultSessionConfigFieldNumber">
            <summary>Field number for the "default_session_config" field.</summary>
        </member>
        <member name="P:Tensorflow.ServerDef.DefaultSessionConfig">
            <summary>
            The default configuration for sessions that run on this server.
            </summary>
        </member>
        <member name="F:Tensorflow.ServerDef.ProtocolFieldNumber">
            <summary>Field number for the "protocol" field.</summary>
        </member>
        <member name="P:Tensorflow.ServerDef.Protocol">
             <summary>
             The protocol to be used by this server.
            
             Acceptable values include: "grpc", "grpc+verbs".
             </summary>
        </member>
        <member name="F:Tensorflow.ServerDef.PortFieldNumber">
            <summary>Field number for the "port" field.</summary>
        </member>
        <member name="P:Tensorflow.ServerDef.Port">
            <summary>
            The server port. If not set, then we identify the port from the job_name.
            </summary>
        </member>
        <member name="F:Tensorflow.ServerDef.ClusterDeviceFiltersFieldNumber">
            <summary>Field number for the "cluster_device_filters" field.</summary>
        </member>
        <member name="P:Tensorflow.ServerDef.ClusterDeviceFilters">
            <summary>
            Device filters for remote tasks in the cluster.
            NOTE: This is an experimental feature and only effective in TensorFlow 2.x.
            </summary>
        </member>
        <member name="T:Tensorflow.TensorShapeReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/tensor_shape.proto</summary>
        </member>
        <member name="P:Tensorflow.TensorShapeReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/tensor_shape.proto</summary>
        </member>
        <member name="T:Tensorflow.TensorShapeProto">
            <summary>
            Dimensions of a tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorShapeProto.DimFieldNumber">
            <summary>Field number for the "dim" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorShapeProto.Dim">
             <summary>
             Dimensions of the tensor, such as {"input", 30}, {"output", 40}
             for a 30 x 40 2D tensor.  If an entry has size -1, this
             corresponds to a dimension of unknown size. The names are
             optional.
            
             The order of entries in "dim" matters: It indicates the layout of the
             values in the tensor in-memory representation.
            
             The first entry in "dim" is the outermost dimension used to layout the
             values, the last entry is the innermost dimension.  This matches the
             in-memory layout of RowMajor Eigen tensors.
            
             If "dim.size()" > 0, "unknown_rank" must be false.
             </summary>
        </member>
        <member name="F:Tensorflow.TensorShapeProto.UnknownRankFieldNumber">
            <summary>Field number for the "unknown_rank" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorShapeProto.UnknownRank">
             <summary>
             If true, the number of dimensions in the shape is unknown.
            
             If true, "dim.size()" must be 0.
             </summary>
        </member>
        <member name="T:Tensorflow.TensorShapeProto.Types">
            <summary>Container for nested types declared in the TensorShapeProto message type.</summary>
        </member>
        <member name="T:Tensorflow.TensorShapeProto.Types.Dim">
            <summary>
            One dimension of the tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorShapeProto.Types.Dim.SizeFieldNumber">
            <summary>Field number for the "size" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorShapeProto.Types.Dim.Size">
            <summary>
            Size of the tensor in that dimension.
            This value must be >= -1, but values of -1 are reserved for "unknown"
            shapes (values of -1 mean "unknown" dimension).  Certain wrappers
            that work with TensorShapeProto may fail at runtime when deserializing
            a TensorShapeProto containing a dim value of -1.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorShapeProto.Types.Dim.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorShapeProto.Types.Dim.Name">
            <summary>
            Optional name of the tensor dimension.
            </summary>
        </member>
        <member name="T:Tensorflow.TensorSliceReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/tensor_slice.proto</summary>
        </member>
        <member name="P:Tensorflow.TensorSliceReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/tensor_slice.proto</summary>
        </member>
        <member name="T:Tensorflow.TensorSliceProto">
            <summary>
            Can only be interpreted if you know the corresponding TensorShape.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorSliceProto.ExtentFieldNumber">
            <summary>Field number for the "extent" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorSliceProto.Extent">
             <summary>
             Extent of the slice in all tensor dimensions.
            
             Must have one entry for each of the dimension of the tensor that this
             slice belongs to.  The order of sizes is the same as the order of
             dimensions in the TensorShape.
             </summary>
        </member>
        <member name="T:Tensorflow.TensorSliceProto.Types">
            <summary>Container for nested types declared in the TensorSliceProto message type.</summary>
        </member>
        <member name="T:Tensorflow.TensorSliceProto.Types.Extent">
            <summary>
            Extent of the slice in one dimension.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorSliceProto.Types.Extent.StartFieldNumber">
            <summary>Field number for the "start" field.</summary>
        </member>
        <member name="P:Tensorflow.TensorSliceProto.Types.Extent.Start">
            <summary>
            Start index of the slice, starting at 0.
            </summary>
        </member>
        <member name="F:Tensorflow.TensorSliceProto.Types.Extent.LengthFieldNumber">
            <summary>Field number for the "length" field.</summary>
        </member>
        <member name="T:Tensorflow.TensorSliceProto.Types.Extent.HasLengthOneofCase">
            <summary>Enum of possible cases for the "has_length" oneof.</summary>
        </member>
        <member name="T:Tensorflow.TrackableObjectGraphReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/trackable_object_graph.proto</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraphReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/trackable_object_graph.proto</summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.NodesFieldNumber">
            <summary>Field number for the "nodes" field.</summary>
        </member>
        <member name="T:Tensorflow.TrackableObjectGraph.Types">
            <summary>Container for nested types declared in the TrackableObjectGraph message type.</summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.ChildrenFieldNumber">
            <summary>Field number for the "children" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Children">
            <summary>
            Objects which this object depends on.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.AttributesFieldNumber">
            <summary>Field number for the "attributes" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Attributes">
            <summary>
            Serialized data specific to this object.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.SlotVariablesFieldNumber">
            <summary>Field number for the "slot_variables" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.SlotVariables">
            <summary>
            Slot variables owned by this object.
            </summary>
        </member>
        <member name="T:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types">
            <summary>Container for nested types declared in the TrackableObject message type.</summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.ObjectReference.NodeIdFieldNumber">
            <summary>Field number for the "node_id" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.ObjectReference.NodeId">
            <summary>
            An index into `TrackableObjectGraph.nodes`, indicating the object
            being referenced.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.ObjectReference.LocalNameFieldNumber">
            <summary>Field number for the "local_name" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.ObjectReference.LocalName">
            <summary>
            A user-provided name for the edge.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SerializedTensor.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SerializedTensor.Name">
            <summary>
            A name for the Tensor. Simple variables have only one
            `SerializedTensor` named "VARIABLE_VALUE" by convention. This value may
            be restored on object creation as an optimization.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SerializedTensor.FullNameFieldNumber">
            <summary>Field number for the "full_name" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SerializedTensor.FullName">
            <summary>
            The full name of the variable/tensor, if applicable. Used to allow
            name-based loading of checkpoints which were saved using an
            object-based API. Should match the checkpoint key which would have been
            assigned by tf.train.Saver.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SerializedTensor.CheckpointKeyFieldNumber">
            <summary>Field number for the "checkpoint_key" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SerializedTensor.CheckpointKey">
            <summary>
            The generated name of the Tensor in the checkpoint.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SerializedTensor.OptionalRestoreFieldNumber">
            <summary>Field number for the "optional_restore" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SerializedTensor.OptionalRestore">
            <summary>
            Whether checkpoints should be considered as matching even without this
            value restored. Used for non-critical values which don't affect the
            TensorFlow graph, such as layer configurations.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SlotVariableReference.OriginalVariableNodeIdFieldNumber">
            <summary>Field number for the "original_variable_node_id" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SlotVariableReference.OriginalVariableNodeId">
            <summary>
            An index into `TrackableObjectGraph.nodes`, indicating the
            variable object this slot was created for.
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SlotVariableReference.SlotNameFieldNumber">
            <summary>Field number for the "slot_name" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SlotVariableReference.SlotName">
            <summary>
            The name of the slot (e.g. "m"/"v").
            </summary>
        </member>
        <member name="F:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SlotVariableReference.SlotVariableNodeIdFieldNumber">
            <summary>Field number for the "slot_variable_node_id" field.</summary>
        </member>
        <member name="P:Tensorflow.TrackableObjectGraph.Types.TrackableObject.Types.SlotVariableReference.SlotVariableNodeId">
            <summary>
            An index into `TrackableObjectGraph.nodes`, indicating the
            `Object` with the value of the slot variable.
            </summary>
        </member>
        <member name="T:Tensorflow.TransportOptionsReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/transport_options.proto</summary>
        </member>
        <member name="P:Tensorflow.TransportOptionsReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/transport_options.proto</summary>
        </member>
        <member name="T:Tensorflow.RecvBufRespExtra">
            <summary>
            Extra data needed on a non-RDMA RecvBufResponse.
            </summary>
        </member>
        <member name="F:Tensorflow.RecvBufRespExtra.TensorContentFieldNumber">
            <summary>Field number for the "tensor_content" field.</summary>
        </member>
        <member name="T:Tensorflow.TypesReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/types.proto</summary>
        </member>
        <member name="P:Tensorflow.TypesReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/types.proto</summary>
        </member>
        <member name="T:Tensorflow.DataType">
            <summary>
            (== suppress_warning documentation-presence ==)
            LINT.IfChange
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtInvalid">
            <summary>
            Not a legal value for DataType.  Used to indicate a DataType field
            has not been set.
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtFloat">
            <summary>
            Data types that all computation devices are expected to be
            capable to support.
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtComplex64">
            <summary>
            Single-precision complex
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtQint8">
            <summary>
            Quantized int8
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtQuint8">
            <summary>
            Quantized uint8
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtQint32">
            <summary>
            Quantized int32
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtBfloat16">
            <summary>
            Float32 truncated to 16 bits.  Only for cast ops.
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtQint16">
            <summary>
            Quantized int16
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtQuint16">
            <summary>
            Quantized uint16
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtComplex128">
            <summary>
            Double-precision complex
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtVariant">
            <summary>
            Arbitrary C++ data types
            </summary>
        </member>
        <member name="F:Tensorflow.DataType.DtFloatRef">
            <summary>
            Do not use!  These are only for parameters.  Every enum above
            should have a corresponding value below (verified by types_test).
            </summary>
        </member>
        <member name="T:Tensorflow.VariableReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/variable.proto</summary>
        </member>
        <member name="P:Tensorflow.VariableReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/variable.proto</summary>
        </member>
        <member name="T:Tensorflow.VariableSynchronization">
            <summary>
            Indicates when a distributed variable will be synced.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableSynchronization.Auto">
            <summary>
            `AUTO`: Indicates that the synchronization will be determined by the
            current `DistributionStrategy` (eg. With `MirroredStrategy` this would be
            `ON_WRITE`).
            </summary>
        </member>
        <member name="F:Tensorflow.VariableSynchronization.None">
            <summary>
            `NONE`: Indicates that there will only be one copy of the variable, so
            there is no need to sync.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableSynchronization.OnWrite">
            <summary>
            `ON_WRITE`: Indicates that the variable will be updated across devices
            every time it is written.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableSynchronization.OnRead">
            <summary>
            `ON_READ`: Indicates that the variable will be aggregated across devices
            when it is read (eg. when checkpointing or when evaluating an op that uses
            the variable).
            </summary>
        </member>
        <member name="T:Tensorflow.VariableAggregation">
            <summary>
            Indicates how a distributed variable will be aggregated.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableAggregation.None">
            <summary>
            `NONE`: This is the default, giving an error if you use a
            variable-update operation with multiple replicas.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableAggregation.Sum">
            <summary>
            `SUM`: Add the updates across replicas.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableAggregation.Mean">
            <summary>
            `MEAN`: Take the arithmetic mean ("average") of the updates across
            replicas.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableAggregation.OnlyFirstReplica">
            <summary>
            `ONLY_FIRST_REPLICA`: This is for when every replica is performing the same
            update, but we only want to perform the update once. Used, e.g., for the
            global step counter.
            </summary>
        </member>
        <member name="T:Tensorflow.VariableDef">
            <summary>
            Protocol buffer representing a Variable.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.VariableNameFieldNumber">
            <summary>Field number for the "variable_name" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.VariableName">
            <summary>
            Name of the variable tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.InitialValueNameFieldNumber">
            <summary>Field number for the "initial_value_name" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.InitialValueName">
            <summary>
            Name of the tensor holding the variable's initial value.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.InitializerNameFieldNumber">
            <summary>Field number for the "initializer_name" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.InitializerName">
            <summary>
            Name of the initializer op.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.SnapshotNameFieldNumber">
            <summary>Field number for the "snapshot_name" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.SnapshotName">
            <summary>
            Name of the snapshot tensor.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.SaveSliceInfoDefFieldNumber">
            <summary>Field number for the "save_slice_info_def" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.SaveSliceInfoDef">
            <summary>
            Support for saving variables as slices of a larger variable.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.IsResourceFieldNumber">
            <summary>Field number for the "is_resource" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.IsResource">
            <summary>
            Whether to represent this as a ResourceVariable.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.TrainableFieldNumber">
            <summary>Field number for the "trainable" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.Trainable">
            <summary>
            Whether this variable should be trained.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.SynchronizationFieldNumber">
            <summary>Field number for the "synchronization" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.Synchronization">
            <summary>
            Indicates when a distributed variable will be synced.
            </summary>
        </member>
        <member name="F:Tensorflow.VariableDef.AggregationFieldNumber">
            <summary>Field number for the "aggregation" field.</summary>
        </member>
        <member name="P:Tensorflow.VariableDef.Aggregation">
            <summary>
            Indicates how a distributed variable will be aggregated.
            </summary>
        </member>
        <member name="F:Tensorflow.SaveSliceInfoDef.FullNameFieldNumber">
            <summary>Field number for the "full_name" field.</summary>
        </member>
        <member name="P:Tensorflow.SaveSliceInfoDef.FullName">
            <summary>
            Name of the full variable of which this is a slice.
            </summary>
        </member>
        <member name="F:Tensorflow.SaveSliceInfoDef.FullShapeFieldNumber">
            <summary>Field number for the "full_shape" field.</summary>
        </member>
        <member name="P:Tensorflow.SaveSliceInfoDef.FullShape">
            <summary>
            Shape of the full variable.
            </summary>
        </member>
        <member name="F:Tensorflow.SaveSliceInfoDef.VarOffsetFieldNumber">
            <summary>Field number for the "var_offset" field.</summary>
        </member>
        <member name="P:Tensorflow.SaveSliceInfoDef.VarOffset">
            <summary>
            Offset of this variable into the full variable.
            </summary>
        </member>
        <member name="F:Tensorflow.SaveSliceInfoDef.VarShapeFieldNumber">
            <summary>Field number for the "var_shape" field.</summary>
        </member>
        <member name="P:Tensorflow.SaveSliceInfoDef.VarShape">
            <summary>
            Shape of this variable.
            </summary>
        </member>
        <member name="T:Tensorflow.VerifierConfigReflection">
            <summary>Holder for reflection information generated from tensorflow/core/protobuf/verifier_config.proto</summary>
        </member>
        <member name="P:Tensorflow.VerifierConfigReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/protobuf/verifier_config.proto</summary>
        </member>
        <member name="T:Tensorflow.VerifierConfig">
            <summary>
            The config for graph verifiers.
            </summary>
        </member>
        <member name="F:Tensorflow.VerifierConfig.VerificationTimeoutInMsFieldNumber">
            <summary>Field number for the "verification_timeout_in_ms" field.</summary>
        </member>
        <member name="P:Tensorflow.VerifierConfig.VerificationTimeoutInMs">
            <summary>
            Deadline for completion of all verification i.e. all the Toggle ON
            verifiers must complete execution within this time.
            </summary>
        </member>
        <member name="F:Tensorflow.VerifierConfig.StructureVerifierFieldNumber">
            <summary>Field number for the "structure_verifier" field.</summary>
        </member>
        <member name="P:Tensorflow.VerifierConfig.StructureVerifier">
            <summary>
            Perform structural validation on a tensorflow graph. Default is OFF.
            </summary>
        </member>
        <member name="T:Tensorflow.VerifierConfig.Types">
            <summary>Container for nested types declared in the VerifierConfig message type.</summary>
        </member>
        <member name="T:Tensorflow.VersionsReflection">
            <summary>Holder for reflection information generated from tensorflow/core/framework/versions.proto</summary>
        </member>
        <member name="P:Tensorflow.VersionsReflection.Descriptor">
            <summary>File descriptor for tensorflow/core/framework/versions.proto</summary>
        </member>
        <member name="T:Tensorflow.VersionDef">
             <summary>
             Version information for a piece of serialized data
            
             There are different types of versions for each type of data
             (GraphDef, etc.), but they all have the same common shape
             described here.
            
             Each consumer has "consumer" and "min_producer" versions (specified
             elsewhere).  A consumer is allowed to consume this data if
            
               producer >= min_producer
               consumer >= min_consumer
               consumer not in bad_consumers
             </summary>
        </member>
        <member name="F:Tensorflow.VersionDef.ProducerFieldNumber">
            <summary>Field number for the "producer" field.</summary>
        </member>
        <member name="P:Tensorflow.VersionDef.Producer">
            <summary>
            The version of the code that produced this data.
            </summary>
        </member>
        <member name="F:Tensorflow.VersionDef.MinConsumerFieldNumber">
            <summary>Field number for the "min_consumer" field.</summary>
        </member>
        <member name="P:Tensorflow.VersionDef.MinConsumer">
            <summary>
            Any consumer below this version is not allowed to consume this data.
            </summary>
        </member>
        <member name="F:Tensorflow.VersionDef.BadConsumersFieldNumber">
            <summary>Field number for the "bad_consumers" field.</summary>
        </member>
        <member name="P:Tensorflow.VersionDef.BadConsumers">
            <summary>
            Specific consumer versions which are disallowed (e.g. due to bugs).
            </summary>
        </member>
        <member name="T:StreamExecutor.Dnn.DnnReflection">
            <summary>Holder for reflection information generated from tensorflow/stream_executor/dnn.proto</summary>
        </member>
        <member name="P:StreamExecutor.Dnn.DnnReflection.Descriptor">
            <summary>File descriptor for tensorflow/stream_executor/dnn.proto</summary>
        </member>
        <member name="T:StreamExecutor.Dnn.DataType">
            <summary>
            Specifies the data type used by an operation.
            </summary>
        </member>
        <member name="T:StreamExecutor.Dnn.DataLayout">
            <summary>
            Describes how a convolution input or output layer's data is formatted.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.DataLayout.KYxdepthBatch">
            <summary>
            Naming convention:
            Y &lt;-> row or height
            X &lt;-> column or width
            Batch &lt;-> batch, or N
            Depth &lt;-> feature, or channel
            TODO(timshen): turn them into cuDNN names, e.g. kNCHW.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.DataLayout.KBatchYxdepth">
            <summary>
            cuDNN's NHWC layout
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.DataLayout.KBatchDepthYx">
            <summary>
            cuDNN's NCHW layout
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.DataLayout.KBatchDepthYx4">
            <summary>
            cuDNN's NCHW_VECT_C layout
            </summary>
        </member>
        <member name="T:StreamExecutor.Dnn.FilterLayout">
            <summary>
            Describes how a convolution filter is laid out in the memory.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.FilterLayout.KOutputInputYx">
            <summary>
            Naming convention:
            Y &lt;-> row or height
            X &lt;-> column or width
            Output &lt;-> output feature, or N
            Input &lt;-> input feature, or N
            TODO(timshen): turn them into cuDNN names, e.g. kNCHW.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.FilterLayout.KOutputYxinput">
            <summary>
            cuDNN's NHWC layout
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.FilterLayout.KOutputInputYx4">
            <summary>
            cuDNN's NCHW_VECT_C layout
            </summary>
        </member>
        <member name="T:StreamExecutor.Dnn.ActivationMode">
            <summary>
            Describes a kind of non-linearity (threshold-like mathematical function).
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ActivationMode.KRelu">
            <summary>
            Rectified linear activation: f(x) = x &lt; 0 ? 0 : x
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ActivationMode.KRelu6">
            <summary>
            Rectified linear activation; where upper maximum is 6.0.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ActivationMode.KReluX">
            <summary>
            Rectified linear activation; where upper maximum specified by
            BatchDescriptor::value_max().
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ActivationMode.KBandPass">
            <summary>
            Like ReluX; but passes all values in the range [-X,X].
            </summary>
        </member>
        <member name="T:StreamExecutor.Dnn.ConvolutionMode">
            <summary>
            Describe the math definition for the conv op. The popular behavior is
            actually called cross-correlation in math, despite the operation is often
            referred as convolution. See cuDNN cudnnConvolutionMode_t.
            </summary>
        </member>
        <member name="T:StreamExecutor.Dnn.TensorDescriptorProto">
            <summary>
            Generic tensor representation.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.TensorDescriptorProto.DimensionsFieldNumber">
            <summary>Field number for the "dimensions" field.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.TensorDescriptorProto.DataTypeFieldNumber">
            <summary>Field number for the "data_type" field.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.TensorDescriptorProto.DataLayoutFieldNumber">
            <summary>Field number for the "data_layout" field.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.TensorDescriptorProto.FilterLayoutFieldNumber">
            <summary>Field number for the "filter_layout" field.</summary>
        </member>
        <member name="T:StreamExecutor.Dnn.TensorDescriptorProto.LayoutOneofOneofCase">
            <summary>Enum of possible cases for the "layout_oneof" oneof.</summary>
        </member>
        <member name="T:StreamExecutor.Dnn.AlgorithmProto">
            <summary>
            Generic algorithm representation.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.AlgorithmProto.AlgoIdFieldNumber">
            <summary>Field number for the "algo_id" field.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.AlgorithmProto.MathTypeFieldNumber">
            <summary>Field number for the "math_type" field.</summary>
        </member>
        <member name="T:StreamExecutor.Dnn.AlgorithmProto.Types">
            <summary>Container for nested types declared in the AlgorithmProto message type.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.AlgorithmProto.Types.MathType.TensorOpMath">
            <summary>
            The GPU may operate 4x4 matrix FMA.
            See cuDNN's documentation for CUDNN_TENSOR_OP_MATH.
            </summary>
        </member>
        <member name="T:StreamExecutor.Dnn.ConvolutionDescriptorProto">
            <summary>
            Convolution-specific parameters.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ConvolutionDescriptorProto.PaddingsFieldNumber">
            <summary>Field number for the "paddings" field.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ConvolutionDescriptorProto.StridesFieldNumber">
            <summary>Field number for the "strides" field.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ConvolutionDescriptorProto.DilationsFieldNumber">
            <summary>Field number for the "dilations" field.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ConvolutionDescriptorProto.ComputeModeFieldNumber">
            <summary>Field number for the "compute_mode" field.</summary>
        </member>
        <member name="P:StreamExecutor.Dnn.ConvolutionDescriptorProto.ComputeMode">
            <summary>
            The "accumulator" type. For example, use F32 as an accumulator for F16
            convolutions.
            See cuDNN's cudnnConvolutionMode_t.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ConvolutionDescriptorProto.GroupCountFieldNumber">
            <summary>Field number for the "group_count" field.</summary>
        </member>
        <member name="P:StreamExecutor.Dnn.ConvolutionDescriptorProto.GroupCount">
            <summary>
            See cuDNN's group count.
            </summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ConvolutionDescriptorProto.ConvolutionModeFieldNumber">
            <summary>Field number for the "convolution_mode" field.</summary>
        </member>
        <member name="F:StreamExecutor.Dnn.ConvolutionDescriptorProto.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:StreamExecutor.Dnn.ConvolutionDescriptorProto.Name">
            <summary>
            Tensorflow node name, same as in NodeDef, for debugging purposes.
            </summary>
        </member>
    </members>
</doc>
